
TFT.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00007994  080001a0  080001a0  000101a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000938  08007b38  08007b38  00017b38  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08008470  08008470  000201dc  2**0
                  CONTENTS
  4 .ARM          00000000  08008470  08008470  000201dc  2**0
                  CONTENTS
  5 .preinit_array 00000000  08008470  08008470  000201dc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08008470  08008470  00018470  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08008474  08008474  00018474  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000001dc  20000000  08008478  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000040  200001dc  08008654  000201dc  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000021c  08008654  0002021c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000201dc  2**0
                  CONTENTS, READONLY
 12 .debug_info   00005f1e  00000000  00000000  0002020c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00001072  00000000  00000000  0002612a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000478  00000000  00000000  000271a0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000400  00000000  00000000  00027618  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00015fd7  00000000  00000000  00027a18  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00004783  00000000  00000000  0003d9ef  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000859f3  00000000  00000000  00042172  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  000c7b65  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00002a04  00000000  00000000  000c7bb8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .stabstr      0000004e  00000000  00000000  000ca5bc  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	; (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	; (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	; (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	200001dc 	.word	0x200001dc
 80001bc:	00000000 	.word	0x00000000
 80001c0:	08007b1c 	.word	0x08007b1c

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	; (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	; (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	; (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	200001e0 	.word	0x200001e0
 80001dc:	08007b1c 	.word	0x08007b1c

080001e0 <strlen>:
 80001e0:	4603      	mov	r3, r0
 80001e2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80001e6:	2a00      	cmp	r2, #0
 80001e8:	d1fb      	bne.n	80001e2 <strlen+0x2>
 80001ea:	1a18      	subs	r0, r3, r0
 80001ec:	3801      	subs	r0, #1
 80001ee:	4770      	bx	lr

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <__aeabi_drsub>:
 8000290:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000294:	e002      	b.n	800029c <__adddf3>
 8000296:	bf00      	nop

08000298 <__aeabi_dsub>:
 8000298:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0800029c <__adddf3>:
 800029c:	b530      	push	{r4, r5, lr}
 800029e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002a2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002a6:	ea94 0f05 	teq	r4, r5
 80002aa:	bf08      	it	eq
 80002ac:	ea90 0f02 	teqeq	r0, r2
 80002b0:	bf1f      	itttt	ne
 80002b2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002b6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002ba:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002be:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002c2:	f000 80e2 	beq.w	800048a <__adddf3+0x1ee>
 80002c6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002ca:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002ce:	bfb8      	it	lt
 80002d0:	426d      	neglt	r5, r5
 80002d2:	dd0c      	ble.n	80002ee <__adddf3+0x52>
 80002d4:	442c      	add	r4, r5
 80002d6:	ea80 0202 	eor.w	r2, r0, r2
 80002da:	ea81 0303 	eor.w	r3, r1, r3
 80002de:	ea82 0000 	eor.w	r0, r2, r0
 80002e2:	ea83 0101 	eor.w	r1, r3, r1
 80002e6:	ea80 0202 	eor.w	r2, r0, r2
 80002ea:	ea81 0303 	eor.w	r3, r1, r3
 80002ee:	2d36      	cmp	r5, #54	; 0x36
 80002f0:	bf88      	it	hi
 80002f2:	bd30      	pophi	{r4, r5, pc}
 80002f4:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80002f8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80002fc:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000300:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000304:	d002      	beq.n	800030c <__adddf3+0x70>
 8000306:	4240      	negs	r0, r0
 8000308:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800030c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000310:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000314:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000318:	d002      	beq.n	8000320 <__adddf3+0x84>
 800031a:	4252      	negs	r2, r2
 800031c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000320:	ea94 0f05 	teq	r4, r5
 8000324:	f000 80a7 	beq.w	8000476 <__adddf3+0x1da>
 8000328:	f1a4 0401 	sub.w	r4, r4, #1
 800032c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000330:	db0d      	blt.n	800034e <__adddf3+0xb2>
 8000332:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000336:	fa22 f205 	lsr.w	r2, r2, r5
 800033a:	1880      	adds	r0, r0, r2
 800033c:	f141 0100 	adc.w	r1, r1, #0
 8000340:	fa03 f20e 	lsl.w	r2, r3, lr
 8000344:	1880      	adds	r0, r0, r2
 8000346:	fa43 f305 	asr.w	r3, r3, r5
 800034a:	4159      	adcs	r1, r3
 800034c:	e00e      	b.n	800036c <__adddf3+0xd0>
 800034e:	f1a5 0520 	sub.w	r5, r5, #32
 8000352:	f10e 0e20 	add.w	lr, lr, #32
 8000356:	2a01      	cmp	r2, #1
 8000358:	fa03 fc0e 	lsl.w	ip, r3, lr
 800035c:	bf28      	it	cs
 800035e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000362:	fa43 f305 	asr.w	r3, r3, r5
 8000366:	18c0      	adds	r0, r0, r3
 8000368:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800036c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000370:	d507      	bpl.n	8000382 <__adddf3+0xe6>
 8000372:	f04f 0e00 	mov.w	lr, #0
 8000376:	f1dc 0c00 	rsbs	ip, ip, #0
 800037a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800037e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000382:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000386:	d31b      	bcc.n	80003c0 <__adddf3+0x124>
 8000388:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800038c:	d30c      	bcc.n	80003a8 <__adddf3+0x10c>
 800038e:	0849      	lsrs	r1, r1, #1
 8000390:	ea5f 0030 	movs.w	r0, r0, rrx
 8000394:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000398:	f104 0401 	add.w	r4, r4, #1
 800039c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003a0:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80003a4:	f080 809a 	bcs.w	80004dc <__adddf3+0x240>
 80003a8:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80003ac:	bf08      	it	eq
 80003ae:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003b2:	f150 0000 	adcs.w	r0, r0, #0
 80003b6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003ba:	ea41 0105 	orr.w	r1, r1, r5
 80003be:	bd30      	pop	{r4, r5, pc}
 80003c0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003c4:	4140      	adcs	r0, r0
 80003c6:	eb41 0101 	adc.w	r1, r1, r1
 80003ca:	3c01      	subs	r4, #1
 80003cc:	bf28      	it	cs
 80003ce:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80003d2:	d2e9      	bcs.n	80003a8 <__adddf3+0x10c>
 80003d4:	f091 0f00 	teq	r1, #0
 80003d8:	bf04      	itt	eq
 80003da:	4601      	moveq	r1, r0
 80003dc:	2000      	moveq	r0, #0
 80003de:	fab1 f381 	clz	r3, r1
 80003e2:	bf08      	it	eq
 80003e4:	3320      	addeq	r3, #32
 80003e6:	f1a3 030b 	sub.w	r3, r3, #11
 80003ea:	f1b3 0220 	subs.w	r2, r3, #32
 80003ee:	da0c      	bge.n	800040a <__adddf3+0x16e>
 80003f0:	320c      	adds	r2, #12
 80003f2:	dd08      	ble.n	8000406 <__adddf3+0x16a>
 80003f4:	f102 0c14 	add.w	ip, r2, #20
 80003f8:	f1c2 020c 	rsb	r2, r2, #12
 80003fc:	fa01 f00c 	lsl.w	r0, r1, ip
 8000400:	fa21 f102 	lsr.w	r1, r1, r2
 8000404:	e00c      	b.n	8000420 <__adddf3+0x184>
 8000406:	f102 0214 	add.w	r2, r2, #20
 800040a:	bfd8      	it	le
 800040c:	f1c2 0c20 	rsble	ip, r2, #32
 8000410:	fa01 f102 	lsl.w	r1, r1, r2
 8000414:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000418:	bfdc      	itt	le
 800041a:	ea41 010c 	orrle.w	r1, r1, ip
 800041e:	4090      	lslle	r0, r2
 8000420:	1ae4      	subs	r4, r4, r3
 8000422:	bfa2      	ittt	ge
 8000424:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000428:	4329      	orrge	r1, r5
 800042a:	bd30      	popge	{r4, r5, pc}
 800042c:	ea6f 0404 	mvn.w	r4, r4
 8000430:	3c1f      	subs	r4, #31
 8000432:	da1c      	bge.n	800046e <__adddf3+0x1d2>
 8000434:	340c      	adds	r4, #12
 8000436:	dc0e      	bgt.n	8000456 <__adddf3+0x1ba>
 8000438:	f104 0414 	add.w	r4, r4, #20
 800043c:	f1c4 0220 	rsb	r2, r4, #32
 8000440:	fa20 f004 	lsr.w	r0, r0, r4
 8000444:	fa01 f302 	lsl.w	r3, r1, r2
 8000448:	ea40 0003 	orr.w	r0, r0, r3
 800044c:	fa21 f304 	lsr.w	r3, r1, r4
 8000450:	ea45 0103 	orr.w	r1, r5, r3
 8000454:	bd30      	pop	{r4, r5, pc}
 8000456:	f1c4 040c 	rsb	r4, r4, #12
 800045a:	f1c4 0220 	rsb	r2, r4, #32
 800045e:	fa20 f002 	lsr.w	r0, r0, r2
 8000462:	fa01 f304 	lsl.w	r3, r1, r4
 8000466:	ea40 0003 	orr.w	r0, r0, r3
 800046a:	4629      	mov	r1, r5
 800046c:	bd30      	pop	{r4, r5, pc}
 800046e:	fa21 f004 	lsr.w	r0, r1, r4
 8000472:	4629      	mov	r1, r5
 8000474:	bd30      	pop	{r4, r5, pc}
 8000476:	f094 0f00 	teq	r4, #0
 800047a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800047e:	bf06      	itte	eq
 8000480:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000484:	3401      	addeq	r4, #1
 8000486:	3d01      	subne	r5, #1
 8000488:	e74e      	b.n	8000328 <__adddf3+0x8c>
 800048a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800048e:	bf18      	it	ne
 8000490:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000494:	d029      	beq.n	80004ea <__adddf3+0x24e>
 8000496:	ea94 0f05 	teq	r4, r5
 800049a:	bf08      	it	eq
 800049c:	ea90 0f02 	teqeq	r0, r2
 80004a0:	d005      	beq.n	80004ae <__adddf3+0x212>
 80004a2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004a6:	bf04      	itt	eq
 80004a8:	4619      	moveq	r1, r3
 80004aa:	4610      	moveq	r0, r2
 80004ac:	bd30      	pop	{r4, r5, pc}
 80004ae:	ea91 0f03 	teq	r1, r3
 80004b2:	bf1e      	ittt	ne
 80004b4:	2100      	movne	r1, #0
 80004b6:	2000      	movne	r0, #0
 80004b8:	bd30      	popne	{r4, r5, pc}
 80004ba:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004be:	d105      	bne.n	80004cc <__adddf3+0x230>
 80004c0:	0040      	lsls	r0, r0, #1
 80004c2:	4149      	adcs	r1, r1
 80004c4:	bf28      	it	cs
 80004c6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80004ca:	bd30      	pop	{r4, r5, pc}
 80004cc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80004d0:	bf3c      	itt	cc
 80004d2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80004d6:	bd30      	popcc	{r4, r5, pc}
 80004d8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80004dc:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80004e0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80004e4:	f04f 0000 	mov.w	r0, #0
 80004e8:	bd30      	pop	{r4, r5, pc}
 80004ea:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004ee:	bf1a      	itte	ne
 80004f0:	4619      	movne	r1, r3
 80004f2:	4610      	movne	r0, r2
 80004f4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80004f8:	bf1c      	itt	ne
 80004fa:	460b      	movne	r3, r1
 80004fc:	4602      	movne	r2, r0
 80004fe:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000502:	bf06      	itte	eq
 8000504:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000508:	ea91 0f03 	teqeq	r1, r3
 800050c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000510:	bd30      	pop	{r4, r5, pc}
 8000512:	bf00      	nop

08000514 <__aeabi_ui2d>:
 8000514:	f090 0f00 	teq	r0, #0
 8000518:	bf04      	itt	eq
 800051a:	2100      	moveq	r1, #0
 800051c:	4770      	bxeq	lr
 800051e:	b530      	push	{r4, r5, lr}
 8000520:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000524:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000528:	f04f 0500 	mov.w	r5, #0
 800052c:	f04f 0100 	mov.w	r1, #0
 8000530:	e750      	b.n	80003d4 <__adddf3+0x138>
 8000532:	bf00      	nop

08000534 <__aeabi_i2d>:
 8000534:	f090 0f00 	teq	r0, #0
 8000538:	bf04      	itt	eq
 800053a:	2100      	moveq	r1, #0
 800053c:	4770      	bxeq	lr
 800053e:	b530      	push	{r4, r5, lr}
 8000540:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000544:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000548:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800054c:	bf48      	it	mi
 800054e:	4240      	negmi	r0, r0
 8000550:	f04f 0100 	mov.w	r1, #0
 8000554:	e73e      	b.n	80003d4 <__adddf3+0x138>
 8000556:	bf00      	nop

08000558 <__aeabi_f2d>:
 8000558:	0042      	lsls	r2, r0, #1
 800055a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800055e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000562:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000566:	bf1f      	itttt	ne
 8000568:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800056c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000570:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000574:	4770      	bxne	lr
 8000576:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800057a:	bf08      	it	eq
 800057c:	4770      	bxeq	lr
 800057e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000582:	bf04      	itt	eq
 8000584:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000588:	4770      	bxeq	lr
 800058a:	b530      	push	{r4, r5, lr}
 800058c:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000590:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000594:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000598:	e71c      	b.n	80003d4 <__adddf3+0x138>
 800059a:	bf00      	nop

0800059c <__aeabi_ul2d>:
 800059c:	ea50 0201 	orrs.w	r2, r0, r1
 80005a0:	bf08      	it	eq
 80005a2:	4770      	bxeq	lr
 80005a4:	b530      	push	{r4, r5, lr}
 80005a6:	f04f 0500 	mov.w	r5, #0
 80005aa:	e00a      	b.n	80005c2 <__aeabi_l2d+0x16>

080005ac <__aeabi_l2d>:
 80005ac:	ea50 0201 	orrs.w	r2, r0, r1
 80005b0:	bf08      	it	eq
 80005b2:	4770      	bxeq	lr
 80005b4:	b530      	push	{r4, r5, lr}
 80005b6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005ba:	d502      	bpl.n	80005c2 <__aeabi_l2d+0x16>
 80005bc:	4240      	negs	r0, r0
 80005be:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005c2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005c6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005ca:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005ce:	f43f aed8 	beq.w	8000382 <__adddf3+0xe6>
 80005d2:	f04f 0203 	mov.w	r2, #3
 80005d6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005da:	bf18      	it	ne
 80005dc:	3203      	addne	r2, #3
 80005de:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005e2:	bf18      	it	ne
 80005e4:	3203      	addne	r2, #3
 80005e6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005ea:	f1c2 0320 	rsb	r3, r2, #32
 80005ee:	fa00 fc03 	lsl.w	ip, r0, r3
 80005f2:	fa20 f002 	lsr.w	r0, r0, r2
 80005f6:	fa01 fe03 	lsl.w	lr, r1, r3
 80005fa:	ea40 000e 	orr.w	r0, r0, lr
 80005fe:	fa21 f102 	lsr.w	r1, r1, r2
 8000602:	4414      	add	r4, r2
 8000604:	e6bd      	b.n	8000382 <__adddf3+0xe6>
 8000606:	bf00      	nop

08000608 <__aeabi_dmul>:
 8000608:	b570      	push	{r4, r5, r6, lr}
 800060a:	f04f 0cff 	mov.w	ip, #255	; 0xff
 800060e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000612:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000616:	bf1d      	ittte	ne
 8000618:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800061c:	ea94 0f0c 	teqne	r4, ip
 8000620:	ea95 0f0c 	teqne	r5, ip
 8000624:	f000 f8de 	bleq	80007e4 <__aeabi_dmul+0x1dc>
 8000628:	442c      	add	r4, r5
 800062a:	ea81 0603 	eor.w	r6, r1, r3
 800062e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000632:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000636:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800063a:	bf18      	it	ne
 800063c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000640:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000644:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000648:	d038      	beq.n	80006bc <__aeabi_dmul+0xb4>
 800064a:	fba0 ce02 	umull	ip, lr, r0, r2
 800064e:	f04f 0500 	mov.w	r5, #0
 8000652:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000656:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800065a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800065e:	f04f 0600 	mov.w	r6, #0
 8000662:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000666:	f09c 0f00 	teq	ip, #0
 800066a:	bf18      	it	ne
 800066c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000670:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000674:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000678:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 800067c:	d204      	bcs.n	8000688 <__aeabi_dmul+0x80>
 800067e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000682:	416d      	adcs	r5, r5
 8000684:	eb46 0606 	adc.w	r6, r6, r6
 8000688:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800068c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000690:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000694:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000698:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800069c:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80006a0:	bf88      	it	hi
 80006a2:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80006a6:	d81e      	bhi.n	80006e6 <__aeabi_dmul+0xde>
 80006a8:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80006ac:	bf08      	it	eq
 80006ae:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006b2:	f150 0000 	adcs.w	r0, r0, #0
 80006b6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ba:	bd70      	pop	{r4, r5, r6, pc}
 80006bc:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80006c0:	ea46 0101 	orr.w	r1, r6, r1
 80006c4:	ea40 0002 	orr.w	r0, r0, r2
 80006c8:	ea81 0103 	eor.w	r1, r1, r3
 80006cc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006d0:	bfc2      	ittt	gt
 80006d2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006d6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006da:	bd70      	popgt	{r4, r5, r6, pc}
 80006dc:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80006e0:	f04f 0e00 	mov.w	lr, #0
 80006e4:	3c01      	subs	r4, #1
 80006e6:	f300 80ab 	bgt.w	8000840 <__aeabi_dmul+0x238>
 80006ea:	f114 0f36 	cmn.w	r4, #54	; 0x36
 80006ee:	bfde      	ittt	le
 80006f0:	2000      	movle	r0, #0
 80006f2:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 80006f6:	bd70      	pople	{r4, r5, r6, pc}
 80006f8:	f1c4 0400 	rsb	r4, r4, #0
 80006fc:	3c20      	subs	r4, #32
 80006fe:	da35      	bge.n	800076c <__aeabi_dmul+0x164>
 8000700:	340c      	adds	r4, #12
 8000702:	dc1b      	bgt.n	800073c <__aeabi_dmul+0x134>
 8000704:	f104 0414 	add.w	r4, r4, #20
 8000708:	f1c4 0520 	rsb	r5, r4, #32
 800070c:	fa00 f305 	lsl.w	r3, r0, r5
 8000710:	fa20 f004 	lsr.w	r0, r0, r4
 8000714:	fa01 f205 	lsl.w	r2, r1, r5
 8000718:	ea40 0002 	orr.w	r0, r0, r2
 800071c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000720:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000724:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000728:	fa21 f604 	lsr.w	r6, r1, r4
 800072c:	eb42 0106 	adc.w	r1, r2, r6
 8000730:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000734:	bf08      	it	eq
 8000736:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800073a:	bd70      	pop	{r4, r5, r6, pc}
 800073c:	f1c4 040c 	rsb	r4, r4, #12
 8000740:	f1c4 0520 	rsb	r5, r4, #32
 8000744:	fa00 f304 	lsl.w	r3, r0, r4
 8000748:	fa20 f005 	lsr.w	r0, r0, r5
 800074c:	fa01 f204 	lsl.w	r2, r1, r4
 8000750:	ea40 0002 	orr.w	r0, r0, r2
 8000754:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000758:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800075c:	f141 0100 	adc.w	r1, r1, #0
 8000760:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000764:	bf08      	it	eq
 8000766:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800076a:	bd70      	pop	{r4, r5, r6, pc}
 800076c:	f1c4 0520 	rsb	r5, r4, #32
 8000770:	fa00 f205 	lsl.w	r2, r0, r5
 8000774:	ea4e 0e02 	orr.w	lr, lr, r2
 8000778:	fa20 f304 	lsr.w	r3, r0, r4
 800077c:	fa01 f205 	lsl.w	r2, r1, r5
 8000780:	ea43 0302 	orr.w	r3, r3, r2
 8000784:	fa21 f004 	lsr.w	r0, r1, r4
 8000788:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800078c:	fa21 f204 	lsr.w	r2, r1, r4
 8000790:	ea20 0002 	bic.w	r0, r0, r2
 8000794:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000798:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800079c:	bf08      	it	eq
 800079e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007a2:	bd70      	pop	{r4, r5, r6, pc}
 80007a4:	f094 0f00 	teq	r4, #0
 80007a8:	d10f      	bne.n	80007ca <__aeabi_dmul+0x1c2>
 80007aa:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80007ae:	0040      	lsls	r0, r0, #1
 80007b0:	eb41 0101 	adc.w	r1, r1, r1
 80007b4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007b8:	bf08      	it	eq
 80007ba:	3c01      	subeq	r4, #1
 80007bc:	d0f7      	beq.n	80007ae <__aeabi_dmul+0x1a6>
 80007be:	ea41 0106 	orr.w	r1, r1, r6
 80007c2:	f095 0f00 	teq	r5, #0
 80007c6:	bf18      	it	ne
 80007c8:	4770      	bxne	lr
 80007ca:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80007ce:	0052      	lsls	r2, r2, #1
 80007d0:	eb43 0303 	adc.w	r3, r3, r3
 80007d4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80007d8:	bf08      	it	eq
 80007da:	3d01      	subeq	r5, #1
 80007dc:	d0f7      	beq.n	80007ce <__aeabi_dmul+0x1c6>
 80007de:	ea43 0306 	orr.w	r3, r3, r6
 80007e2:	4770      	bx	lr
 80007e4:	ea94 0f0c 	teq	r4, ip
 80007e8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007ec:	bf18      	it	ne
 80007ee:	ea95 0f0c 	teqne	r5, ip
 80007f2:	d00c      	beq.n	800080e <__aeabi_dmul+0x206>
 80007f4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007f8:	bf18      	it	ne
 80007fa:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007fe:	d1d1      	bne.n	80007a4 <__aeabi_dmul+0x19c>
 8000800:	ea81 0103 	eor.w	r1, r1, r3
 8000804:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000808:	f04f 0000 	mov.w	r0, #0
 800080c:	bd70      	pop	{r4, r5, r6, pc}
 800080e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000812:	bf06      	itte	eq
 8000814:	4610      	moveq	r0, r2
 8000816:	4619      	moveq	r1, r3
 8000818:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800081c:	d019      	beq.n	8000852 <__aeabi_dmul+0x24a>
 800081e:	ea94 0f0c 	teq	r4, ip
 8000822:	d102      	bne.n	800082a <__aeabi_dmul+0x222>
 8000824:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000828:	d113      	bne.n	8000852 <__aeabi_dmul+0x24a>
 800082a:	ea95 0f0c 	teq	r5, ip
 800082e:	d105      	bne.n	800083c <__aeabi_dmul+0x234>
 8000830:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000834:	bf1c      	itt	ne
 8000836:	4610      	movne	r0, r2
 8000838:	4619      	movne	r1, r3
 800083a:	d10a      	bne.n	8000852 <__aeabi_dmul+0x24a>
 800083c:	ea81 0103 	eor.w	r1, r1, r3
 8000840:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000844:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000848:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800084c:	f04f 0000 	mov.w	r0, #0
 8000850:	bd70      	pop	{r4, r5, r6, pc}
 8000852:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000856:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800085a:	bd70      	pop	{r4, r5, r6, pc}

0800085c <__aeabi_ddiv>:
 800085c:	b570      	push	{r4, r5, r6, lr}
 800085e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000862:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000866:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800086a:	bf1d      	ittte	ne
 800086c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000870:	ea94 0f0c 	teqne	r4, ip
 8000874:	ea95 0f0c 	teqne	r5, ip
 8000878:	f000 f8a7 	bleq	80009ca <__aeabi_ddiv+0x16e>
 800087c:	eba4 0405 	sub.w	r4, r4, r5
 8000880:	ea81 0e03 	eor.w	lr, r1, r3
 8000884:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000888:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800088c:	f000 8088 	beq.w	80009a0 <__aeabi_ddiv+0x144>
 8000890:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000894:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8000898:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800089c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008a0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008a4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008a8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008ac:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008b0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80008b4:	429d      	cmp	r5, r3
 80008b6:	bf08      	it	eq
 80008b8:	4296      	cmpeq	r6, r2
 80008ba:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80008be:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80008c2:	d202      	bcs.n	80008ca <__aeabi_ddiv+0x6e>
 80008c4:	085b      	lsrs	r3, r3, #1
 80008c6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ca:	1ab6      	subs	r6, r6, r2
 80008cc:	eb65 0503 	sbc.w	r5, r5, r3
 80008d0:	085b      	lsrs	r3, r3, #1
 80008d2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008d6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80008da:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80008de:	ebb6 0e02 	subs.w	lr, r6, r2
 80008e2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008e6:	bf22      	ittt	cs
 80008e8:	1ab6      	subcs	r6, r6, r2
 80008ea:	4675      	movcs	r5, lr
 80008ec:	ea40 000c 	orrcs.w	r0, r0, ip
 80008f0:	085b      	lsrs	r3, r3, #1
 80008f2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008f6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008fa:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008fe:	bf22      	ittt	cs
 8000900:	1ab6      	subcs	r6, r6, r2
 8000902:	4675      	movcs	r5, lr
 8000904:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000908:	085b      	lsrs	r3, r3, #1
 800090a:	ea4f 0232 	mov.w	r2, r2, rrx
 800090e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000912:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000916:	bf22      	ittt	cs
 8000918:	1ab6      	subcs	r6, r6, r2
 800091a:	4675      	movcs	r5, lr
 800091c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000920:	085b      	lsrs	r3, r3, #1
 8000922:	ea4f 0232 	mov.w	r2, r2, rrx
 8000926:	ebb6 0e02 	subs.w	lr, r6, r2
 800092a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800092e:	bf22      	ittt	cs
 8000930:	1ab6      	subcs	r6, r6, r2
 8000932:	4675      	movcs	r5, lr
 8000934:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000938:	ea55 0e06 	orrs.w	lr, r5, r6
 800093c:	d018      	beq.n	8000970 <__aeabi_ddiv+0x114>
 800093e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000942:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000946:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800094a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800094e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000952:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000956:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800095a:	d1c0      	bne.n	80008de <__aeabi_ddiv+0x82>
 800095c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000960:	d10b      	bne.n	800097a <__aeabi_ddiv+0x11e>
 8000962:	ea41 0100 	orr.w	r1, r1, r0
 8000966:	f04f 0000 	mov.w	r0, #0
 800096a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800096e:	e7b6      	b.n	80008de <__aeabi_ddiv+0x82>
 8000970:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000974:	bf04      	itt	eq
 8000976:	4301      	orreq	r1, r0
 8000978:	2000      	moveq	r0, #0
 800097a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 800097e:	bf88      	it	hi
 8000980:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000984:	f63f aeaf 	bhi.w	80006e6 <__aeabi_dmul+0xde>
 8000988:	ebb5 0c03 	subs.w	ip, r5, r3
 800098c:	bf04      	itt	eq
 800098e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000992:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000996:	f150 0000 	adcs.w	r0, r0, #0
 800099a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800099e:	bd70      	pop	{r4, r5, r6, pc}
 80009a0:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 80009a4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009a8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009ac:	bfc2      	ittt	gt
 80009ae:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009b2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009b6:	bd70      	popgt	{r4, r5, r6, pc}
 80009b8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80009bc:	f04f 0e00 	mov.w	lr, #0
 80009c0:	3c01      	subs	r4, #1
 80009c2:	e690      	b.n	80006e6 <__aeabi_dmul+0xde>
 80009c4:	ea45 0e06 	orr.w	lr, r5, r6
 80009c8:	e68d      	b.n	80006e6 <__aeabi_dmul+0xde>
 80009ca:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009ce:	ea94 0f0c 	teq	r4, ip
 80009d2:	bf08      	it	eq
 80009d4:	ea95 0f0c 	teqeq	r5, ip
 80009d8:	f43f af3b 	beq.w	8000852 <__aeabi_dmul+0x24a>
 80009dc:	ea94 0f0c 	teq	r4, ip
 80009e0:	d10a      	bne.n	80009f8 <__aeabi_ddiv+0x19c>
 80009e2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009e6:	f47f af34 	bne.w	8000852 <__aeabi_dmul+0x24a>
 80009ea:	ea95 0f0c 	teq	r5, ip
 80009ee:	f47f af25 	bne.w	800083c <__aeabi_dmul+0x234>
 80009f2:	4610      	mov	r0, r2
 80009f4:	4619      	mov	r1, r3
 80009f6:	e72c      	b.n	8000852 <__aeabi_dmul+0x24a>
 80009f8:	ea95 0f0c 	teq	r5, ip
 80009fc:	d106      	bne.n	8000a0c <__aeabi_ddiv+0x1b0>
 80009fe:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a02:	f43f aefd 	beq.w	8000800 <__aeabi_dmul+0x1f8>
 8000a06:	4610      	mov	r0, r2
 8000a08:	4619      	mov	r1, r3
 8000a0a:	e722      	b.n	8000852 <__aeabi_dmul+0x24a>
 8000a0c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a10:	bf18      	it	ne
 8000a12:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a16:	f47f aec5 	bne.w	80007a4 <__aeabi_dmul+0x19c>
 8000a1a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a1e:	f47f af0d 	bne.w	800083c <__aeabi_dmul+0x234>
 8000a22:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a26:	f47f aeeb 	bne.w	8000800 <__aeabi_dmul+0x1f8>
 8000a2a:	e712      	b.n	8000852 <__aeabi_dmul+0x24a>

08000a2c <__gedf2>:
 8000a2c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a30:	e006      	b.n	8000a40 <__cmpdf2+0x4>
 8000a32:	bf00      	nop

08000a34 <__ledf2>:
 8000a34:	f04f 0c01 	mov.w	ip, #1
 8000a38:	e002      	b.n	8000a40 <__cmpdf2+0x4>
 8000a3a:	bf00      	nop

08000a3c <__cmpdf2>:
 8000a3c:	f04f 0c01 	mov.w	ip, #1
 8000a40:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a44:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a48:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a4c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a50:	bf18      	it	ne
 8000a52:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a56:	d01b      	beq.n	8000a90 <__cmpdf2+0x54>
 8000a58:	b001      	add	sp, #4
 8000a5a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a5e:	bf0c      	ite	eq
 8000a60:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a64:	ea91 0f03 	teqne	r1, r3
 8000a68:	bf02      	ittt	eq
 8000a6a:	ea90 0f02 	teqeq	r0, r2
 8000a6e:	2000      	moveq	r0, #0
 8000a70:	4770      	bxeq	lr
 8000a72:	f110 0f00 	cmn.w	r0, #0
 8000a76:	ea91 0f03 	teq	r1, r3
 8000a7a:	bf58      	it	pl
 8000a7c:	4299      	cmppl	r1, r3
 8000a7e:	bf08      	it	eq
 8000a80:	4290      	cmpeq	r0, r2
 8000a82:	bf2c      	ite	cs
 8000a84:	17d8      	asrcs	r0, r3, #31
 8000a86:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a8a:	f040 0001 	orr.w	r0, r0, #1
 8000a8e:	4770      	bx	lr
 8000a90:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a94:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a98:	d102      	bne.n	8000aa0 <__cmpdf2+0x64>
 8000a9a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a9e:	d107      	bne.n	8000ab0 <__cmpdf2+0x74>
 8000aa0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000aa4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000aa8:	d1d6      	bne.n	8000a58 <__cmpdf2+0x1c>
 8000aaa:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000aae:	d0d3      	beq.n	8000a58 <__cmpdf2+0x1c>
 8000ab0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000ab4:	4770      	bx	lr
 8000ab6:	bf00      	nop

08000ab8 <__aeabi_cdrcmple>:
 8000ab8:	4684      	mov	ip, r0
 8000aba:	4610      	mov	r0, r2
 8000abc:	4662      	mov	r2, ip
 8000abe:	468c      	mov	ip, r1
 8000ac0:	4619      	mov	r1, r3
 8000ac2:	4663      	mov	r3, ip
 8000ac4:	e000      	b.n	8000ac8 <__aeabi_cdcmpeq>
 8000ac6:	bf00      	nop

08000ac8 <__aeabi_cdcmpeq>:
 8000ac8:	b501      	push	{r0, lr}
 8000aca:	f7ff ffb7 	bl	8000a3c <__cmpdf2>
 8000ace:	2800      	cmp	r0, #0
 8000ad0:	bf48      	it	mi
 8000ad2:	f110 0f00 	cmnmi.w	r0, #0
 8000ad6:	bd01      	pop	{r0, pc}

08000ad8 <__aeabi_dcmpeq>:
 8000ad8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000adc:	f7ff fff4 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000ae0:	bf0c      	ite	eq
 8000ae2:	2001      	moveq	r0, #1
 8000ae4:	2000      	movne	r0, #0
 8000ae6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000aea:	bf00      	nop

08000aec <__aeabi_dcmplt>:
 8000aec:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000af0:	f7ff ffea 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000af4:	bf34      	ite	cc
 8000af6:	2001      	movcc	r0, #1
 8000af8:	2000      	movcs	r0, #0
 8000afa:	f85d fb08 	ldr.w	pc, [sp], #8
 8000afe:	bf00      	nop

08000b00 <__aeabi_dcmple>:
 8000b00:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b04:	f7ff ffe0 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000b08:	bf94      	ite	ls
 8000b0a:	2001      	movls	r0, #1
 8000b0c:	2000      	movhi	r0, #0
 8000b0e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b12:	bf00      	nop

08000b14 <__aeabi_dcmpge>:
 8000b14:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b18:	f7ff ffce 	bl	8000ab8 <__aeabi_cdrcmple>
 8000b1c:	bf94      	ite	ls
 8000b1e:	2001      	movls	r0, #1
 8000b20:	2000      	movhi	r0, #0
 8000b22:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b26:	bf00      	nop

08000b28 <__aeabi_dcmpgt>:
 8000b28:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b2c:	f7ff ffc4 	bl	8000ab8 <__aeabi_cdrcmple>
 8000b30:	bf34      	ite	cc
 8000b32:	2001      	movcc	r0, #1
 8000b34:	2000      	movcs	r0, #0
 8000b36:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b3a:	bf00      	nop

08000b3c <__aeabi_dcmpun>:
 8000b3c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b40:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b44:	d102      	bne.n	8000b4c <__aeabi_dcmpun+0x10>
 8000b46:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b4a:	d10a      	bne.n	8000b62 <__aeabi_dcmpun+0x26>
 8000b4c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b50:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b54:	d102      	bne.n	8000b5c <__aeabi_dcmpun+0x20>
 8000b56:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b5a:	d102      	bne.n	8000b62 <__aeabi_dcmpun+0x26>
 8000b5c:	f04f 0000 	mov.w	r0, #0
 8000b60:	4770      	bx	lr
 8000b62:	f04f 0001 	mov.w	r0, #1
 8000b66:	4770      	bx	lr

08000b68 <__aeabi_d2iz>:
 8000b68:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b6c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000b70:	d215      	bcs.n	8000b9e <__aeabi_d2iz+0x36>
 8000b72:	d511      	bpl.n	8000b98 <__aeabi_d2iz+0x30>
 8000b74:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000b78:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b7c:	d912      	bls.n	8000ba4 <__aeabi_d2iz+0x3c>
 8000b7e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b82:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000b86:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b8a:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000b8e:	fa23 f002 	lsr.w	r0, r3, r2
 8000b92:	bf18      	it	ne
 8000b94:	4240      	negne	r0, r0
 8000b96:	4770      	bx	lr
 8000b98:	f04f 0000 	mov.w	r0, #0
 8000b9c:	4770      	bx	lr
 8000b9e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000ba2:	d105      	bne.n	8000bb0 <__aeabi_d2iz+0x48>
 8000ba4:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000ba8:	bf08      	it	eq
 8000baa:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000bae:	4770      	bx	lr
 8000bb0:	f04f 0000 	mov.w	r0, #0
 8000bb4:	4770      	bx	lr
 8000bb6:	bf00      	nop

08000bb8 <__aeabi_d2uiz>:
 8000bb8:	004a      	lsls	r2, r1, #1
 8000bba:	d211      	bcs.n	8000be0 <__aeabi_d2uiz+0x28>
 8000bbc:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000bc0:	d211      	bcs.n	8000be6 <__aeabi_d2uiz+0x2e>
 8000bc2:	d50d      	bpl.n	8000be0 <__aeabi_d2uiz+0x28>
 8000bc4:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000bc8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000bcc:	d40e      	bmi.n	8000bec <__aeabi_d2uiz+0x34>
 8000bce:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000bd2:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000bd6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000bda:	fa23 f002 	lsr.w	r0, r3, r2
 8000bde:	4770      	bx	lr
 8000be0:	f04f 0000 	mov.w	r0, #0
 8000be4:	4770      	bx	lr
 8000be6:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000bea:	d102      	bne.n	8000bf2 <__aeabi_d2uiz+0x3a>
 8000bec:	f04f 30ff 	mov.w	r0, #4294967295
 8000bf0:	4770      	bx	lr
 8000bf2:	f04f 0000 	mov.w	r0, #0
 8000bf6:	4770      	bx	lr

08000bf8 <__aeabi_d2f>:
 8000bf8:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000bfc:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000c00:	bf24      	itt	cs
 8000c02:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8000c06:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000c0a:	d90d      	bls.n	8000c28 <__aeabi_d2f+0x30>
 8000c0c:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000c10:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000c14:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000c18:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000c1c:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000c20:	bf08      	it	eq
 8000c22:	f020 0001 	biceq.w	r0, r0, #1
 8000c26:	4770      	bx	lr
 8000c28:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000c2c:	d121      	bne.n	8000c72 <__aeabi_d2f+0x7a>
 8000c2e:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000c32:	bfbc      	itt	lt
 8000c34:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000c38:	4770      	bxlt	lr
 8000c3a:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000c3e:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000c42:	f1c2 0218 	rsb	r2, r2, #24
 8000c46:	f1c2 0c20 	rsb	ip, r2, #32
 8000c4a:	fa10 f30c 	lsls.w	r3, r0, ip
 8000c4e:	fa20 f002 	lsr.w	r0, r0, r2
 8000c52:	bf18      	it	ne
 8000c54:	f040 0001 	orrne.w	r0, r0, #1
 8000c58:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000c5c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000c60:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000c64:	ea40 000c 	orr.w	r0, r0, ip
 8000c68:	fa23 f302 	lsr.w	r3, r3, r2
 8000c6c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000c70:	e7cc      	b.n	8000c0c <__aeabi_d2f+0x14>
 8000c72:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000c76:	d107      	bne.n	8000c88 <__aeabi_d2f+0x90>
 8000c78:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000c7c:	bf1e      	ittt	ne
 8000c7e:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000c82:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000c86:	4770      	bxne	lr
 8000c88:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000c8c:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000c90:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000c94:	4770      	bx	lr
 8000c96:	bf00      	nop

08000c98 <__aeabi_d2lz>:
 8000c98:	b538      	push	{r3, r4, r5, lr}
 8000c9a:	2200      	movs	r2, #0
 8000c9c:	2300      	movs	r3, #0
 8000c9e:	4604      	mov	r4, r0
 8000ca0:	460d      	mov	r5, r1
 8000ca2:	f7ff ff23 	bl	8000aec <__aeabi_dcmplt>
 8000ca6:	b928      	cbnz	r0, 8000cb4 <__aeabi_d2lz+0x1c>
 8000ca8:	4620      	mov	r0, r4
 8000caa:	4629      	mov	r1, r5
 8000cac:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000cb0:	f000 b80a 	b.w	8000cc8 <__aeabi_d2ulz>
 8000cb4:	4620      	mov	r0, r4
 8000cb6:	f105 4100 	add.w	r1, r5, #2147483648	; 0x80000000
 8000cba:	f000 f805 	bl	8000cc8 <__aeabi_d2ulz>
 8000cbe:	4240      	negs	r0, r0
 8000cc0:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000cc4:	bd38      	pop	{r3, r4, r5, pc}
 8000cc6:	bf00      	nop

08000cc8 <__aeabi_d2ulz>:
 8000cc8:	b5d0      	push	{r4, r6, r7, lr}
 8000cca:	4b0c      	ldr	r3, [pc, #48]	; (8000cfc <__aeabi_d2ulz+0x34>)
 8000ccc:	2200      	movs	r2, #0
 8000cce:	4606      	mov	r6, r0
 8000cd0:	460f      	mov	r7, r1
 8000cd2:	f7ff fc99 	bl	8000608 <__aeabi_dmul>
 8000cd6:	f7ff ff6f 	bl	8000bb8 <__aeabi_d2uiz>
 8000cda:	4604      	mov	r4, r0
 8000cdc:	f7ff fc1a 	bl	8000514 <__aeabi_ui2d>
 8000ce0:	4b07      	ldr	r3, [pc, #28]	; (8000d00 <__aeabi_d2ulz+0x38>)
 8000ce2:	2200      	movs	r2, #0
 8000ce4:	f7ff fc90 	bl	8000608 <__aeabi_dmul>
 8000ce8:	4602      	mov	r2, r0
 8000cea:	460b      	mov	r3, r1
 8000cec:	4630      	mov	r0, r6
 8000cee:	4639      	mov	r1, r7
 8000cf0:	f7ff fad2 	bl	8000298 <__aeabi_dsub>
 8000cf4:	f7ff ff60 	bl	8000bb8 <__aeabi_d2uiz>
 8000cf8:	4621      	mov	r1, r4
 8000cfa:	bdd0      	pop	{r4, r6, r7, pc}
 8000cfc:	3df00000 	.word	0x3df00000
 8000d00:	41f00000 	.word	0x41f00000

08000d04 <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 8000d04:	b480      	push	{r7}
 8000d06:	b083      	sub	sp, #12
 8000d08:	af00      	add	r7, sp, #0
 8000d0a:	4603      	mov	r3, r0
 8000d0c:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8000d0e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000d12:	2b00      	cmp	r3, #0
 8000d14:	db0b      	blt.n	8000d2e <__NVIC_EnableIRQ+0x2a>
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000d16:	79fb      	ldrb	r3, [r7, #7]
 8000d18:	f003 021f 	and.w	r2, r3, #31
 8000d1c:	4907      	ldr	r1, [pc, #28]	; (8000d3c <__NVIC_EnableIRQ+0x38>)
 8000d1e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000d22:	095b      	lsrs	r3, r3, #5
 8000d24:	2001      	movs	r0, #1
 8000d26:	fa00 f202 	lsl.w	r2, r0, r2
 8000d2a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  }
}
 8000d2e:	bf00      	nop
 8000d30:	370c      	adds	r7, #12
 8000d32:	46bd      	mov	sp, r7
 8000d34:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000d38:	4770      	bx	lr
 8000d3a:	bf00      	nop
 8000d3c:	e000e100 	.word	0xe000e100

08000d40 <SystemCoreClockSetHSI>:
#define gray		0x8c51
#define yellow		0xFFE0
#define cyan		0x07FF
#define purple		0xF81F

void SystemCoreClockSetHSI(void) {
 8000d40:	b480      	push	{r7}
 8000d42:	af00      	add	r7, sp, #0

  RCC->CR |= ((uint32_t)RCC_CR_HSION);                     // Enable HSI
 8000d44:	4b34      	ldr	r3, [pc, #208]	; (8000e18 <SystemCoreClockSetHSI+0xd8>)
 8000d46:	681b      	ldr	r3, [r3, #0]
 8000d48:	4a33      	ldr	r2, [pc, #204]	; (8000e18 <SystemCoreClockSetHSI+0xd8>)
 8000d4a:	f043 0301 	orr.w	r3, r3, #1
 8000d4e:	6013      	str	r3, [r2, #0]
  while ((RCC->CR & RCC_CR_HSIRDY) == 0);                  // Wait for HSI Ready
 8000d50:	bf00      	nop
 8000d52:	4b31      	ldr	r3, [pc, #196]	; (8000e18 <SystemCoreClockSetHSI+0xd8>)
 8000d54:	681b      	ldr	r3, [r3, #0]
 8000d56:	f003 0302 	and.w	r3, r3, #2
 8000d5a:	2b00      	cmp	r3, #0
 8000d5c:	d0f9      	beq.n	8000d52 <SystemCoreClockSetHSI+0x12>

  RCC->CFGR = RCC_CFGR_SW_HSI;                             // HSI is system clock
 8000d5e:	4b2e      	ldr	r3, [pc, #184]	; (8000e18 <SystemCoreClockSetHSI+0xd8>)
 8000d60:	2200      	movs	r2, #0
 8000d62:	609a      	str	r2, [r3, #8]
  while ((RCC->CFGR & RCC_CFGR_SWS) != RCC_CFGR_SWS_HSI);  // Wait for HSI used as system clock
 8000d64:	bf00      	nop
 8000d66:	4b2c      	ldr	r3, [pc, #176]	; (8000e18 <SystemCoreClockSetHSI+0xd8>)
 8000d68:	689b      	ldr	r3, [r3, #8]
 8000d6a:	f003 030c 	and.w	r3, r3, #12
 8000d6e:	2b00      	cmp	r3, #0
 8000d70:	d1f9      	bne.n	8000d66 <SystemCoreClockSetHSI+0x26>

  FLASH->ACR  = FLASH_ACR_PRFTEN;                          // Enable Prefetch Buffer
 8000d72:	4b2a      	ldr	r3, [pc, #168]	; (8000e1c <SystemCoreClockSetHSI+0xdc>)
 8000d74:	f44f 7280 	mov.w	r2, #256	; 0x100
 8000d78:	601a      	str	r2, [r3, #0]
  FLASH->ACR |= FLASH_ACR_ICEN;                            // Instruction cache enable
 8000d7a:	4b28      	ldr	r3, [pc, #160]	; (8000e1c <SystemCoreClockSetHSI+0xdc>)
 8000d7c:	681b      	ldr	r3, [r3, #0]
 8000d7e:	4a27      	ldr	r2, [pc, #156]	; (8000e1c <SystemCoreClockSetHSI+0xdc>)
 8000d80:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8000d84:	6013      	str	r3, [r2, #0]
  FLASH->ACR |= FLASH_ACR_DCEN;                            // Data cache enable
 8000d86:	4b25      	ldr	r3, [pc, #148]	; (8000e1c <SystemCoreClockSetHSI+0xdc>)
 8000d88:	681b      	ldr	r3, [r3, #0]
 8000d8a:	4a24      	ldr	r2, [pc, #144]	; (8000e1c <SystemCoreClockSetHSI+0xdc>)
 8000d8c:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8000d90:	6013      	str	r3, [r2, #0]
  FLASH->ACR |= FLASH_ACR_LATENCY_5WS;                     // Flash 5 wait state
 8000d92:	4b22      	ldr	r3, [pc, #136]	; (8000e1c <SystemCoreClockSetHSI+0xdc>)
 8000d94:	681b      	ldr	r3, [r3, #0]
 8000d96:	4a21      	ldr	r2, [pc, #132]	; (8000e1c <SystemCoreClockSetHSI+0xdc>)
 8000d98:	f043 0305 	orr.w	r3, r3, #5
 8000d9c:	6013      	str	r3, [r2, #0]

  RCC->CFGR |= RCC_CFGR_HPRE_DIV1;                         // HCLK = SYSCLK/2
 8000d9e:	4b1e      	ldr	r3, [pc, #120]	; (8000e18 <SystemCoreClockSetHSI+0xd8>)
 8000da0:	4a1d      	ldr	r2, [pc, #116]	; (8000e18 <SystemCoreClockSetHSI+0xd8>)
 8000da2:	689b      	ldr	r3, [r3, #8]
 8000da4:	6093      	str	r3, [r2, #8]
  RCC->CFGR |= RCC_CFGR_PPRE1_DIV1;                        // APB1 = HCLK
 8000da6:	4b1c      	ldr	r3, [pc, #112]	; (8000e18 <SystemCoreClockSetHSI+0xd8>)
 8000da8:	4a1b      	ldr	r2, [pc, #108]	; (8000e18 <SystemCoreClockSetHSI+0xd8>)
 8000daa:	689b      	ldr	r3, [r3, #8]
 8000dac:	6093      	str	r3, [r2, #8]
  RCC->CFGR |= RCC_CFGR_PPRE2_DIV1;                        // APB2 = HCLK
 8000dae:	4b1a      	ldr	r3, [pc, #104]	; (8000e18 <SystemCoreClockSetHSI+0xd8>)
 8000db0:	4a19      	ldr	r2, [pc, #100]	; (8000e18 <SystemCoreClockSetHSI+0xd8>)
 8000db2:	689b      	ldr	r3, [r3, #8]
 8000db4:	6093      	str	r3, [r2, #8]

  RCC->CR &= ~RCC_CR_PLLON;                                // Disable PLL
 8000db6:	4b18      	ldr	r3, [pc, #96]	; (8000e18 <SystemCoreClockSetHSI+0xd8>)
 8000db8:	681b      	ldr	r3, [r3, #0]
 8000dba:	4a17      	ldr	r2, [pc, #92]	; (8000e18 <SystemCoreClockSetHSI+0xd8>)
 8000dbc:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 8000dc0:	6013      	str	r3, [r2, #0]

  // PLL configuration:  VCO = HSI/M * N,  Sysclk = VCO/P
  RCC->PLLCFGR = ( 16ul                   |                // PLL_M =  16
 8000dc2:	4b15      	ldr	r3, [pc, #84]	; (8000e18 <SystemCoreClockSetHSI+0xd8>)
 8000dc4:	4a16      	ldr	r2, [pc, #88]	; (8000e20 <SystemCoreClockSetHSI+0xe0>)
 8000dc6:	605a      	str	r2, [r3, #4]
                 (192ul <<  6)            |                // PLL_N = 192
                 (  1ul << 16)            |                // PLL_P =   8
                 (RCC_PLLCFGR_PLLSRC_HSI) |                // PLL_SRC = HSI
                 (  3ul << 24)             );              // PLL_Q =   8

  RCC->CR |= RCC_CR_PLLON;                                 // Enable PLL
 8000dc8:	4b13      	ldr	r3, [pc, #76]	; (8000e18 <SystemCoreClockSetHSI+0xd8>)
 8000dca:	681b      	ldr	r3, [r3, #0]
 8000dcc:	4a12      	ldr	r2, [pc, #72]	; (8000e18 <SystemCoreClockSetHSI+0xd8>)
 8000dce:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8000dd2:	6013      	str	r3, [r2, #0]
  while((RCC->CR & RCC_CR_PLLRDY) == 0) __NOP();           // Wait till PLL is ready
 8000dd4:	e000      	b.n	8000dd8 <SystemCoreClockSetHSI+0x98>
 8000dd6:	bf00      	nop
 8000dd8:	4b0f      	ldr	r3, [pc, #60]	; (8000e18 <SystemCoreClockSetHSI+0xd8>)
 8000dda:	681b      	ldr	r3, [r3, #0]
 8000ddc:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8000de0:	2b00      	cmp	r3, #0
 8000de2:	d0f8      	beq.n	8000dd6 <SystemCoreClockSetHSI+0x96>

  RCC->CFGR &= ~RCC_CFGR_SW;                               // Select PLL as system clock source
 8000de4:	4b0c      	ldr	r3, [pc, #48]	; (8000e18 <SystemCoreClockSetHSI+0xd8>)
 8000de6:	689b      	ldr	r3, [r3, #8]
 8000de8:	4a0b      	ldr	r2, [pc, #44]	; (8000e18 <SystemCoreClockSetHSI+0xd8>)
 8000dea:	f023 0303 	bic.w	r3, r3, #3
 8000dee:	6093      	str	r3, [r2, #8]
  RCC->CFGR |=  RCC_CFGR_SW_PLL;
 8000df0:	4b09      	ldr	r3, [pc, #36]	; (8000e18 <SystemCoreClockSetHSI+0xd8>)
 8000df2:	689b      	ldr	r3, [r3, #8]
 8000df4:	4a08      	ldr	r2, [pc, #32]	; (8000e18 <SystemCoreClockSetHSI+0xd8>)
 8000df6:	f043 0302 	orr.w	r3, r3, #2
 8000dfa:	6093      	str	r3, [r2, #8]
  while ((RCC->CFGR & RCC_CFGR_SWS) != RCC_CFGR_SWS_PLL);  // Wait till PLL is system clock src
 8000dfc:	bf00      	nop
 8000dfe:	4b06      	ldr	r3, [pc, #24]	; (8000e18 <SystemCoreClockSetHSI+0xd8>)
 8000e00:	689b      	ldr	r3, [r3, #8]
 8000e02:	f003 030c 	and.w	r3, r3, #12
 8000e06:	2b08      	cmp	r3, #8
 8000e08:	d1f9      	bne.n	8000dfe <SystemCoreClockSetHSI+0xbe>
}
 8000e0a:	bf00      	nop
 8000e0c:	bf00      	nop
 8000e0e:	46bd      	mov	sp, r7
 8000e10:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e14:	4770      	bx	lr
 8000e16:	bf00      	nop
 8000e18:	40023800 	.word	0x40023800
 8000e1c:	40023c00 	.word	0x40023c00
 8000e20:	03013010 	.word	0x03013010

08000e24 <TIM_Init>:

void TIM_Init(){
 8000e24:	b580      	push	{r7, lr}
 8000e26:	af00      	add	r7, sp, #0

RCC->APB1ENR |= RCC_APB1ENR_TIM2EN;
 8000e28:	4b15      	ldr	r3, [pc, #84]	; (8000e80 <TIM_Init+0x5c>)
 8000e2a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000e2c:	4a14      	ldr	r2, [pc, #80]	; (8000e80 <TIM_Init+0x5c>)
 8000e2e:	f043 0301 	orr.w	r3, r3, #1
 8000e32:	6413      	str	r3, [r2, #64]	; 0x40

	TIM2->PSC = 200;
 8000e34:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000e38:	22c8      	movs	r2, #200	; 0xc8
 8000e3a:	629a      	str	r2, [r3, #40]	; 0x28
	TIM2->ARR = 3000;
 8000e3c:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000e40:	f640 32b8 	movw	r2, #3000	; 0xbb8
 8000e44:	62da      	str	r2, [r3, #44]	; 0x2c


	NVIC_EnableIRQ(TIM2_IRQn);
 8000e46:	201c      	movs	r0, #28
 8000e48:	f7ff ff5c 	bl	8000d04 <__NVIC_EnableIRQ>
	TIM2->DIER |= TIM_DIER_UIE;
 8000e4c:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000e50:	68db      	ldr	r3, [r3, #12]
 8000e52:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8000e56:	f043 0301 	orr.w	r3, r3, #1
 8000e5a:	60d3      	str	r3, [r2, #12]
	TIM2->CR1 |=TIM_CR1_CEN;
 8000e5c:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000e60:	681b      	ldr	r3, [r3, #0]
 8000e62:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8000e66:	f043 0301 	orr.w	r3, r3, #1
 8000e6a:	6013      	str	r3, [r2, #0]
	TIM2->SR &= ~TIM_SR_UIF;
 8000e6c:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000e70:	691b      	ldr	r3, [r3, #16]
 8000e72:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8000e76:	f023 0301 	bic.w	r3, r3, #1
 8000e7a:	6113      	str	r3, [r2, #16]


}
 8000e7c:	bf00      	nop
 8000e7e:	bd80      	pop	{r7, pc}
 8000e80:	40023800 	.word	0x40023800

08000e84 <TIM2_IRQHandler>:
uint16_t g=0;
void TIM2_IRQHandler() {
 8000e84:	b480      	push	{r7}
 8000e86:	af00      	add	r7, sp, #0
		TIM2->SR &= ~TIM_SR_UIF;
 8000e88:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000e8c:	691b      	ldr	r3, [r3, #16]
 8000e8e:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8000e92:	f023 0301 	bic.w	r3, r3, #1
 8000e96:	6113      	str	r3, [r2, #16]
		g++;
 8000e98:	4b05      	ldr	r3, [pc, #20]	; (8000eb0 <TIM2_IRQHandler+0x2c>)
 8000e9a:	881b      	ldrh	r3, [r3, #0]
 8000e9c:	3301      	adds	r3, #1
 8000e9e:	b29a      	uxth	r2, r3
 8000ea0:	4b03      	ldr	r3, [pc, #12]	; (8000eb0 <TIM2_IRQHandler+0x2c>)
 8000ea2:	801a      	strh	r2, [r3, #0]

}
 8000ea4:	bf00      	nop
 8000ea6:	46bd      	mov	sp, r7
 8000ea8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000eac:	4770      	bx	lr
 8000eae:	bf00      	nop
 8000eb0:	200001f8 	.word	0x200001f8

08000eb4 <LCD_Write_Number_dec>:

void LCD_Write_Number_dec(uint16_t x, uint16_t y, uint16_t value,uint16_t numberOfChars){
 8000eb4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000eb6:	b087      	sub	sp, #28
 8000eb8:	af02      	add	r7, sp, #8
 8000eba:	4604      	mov	r4, r0
 8000ebc:	4608      	mov	r0, r1
 8000ebe:	4611      	mov	r1, r2
 8000ec0:	461a      	mov	r2, r3
 8000ec2:	4623      	mov	r3, r4
 8000ec4:	80fb      	strh	r3, [r7, #6]
 8000ec6:	4603      	mov	r3, r0
 8000ec8:	80bb      	strh	r3, [r7, #4]
 8000eca:	460b      	mov	r3, r1
 8000ecc:	807b      	strh	r3, [r7, #2]
 8000ece:	4613      	mov	r3, r2
 8000ed0:	803b      	strh	r3, [r7, #0]

	uint16_t tmp;

	for(int i=0; i<numberOfChars;i++){
 8000ed2:	2300      	movs	r3, #0
 8000ed4:	60fb      	str	r3, [r7, #12]
 8000ed6:	e037      	b.n	8000f48 <LCD_Write_Number_dec+0x94>

		tmp= value%10;
 8000ed8:	887a      	ldrh	r2, [r7, #2]
 8000eda:	4b20      	ldr	r3, [pc, #128]	; (8000f5c <LCD_Write_Number_dec+0xa8>)
 8000edc:	fba3 1302 	umull	r1, r3, r3, r2
 8000ee0:	08d9      	lsrs	r1, r3, #3
 8000ee2:	460b      	mov	r3, r1
 8000ee4:	009b      	lsls	r3, r3, #2
 8000ee6:	440b      	add	r3, r1
 8000ee8:	005b      	lsls	r3, r3, #1
 8000eea:	1ad3      	subs	r3, r2, r3
 8000eec:	817b      	strh	r3, [r7, #10]
		value = value/10;
 8000eee:	887b      	ldrh	r3, [r7, #2]
 8000ef0:	4a1a      	ldr	r2, [pc, #104]	; (8000f5c <LCD_Write_Number_dec+0xa8>)
 8000ef2:	fba2 2303 	umull	r2, r3, r2, r3
 8000ef6:	08db      	lsrs	r3, r3, #3
 8000ef8:	807b      	strh	r3, [r7, #2]
		LCD_WriteChar(x+18-i*6,y,tmp+48,YELLOW,BLACK);
 8000efa:	68fb      	ldr	r3, [r7, #12]
 8000efc:	b29b      	uxth	r3, r3
 8000efe:	461a      	mov	r2, r3
 8000f00:	009b      	lsls	r3, r3, #2
 8000f02:	1ad3      	subs	r3, r2, r3
 8000f04:	005b      	lsls	r3, r3, #1
 8000f06:	b29a      	uxth	r2, r3
 8000f08:	88fb      	ldrh	r3, [r7, #6]
 8000f0a:	4413      	add	r3, r2
 8000f0c:	b29b      	uxth	r3, r3
 8000f0e:	3312      	adds	r3, #18
 8000f10:	b29c      	uxth	r4, r3
 8000f12:	897b      	ldrh	r3, [r7, #10]
 8000f14:	b2db      	uxtb	r3, r3
 8000f16:	3330      	adds	r3, #48	; 0x30
 8000f18:	b2dd      	uxtb	r5, r3
 8000f1a:	2200      	movs	r2, #0
 8000f1c:	21ff      	movs	r1, #255	; 0xff
 8000f1e:	20ff      	movs	r0, #255	; 0xff
 8000f20:	f001 f856 	bl	8001fd0 <RGB>
 8000f24:	4603      	mov	r3, r0
 8000f26:	461e      	mov	r6, r3
 8000f28:	2200      	movs	r2, #0
 8000f2a:	2100      	movs	r1, #0
 8000f2c:	2000      	movs	r0, #0
 8000f2e:	f001 f84f 	bl	8001fd0 <RGB>
 8000f32:	4603      	mov	r3, r0
 8000f34:	88b9      	ldrh	r1, [r7, #4]
 8000f36:	9300      	str	r3, [sp, #0]
 8000f38:	4633      	mov	r3, r6
 8000f3a:	462a      	mov	r2, r5
 8000f3c:	4620      	mov	r0, r4
 8000f3e:	f000 fff5 	bl	8001f2c <LCD_WriteChar>
	for(int i=0; i<numberOfChars;i++){
 8000f42:	68fb      	ldr	r3, [r7, #12]
 8000f44:	3301      	adds	r3, #1
 8000f46:	60fb      	str	r3, [r7, #12]
 8000f48:	883b      	ldrh	r3, [r7, #0]
 8000f4a:	68fa      	ldr	r2, [r7, #12]
 8000f4c:	429a      	cmp	r2, r3
 8000f4e:	dbc3      	blt.n	8000ed8 <LCD_Write_Number_dec+0x24>

	}
}
 8000f50:	bf00      	nop
 8000f52:	bf00      	nop
 8000f54:	3714      	adds	r7, #20
 8000f56:	46bd      	mov	sp, r7
 8000f58:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000f5a:	bf00      	nop
 8000f5c:	cccccccd 	.word	0xcccccccd

08000f60 <get_day>:
	volatile uint16_t day;
	uint16_t month;
	volatile uint16_t year;
}Day;

Day* get_day(const char* buff){
 8000f60:	b580      	push	{r7, lr}
 8000f62:	b086      	sub	sp, #24
 8000f64:	af02      	add	r7, sp, #8
 8000f66:	6078      	str	r0, [r7, #4]
    Day* day = (Day*)malloc(sizeof(Day));
 8000f68:	2006      	movs	r0, #6
 8000f6a:	f001 fb73 	bl	8002654 <malloc>
 8000f6e:	4603      	mov	r3, r0
 8000f70:	60fb      	str	r3, [r7, #12]
    sscanf(buff,"%d/%d/%d",&day->month,&day->day,&day->year);
 8000f72:	68fb      	ldr	r3, [r7, #12]
 8000f74:	1c9a      	adds	r2, r3, #2
 8000f76:	68f9      	ldr	r1, [r7, #12]
 8000f78:	68fb      	ldr	r3, [r7, #12]
 8000f7a:	3304      	adds	r3, #4
 8000f7c:	9300      	str	r3, [sp, #0]
 8000f7e:	460b      	mov	r3, r1
 8000f80:	4904      	ldr	r1, [pc, #16]	; (8000f94 <get_day+0x34>)
 8000f82:	6878      	ldr	r0, [r7, #4]
 8000f84:	f001 fe6e 	bl	8002c64 <siscanf>
    return day;
 8000f88:	68fb      	ldr	r3, [r7, #12]
}
 8000f8a:	4618      	mov	r0, r3
 8000f8c:	3710      	adds	r7, #16
 8000f8e:	46bd      	mov	sp, r7
 8000f90:	bd80      	pop	{r7, pc}
 8000f92:	bf00      	nop
 8000f94:	08007b84 	.word	0x08007b84

08000f98 <get_min>:

uint16_t get_min(const uint16_t* values){
 8000f98:	b480      	push	{r7}
 8000f9a:	b085      	sub	sp, #20
 8000f9c:	af00      	add	r7, sp, #0
 8000f9e:	6078      	str	r0, [r7, #4]
	uint16_t min = values[0];
 8000fa0:	687b      	ldr	r3, [r7, #4]
 8000fa2:	881b      	ldrh	r3, [r3, #0]
 8000fa4:	81fb      	strh	r3, [r7, #14]
	for(int i = 0;i < 7;i++){
 8000fa6:	2300      	movs	r3, #0
 8000fa8:	60bb      	str	r3, [r7, #8]
 8000faa:	e010      	b.n	8000fce <get_min+0x36>
		if(min > values[i]) min = values[i];
 8000fac:	68bb      	ldr	r3, [r7, #8]
 8000fae:	005b      	lsls	r3, r3, #1
 8000fb0:	687a      	ldr	r2, [r7, #4]
 8000fb2:	4413      	add	r3, r2
 8000fb4:	881b      	ldrh	r3, [r3, #0]
 8000fb6:	89fa      	ldrh	r2, [r7, #14]
 8000fb8:	429a      	cmp	r2, r3
 8000fba:	d905      	bls.n	8000fc8 <get_min+0x30>
 8000fbc:	68bb      	ldr	r3, [r7, #8]
 8000fbe:	005b      	lsls	r3, r3, #1
 8000fc0:	687a      	ldr	r2, [r7, #4]
 8000fc2:	4413      	add	r3, r2
 8000fc4:	881b      	ldrh	r3, [r3, #0]
 8000fc6:	81fb      	strh	r3, [r7, #14]
	for(int i = 0;i < 7;i++){
 8000fc8:	68bb      	ldr	r3, [r7, #8]
 8000fca:	3301      	adds	r3, #1
 8000fcc:	60bb      	str	r3, [r7, #8]
 8000fce:	68bb      	ldr	r3, [r7, #8]
 8000fd0:	2b06      	cmp	r3, #6
 8000fd2:	ddeb      	ble.n	8000fac <get_min+0x14>
	}
	return min;
 8000fd4:	89fb      	ldrh	r3, [r7, #14]
}
 8000fd6:	4618      	mov	r0, r3
 8000fd8:	3714      	adds	r7, #20
 8000fda:	46bd      	mov	sp, r7
 8000fdc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000fe0:	4770      	bx	lr

08000fe2 <get_max>:

uint16_t get_max(const uint16_t* values){
 8000fe2:	b480      	push	{r7}
 8000fe4:	b085      	sub	sp, #20
 8000fe6:	af00      	add	r7, sp, #0
 8000fe8:	6078      	str	r0, [r7, #4]
	uint16_t max = values[0];
 8000fea:	687b      	ldr	r3, [r7, #4]
 8000fec:	881b      	ldrh	r3, [r3, #0]
 8000fee:	81fb      	strh	r3, [r7, #14]
	for(int i = 0;i < 7;i++){
 8000ff0:	2300      	movs	r3, #0
 8000ff2:	60bb      	str	r3, [r7, #8]
 8000ff4:	e010      	b.n	8001018 <get_max+0x36>
		if(max < values[i]) max = values[i];
 8000ff6:	68bb      	ldr	r3, [r7, #8]
 8000ff8:	005b      	lsls	r3, r3, #1
 8000ffa:	687a      	ldr	r2, [r7, #4]
 8000ffc:	4413      	add	r3, r2
 8000ffe:	881b      	ldrh	r3, [r3, #0]
 8001000:	89fa      	ldrh	r2, [r7, #14]
 8001002:	429a      	cmp	r2, r3
 8001004:	d205      	bcs.n	8001012 <get_max+0x30>
 8001006:	68bb      	ldr	r3, [r7, #8]
 8001008:	005b      	lsls	r3, r3, #1
 800100a:	687a      	ldr	r2, [r7, #4]
 800100c:	4413      	add	r3, r2
 800100e:	881b      	ldrh	r3, [r3, #0]
 8001010:	81fb      	strh	r3, [r7, #14]
	for(int i = 0;i < 7;i++){
 8001012:	68bb      	ldr	r3, [r7, #8]
 8001014:	3301      	adds	r3, #1
 8001016:	60bb      	str	r3, [r7, #8]
 8001018:	68bb      	ldr	r3, [r7, #8]
 800101a:	2b06      	cmp	r3, #6
 800101c:	ddeb      	ble.n	8000ff6 <get_max+0x14>
	}
	return max;
 800101e:	89fb      	ldrh	r3, [r7, #14]
}
 8001020:	4618      	mov	r0, r3
 8001022:	3714      	adds	r7, #20
 8001024:	46bd      	mov	sp, r7
 8001026:	f85d 7b04 	ldr.w	r7, [sp], #4
 800102a:	4770      	bx	lr

0800102c <get_mean_values>:

uint16_t* get_mean_values(const uint16_t* values){
 800102c:	b580      	push	{r7, lr}
 800102e:	b088      	sub	sp, #32
 8001030:	af00      	add	r7, sp, #0
 8001032:	6078      	str	r0, [r7, #4]
	uint16_t* new_val = malloc(sizeof(uint16_t) * 7);
 8001034:	200e      	movs	r0, #14
 8001036:	f001 fb0d 	bl	8002654 <malloc>
 800103a:	4603      	mov	r3, r0
 800103c:	61bb      	str	r3, [r7, #24]
	int step = round((values[0] + values[1] + values[2] + values[3]+ values[4] + values[5] + values[6]) / 7);
 800103e:	687b      	ldr	r3, [r7, #4]
 8001040:	881b      	ldrh	r3, [r3, #0]
 8001042:	461a      	mov	r2, r3
 8001044:	687b      	ldr	r3, [r7, #4]
 8001046:	3302      	adds	r3, #2
 8001048:	881b      	ldrh	r3, [r3, #0]
 800104a:	4413      	add	r3, r2
 800104c:	687a      	ldr	r2, [r7, #4]
 800104e:	3204      	adds	r2, #4
 8001050:	8812      	ldrh	r2, [r2, #0]
 8001052:	4413      	add	r3, r2
 8001054:	687a      	ldr	r2, [r7, #4]
 8001056:	3206      	adds	r2, #6
 8001058:	8812      	ldrh	r2, [r2, #0]
 800105a:	4413      	add	r3, r2
 800105c:	687a      	ldr	r2, [r7, #4]
 800105e:	3208      	adds	r2, #8
 8001060:	8812      	ldrh	r2, [r2, #0]
 8001062:	4413      	add	r3, r2
 8001064:	687a      	ldr	r2, [r7, #4]
 8001066:	320a      	adds	r2, #10
 8001068:	8812      	ldrh	r2, [r2, #0]
 800106a:	4413      	add	r3, r2
 800106c:	687a      	ldr	r2, [r7, #4]
 800106e:	320c      	adds	r2, #12
 8001070:	8812      	ldrh	r2, [r2, #0]
 8001072:	4413      	add	r3, r2
 8001074:	4a21      	ldr	r2, [pc, #132]	; (80010fc <get_mean_values+0xd0>)
 8001076:	fb82 1203 	smull	r1, r2, r2, r3
 800107a:	441a      	add	r2, r3
 800107c:	1092      	asrs	r2, r2, #2
 800107e:	17db      	asrs	r3, r3, #31
 8001080:	1ad3      	subs	r3, r2, r3
 8001082:	4618      	mov	r0, r3
 8001084:	f7ff fa56 	bl	8000534 <__aeabi_i2d>
 8001088:	4602      	mov	r2, r0
 800108a:	460b      	mov	r3, r1
 800108c:	4610      	mov	r0, r2
 800108e:	4619      	mov	r1, r3
 8001090:	f7ff fd6a 	bl	8000b68 <__aeabi_d2iz>
 8001094:	4603      	mov	r3, r0
 8001096:	617b      	str	r3, [r7, #20]
	int min = get_min(values);
 8001098:	6878      	ldr	r0, [r7, #4]
 800109a:	f7ff ff7d 	bl	8000f98 <get_min>
 800109e:	4603      	mov	r3, r0
 80010a0:	613b      	str	r3, [r7, #16]
	int max = get_max(values);
 80010a2:	6878      	ldr	r0, [r7, #4]
 80010a4:	f7ff ff9d 	bl	8000fe2 <get_max>
 80010a8:	4603      	mov	r3, r0
 80010aa:	60fb      	str	r3, [r7, #12]
	new_val[0] = min;
 80010ac:	693b      	ldr	r3, [r7, #16]
 80010ae:	b29a      	uxth	r2, r3
 80010b0:	69bb      	ldr	r3, [r7, #24]
 80010b2:	801a      	strh	r2, [r3, #0]
	new_val[6] = max;
 80010b4:	69bb      	ldr	r3, [r7, #24]
 80010b6:	330c      	adds	r3, #12
 80010b8:	68fa      	ldr	r2, [r7, #12]
 80010ba:	b292      	uxth	r2, r2
 80010bc:	801a      	strh	r2, [r3, #0]
	for(int i = 1;i < 6;i++){
 80010be:	2301      	movs	r3, #1
 80010c0:	61fb      	str	r3, [r7, #28]
 80010c2:	e013      	b.n	80010ec <get_mean_values+0xc0>
			new_val[i] = new_val[i-1] + step;
 80010c4:	69fb      	ldr	r3, [r7, #28]
 80010c6:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 80010ca:	3b01      	subs	r3, #1
 80010cc:	005b      	lsls	r3, r3, #1
 80010ce:	69ba      	ldr	r2, [r7, #24]
 80010d0:	4413      	add	r3, r2
 80010d2:	8819      	ldrh	r1, [r3, #0]
 80010d4:	697b      	ldr	r3, [r7, #20]
 80010d6:	b29a      	uxth	r2, r3
 80010d8:	69fb      	ldr	r3, [r7, #28]
 80010da:	005b      	lsls	r3, r3, #1
 80010dc:	69b8      	ldr	r0, [r7, #24]
 80010de:	4403      	add	r3, r0
 80010e0:	440a      	add	r2, r1
 80010e2:	b292      	uxth	r2, r2
 80010e4:	801a      	strh	r2, [r3, #0]
	for(int i = 1;i < 6;i++){
 80010e6:	69fb      	ldr	r3, [r7, #28]
 80010e8:	3301      	adds	r3, #1
 80010ea:	61fb      	str	r3, [r7, #28]
 80010ec:	69fb      	ldr	r3, [r7, #28]
 80010ee:	2b05      	cmp	r3, #5
 80010f0:	dde8      	ble.n	80010c4 <get_mean_values+0x98>
	}
	return new_val;
 80010f2:	69bb      	ldr	r3, [r7, #24]
}
 80010f4:	4618      	mov	r0, r3
 80010f6:	3720      	adds	r7, #32
 80010f8:	46bd      	mov	sp, r7
 80010fa:	bd80      	pop	{r7, pc}
 80010fc:	92492493 	.word	0x92492493

08001100 <get_graph_value>:

uint16_t get_graph_value(const uint16_t* values,int length,uint16_t value){
 8001100:	b580      	push	{r7, lr}
 8001102:	b086      	sub	sp, #24
 8001104:	af00      	add	r7, sp, #0
 8001106:	60f8      	str	r0, [r7, #12]
 8001108:	60b9      	str	r1, [r7, #8]
 800110a:	4613      	mov	r3, r2
 800110c:	80fb      	strh	r3, [r7, #6]
	int max = get_max(values);
 800110e:	68f8      	ldr	r0, [r7, #12]
 8001110:	f7ff ff67 	bl	8000fe2 <get_max>
 8001114:	4603      	mov	r3, r0
 8001116:	617b      	str	r3, [r7, #20]
	uint16_t value2 = (value * length) / max;
 8001118:	88fb      	ldrh	r3, [r7, #6]
 800111a:	68ba      	ldr	r2, [r7, #8]
 800111c:	fb02 f203 	mul.w	r2, r2, r3
 8001120:	697b      	ldr	r3, [r7, #20]
 8001122:	fb92 f3f3 	sdiv	r3, r2, r3
 8001126:	827b      	strh	r3, [r7, #18]
	return value2;
 8001128:	8a7b      	ldrh	r3, [r7, #18]
}
 800112a:	4618      	mov	r0, r3
 800112c:	3718      	adds	r7, #24
 800112e:	46bd      	mov	sp, r7
 8001130:	bd80      	pop	{r7, pc}
 8001132:	0000      	movs	r0, r0
 8001134:	0000      	movs	r0, r0
	...

08001138 <draw_covid_cases>:

void draw_covid_cases(){
 8001138:	b5b0      	push	{r4, r5, r7, lr}
 800113a:	b09a      	sub	sp, #104	; 0x68
 800113c:	af02      	add	r7, sp, #8
	//the y axis being drawn
	LCD_HorizontalLine(30,30,210,green);
 800113e:	f44f 63fc 	mov.w	r3, #2016	; 0x7e0
 8001142:	22d2      	movs	r2, #210	; 0xd2
 8001144:	211e      	movs	r1, #30
 8001146:	201e      	movs	r0, #30
 8001148:	f000 fda0 	bl	8001c8c <LCD_HorizontalLine>
	LCD_HorizontalLine(31,30,210,green);
 800114c:	f44f 63fc 	mov.w	r3, #2016	; 0x7e0
 8001150:	22d2      	movs	r2, #210	; 0xd2
 8001152:	211e      	movs	r1, #30
 8001154:	201f      	movs	r0, #31
 8001156:	f000 fd99 	bl	8001c8c <LCD_HorizontalLine>

	// the x axis being drawn
	LCD_VerticalLine(30,240,210,green);
 800115a:	f44f 63fc 	mov.w	r3, #2016	; 0x7e0
 800115e:	22d2      	movs	r2, #210	; 0xd2
 8001160:	21f0      	movs	r1, #240	; 0xf0
 8001162:	201e      	movs	r0, #30
 8001164:	f000 fdd2 	bl	8001d0c <LCD_VerticalLine>
	LCD_VerticalLine(30,241,210,green);
 8001168:	f44f 63fc 	mov.w	r3, #2016	; 0x7e0
 800116c:	22d2      	movs	r2, #210	; 0xd2
 800116e:	21f1      	movs	r1, #241	; 0xf1
 8001170:	201e      	movs	r0, #30
 8001172:	f000 fdcb 	bl	8001d0c <LCD_VerticalLine>

	//drawing the arrows for the graph
	LCD_Line(240,240,10,310,green);
 8001176:	f44f 63fc 	mov.w	r3, #2016	; 0x7e0
 800117a:	9300      	str	r3, [sp, #0]
 800117c:	f44f 739b 	mov.w	r3, #310	; 0x136
 8001180:	220a      	movs	r2, #10
 8001182:	21f0      	movs	r1, #240	; 0xf0
 8001184:	20f0      	movs	r0, #240	; 0xf0
 8001186:	f000 fe03 	bl	8001d90 <LCD_Line>
	LCD_Line(240,240,10,230,green);
 800118a:	f44f 63fc 	mov.w	r3, #2016	; 0x7e0
 800118e:	9300      	str	r3, [sp, #0]
 8001190:	23e6      	movs	r3, #230	; 0xe6
 8001192:	220a      	movs	r2, #10
 8001194:	21f0      	movs	r1, #240	; 0xf0
 8001196:	20f0      	movs	r0, #240	; 0xf0
 8001198:	f000 fdfa 	bl	8001d90 <LCD_Line>

	uint16_t clr = 0xF800;
 800119c:	f44f 4378 	mov.w	r3, #63488	; 0xf800
 80011a0:	f8a7 304e 	strh.w	r3, [r7, #78]	; 0x4e
	//draw on x axis
	const char* buff[7] = {"12/27/21","12/28/21","12/29/21","12/30/21","12/31/21","1/1/22","1/2/22"};
 80011a4:	4b80      	ldr	r3, [pc, #512]	; (80013a8 <draw_covid_cases+0x270>)
 80011a6:	f107 041c 	add.w	r4, r7, #28
 80011aa:	461d      	mov	r5, r3
 80011ac:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80011ae:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80011b0:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80011b4:	e884 0007 	stmia.w	r4, {r0, r1, r2}
	const uint16_t* values[7] = {2503374 ,  2447758 , 2454645  , 2463780  , 2469951  ,2475729 , 2480736};
 80011b8:	4b7c      	ldr	r3, [pc, #496]	; (80013ac <draw_covid_cases+0x274>)
 80011ba:	463c      	mov	r4, r7
 80011bc:	461d      	mov	r5, r3
 80011be:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80011c0:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80011c2:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80011c6:	e884 0007 	stmia.w	r4, {r0, r1, r2}
	const uint16_t* new_values = get_mean_values(values);
 80011ca:	463b      	mov	r3, r7
 80011cc:	4618      	mov	r0, r3
 80011ce:	f7ff ff2d 	bl	800102c <get_mean_values>
 80011d2:	64b8      	str	r0, [r7, #72]	; 0x48
	int step = 30;
 80011d4:	231e      	movs	r3, #30
 80011d6:	65fb      	str	r3, [r7, #92]	; 0x5c
	int step2 = 210;
 80011d8:	23d2      	movs	r3, #210	; 0xd2
 80011da:	65bb      	str	r3, [r7, #88]	; 0x58
	uint16_t before_x = 0,before_y = 0;
 80011dc:	2300      	movs	r3, #0
 80011de:	f8a7 3056 	strh.w	r3, [r7, #86]	; 0x56
 80011e2:	2300      	movs	r3, #0
 80011e4:	f8a7 3054 	strh.w	r3, [r7, #84]	; 0x54
	for(int i = 0;i < 5;i++)
 80011e8:	2300      	movs	r3, #0
 80011ea:	653b      	str	r3, [r7, #80]	; 0x50
 80011ec:	e0ce      	b.n	800138c <draw_covid_cases+0x254>
	{

		Day* day = get_day(buff[i]);
 80011ee:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 80011f0:	009b      	lsls	r3, r3, #2
 80011f2:	f107 0260 	add.w	r2, r7, #96	; 0x60
 80011f6:	4413      	add	r3, r2
 80011f8:	f853 3c44 	ldr.w	r3, [r3, #-68]
 80011fc:	4618      	mov	r0, r3
 80011fe:	f7ff feaf 	bl	8000f60 <get_day>
 8001202:	6478      	str	r0, [r7, #68]	; 0x44
		// draw on the x axis
		LCD_Write_Number_dec(step,250,day->day,2);
 8001204:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8001206:	b298      	uxth	r0, r3
 8001208:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 800120a:	881b      	ldrh	r3, [r3, #0]
 800120c:	b29a      	uxth	r2, r3
 800120e:	2302      	movs	r3, #2
 8001210:	21fa      	movs	r1, #250	; 0xfa
 8001212:	f7ff fe4f 	bl	8000eb4 <LCD_Write_Number_dec>
		LCD_WriteChar(step+23,250,'/',YELLOW,BLACK);
 8001216:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8001218:	b29b      	uxth	r3, r3
 800121a:	3317      	adds	r3, #23
 800121c:	b29c      	uxth	r4, r3
 800121e:	2200      	movs	r2, #0
 8001220:	21ff      	movs	r1, #255	; 0xff
 8001222:	20ff      	movs	r0, #255	; 0xff
 8001224:	f000 fed4 	bl	8001fd0 <RGB>
 8001228:	4603      	mov	r3, r0
 800122a:	461d      	mov	r5, r3
 800122c:	2200      	movs	r2, #0
 800122e:	2100      	movs	r1, #0
 8001230:	2000      	movs	r0, #0
 8001232:	f000 fecd 	bl	8001fd0 <RGB>
 8001236:	4603      	mov	r3, r0
 8001238:	9300      	str	r3, [sp, #0]
 800123a:	462b      	mov	r3, r5
 800123c:	222f      	movs	r2, #47	; 0x2f
 800123e:	21fa      	movs	r1, #250	; 0xfa
 8001240:	4620      	mov	r0, r4
 8001242:	f000 fe73 	bl	8001f2c <LCD_WriteChar>
		LCD_Write_Number_dec(step+18,250,day->year,2);
 8001246:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8001248:	b29b      	uxth	r3, r3
 800124a:	3312      	adds	r3, #18
 800124c:	b298      	uxth	r0, r3
 800124e:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8001250:	889b      	ldrh	r3, [r3, #4]
 8001252:	b29a      	uxth	r2, r3
 8001254:	2302      	movs	r3, #2
 8001256:	21fa      	movs	r1, #250	; 0xfa
 8001258:	f7ff fe2c 	bl	8000eb4 <LCD_Write_Number_dec>

		//draw on the y axis
		LCD_Write_Number_dec(5,step2,new_values[i],2);
 800125c:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 800125e:	b299      	uxth	r1, r3
 8001260:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8001262:	005b      	lsls	r3, r3, #1
 8001264:	6cba      	ldr	r2, [r7, #72]	; 0x48
 8001266:	4413      	add	r3, r2
 8001268:	881a      	ldrh	r2, [r3, #0]
 800126a:	2302      	movs	r3, #2
 800126c:	2005      	movs	r0, #5
 800126e:	f7ff fe21 	bl	8000eb4 <LCD_Write_Number_dec>

		//draw points with data
		uint16_t step_y = get_graph_value(new_values,210,values[i]);
 8001272:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8001274:	009b      	lsls	r3, r3, #2
 8001276:	f107 0260 	add.w	r2, r7, #96	; 0x60
 800127a:	4413      	add	r3, r2
 800127c:	f853 3c60 	ldr.w	r3, [r3, #-96]
 8001280:	b29b      	uxth	r3, r3
 8001282:	461a      	mov	r2, r3
 8001284:	21d2      	movs	r1, #210	; 0xd2
 8001286:	6cb8      	ldr	r0, [r7, #72]	; 0x48
 8001288:	f7ff ff3a 	bl	8001100 <get_graph_value>
 800128c:	4603      	mov	r3, r0
 800128e:	f8a7 3042 	strh.w	r3, [r7, #66]	; 0x42
		step_y = abs(210-step_y);
 8001292:	f8b7 3042 	ldrh.w	r3, [r7, #66]	; 0x42
 8001296:	f1c3 03d2 	rsb	r3, r3, #210	; 0xd2
 800129a:	2b00      	cmp	r3, #0
 800129c:	bfb8      	it	lt
 800129e:	425b      	neglt	r3, r3
 80012a0:	f8a7 3042 	strh.w	r3, [r7, #66]	; 0x42
		LCD_FilledCircle(step+20,step_y,2,blue);
 80012a4:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 80012a6:	b29b      	uxth	r3, r3
 80012a8:	3314      	adds	r3, #20
 80012aa:	b298      	uxth	r0, r3
 80012ac:	f8b7 1042 	ldrh.w	r1, [r7, #66]	; 0x42
 80012b0:	231f      	movs	r3, #31
 80012b2:	2202      	movs	r2, #2
 80012b4:	f000 fc42 	bl	8001b3c <LCD_FilledCircle>
		if(before_x != 0 && before_y != 0){
 80012b8:	f8b7 3056 	ldrh.w	r3, [r7, #86]	; 0x56
 80012bc:	2b00      	cmp	r3, #0
 80012be:	d050      	beq.n	8001362 <draw_covid_cases+0x22a>
 80012c0:	f8b7 3054 	ldrh.w	r3, [r7, #84]	; 0x54
 80012c4:	2b00      	cmp	r3, #0
 80012c6:	d04c      	beq.n	8001362 <draw_covid_cases+0x22a>
			//compute angle between lines;
			uint16_t distance = abs(step+20 - before_x);
 80012c8:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 80012ca:	f103 0214 	add.w	r2, r3, #20
 80012ce:	f8b7 3056 	ldrh.w	r3, [r7, #86]	; 0x56
 80012d2:	1ad3      	subs	r3, r2, r3
 80012d4:	2b00      	cmp	r3, #0
 80012d6:	bfb8      	it	lt
 80012d8:	425b      	neglt	r3, r3
 80012da:	f8a7 3040 	strh.w	r3, [r7, #64]	; 0x40
			double angle = atan2((210-step_y) - (210 - before_y),step+20 - before_x);
 80012de:	f8b7 2054 	ldrh.w	r2, [r7, #84]	; 0x54
 80012e2:	f8b7 3042 	ldrh.w	r3, [r7, #66]	; 0x42
 80012e6:	1ad3      	subs	r3, r2, r3
 80012e8:	4618      	mov	r0, r3
 80012ea:	f7ff f923 	bl	8000534 <__aeabi_i2d>
 80012ee:	4604      	mov	r4, r0
 80012f0:	460d      	mov	r5, r1
 80012f2:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 80012f4:	f103 0214 	add.w	r2, r3, #20
 80012f8:	f8b7 3056 	ldrh.w	r3, [r7, #86]	; 0x56
 80012fc:	1ad3      	subs	r3, r2, r3
 80012fe:	4618      	mov	r0, r3
 8001300:	f7ff f918 	bl	8000534 <__aeabi_i2d>
 8001304:	4602      	mov	r2, r0
 8001306:	460b      	mov	r3, r1
 8001308:	ec43 2b11 	vmov	d1, r2, r3
 800130c:	ec45 4b10 	vmov	d0, r4, r5
 8001310:	f005 f9ae 	bl	8006670 <atan2>
 8001314:	ed87 0b0e 	vstr	d0, [r7, #56]	; 0x38
			angle = angle *  57.2958;
 8001318:	a321      	add	r3, pc, #132	; (adr r3, 80013a0 <draw_covid_cases+0x268>)
 800131a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800131e:	e9d7 010e 	ldrd	r0, r1, [r7, #56]	; 0x38
 8001322:	f7ff f971 	bl	8000608 <__aeabi_dmul>
 8001326:	4602      	mov	r2, r0
 8001328:	460b      	mov	r3, r1
 800132a:	e9c7 230e 	strd	r2, r3, [r7, #56]	; 0x38
			LCD_Line(step+20,step_y,distance+5,(int16_t)angle - 90,blue);
 800132e:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8001330:	b29b      	uxth	r3, r3
 8001332:	3314      	adds	r3, #20
 8001334:	b29c      	uxth	r4, r3
 8001336:	f8b7 3040 	ldrh.w	r3, [r7, #64]	; 0x40
 800133a:	3305      	adds	r3, #5
 800133c:	b29d      	uxth	r5, r3
 800133e:	e9d7 010e 	ldrd	r0, r1, [r7, #56]	; 0x38
 8001342:	f7ff fc11 	bl	8000b68 <__aeabi_d2iz>
 8001346:	4603      	mov	r3, r0
 8001348:	b21b      	sxth	r3, r3
 800134a:	b29b      	uxth	r3, r3
 800134c:	3b5a      	subs	r3, #90	; 0x5a
 800134e:	b29b      	uxth	r3, r3
 8001350:	b21b      	sxth	r3, r3
 8001352:	f8b7 1042 	ldrh.w	r1, [r7, #66]	; 0x42
 8001356:	221f      	movs	r2, #31
 8001358:	9200      	str	r2, [sp, #0]
 800135a:	462a      	mov	r2, r5
 800135c:	4620      	mov	r0, r4
 800135e:	f000 fd17 	bl	8001d90 <LCD_Line>

		}
		before_x = step + 20;
 8001362:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8001364:	b29b      	uxth	r3, r3
 8001366:	3314      	adds	r3, #20
 8001368:	f8a7 3056 	strh.w	r3, [r7, #86]	; 0x56
		before_y = step_y;
 800136c:	f8b7 3042 	ldrh.w	r3, [r7, #66]	; 0x42
 8001370:	f8a7 3054 	strh.w	r3, [r7, #84]	; 0x54
		step2 = step2 - 13 - 23;
 8001374:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 8001376:	3b24      	subs	r3, #36	; 0x24
 8001378:	65bb      	str	r3, [r7, #88]	; 0x58
		step = step + 13 + 23;
 800137a:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 800137c:	3324      	adds	r3, #36	; 0x24
 800137e:	65fb      	str	r3, [r7, #92]	; 0x5c

		free(day);
 8001380:	6c78      	ldr	r0, [r7, #68]	; 0x44
 8001382:	f001 f96f 	bl	8002664 <free>
	for(int i = 0;i < 5;i++)
 8001386:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8001388:	3301      	adds	r3, #1
 800138a:	653b      	str	r3, [r7, #80]	; 0x50
 800138c:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800138e:	2b04      	cmp	r3, #4
 8001390:	f77f af2d 	ble.w	80011ee <draw_covid_cases+0xb6>
	}

}
 8001394:	bf00      	nop
 8001396:	bf00      	nop
 8001398:	3760      	adds	r7, #96	; 0x60
 800139a:	46bd      	mov	sp, r7
 800139c:	bdb0      	pop	{r4, r5, r7, pc}
 800139e:	bf00      	nop
 80013a0:	c63f1412 	.word	0xc63f1412
 80013a4:	404ca5dc 	.word	0x404ca5dc
 80013a8:	08007b90 	.word	0x08007b90
 80013ac:	08007bac 	.word	0x08007bac

080013b0 <main>:


int main(){
 80013b0:	b580      	push	{r7, lr}
 80013b2:	af00      	add	r7, sp, #0
	SystemCoreClockSetHSI();
 80013b4:	f7ff fcc4 	bl	8000d40 <SystemCoreClockSetHSI>
	SystemCoreClockUpdate();
 80013b8:	f000 f91e 	bl	80015f8 <SystemCoreClockUpdate>
	TIM_Init();
 80013bc:	f7ff fd32 	bl	8000e24 <TIM_Init>

	GPIO_Init();
 80013c0:	f000 f9aa 	bl	8001718 <GPIO_Init>
	ADC_Init();
 80013c4:	f000 f9f6 	bl	80017b4 <ADC_Init>

	LCD_Init(BLACK);
 80013c8:	2200      	movs	r2, #0
 80013ca:	2100      	movs	r1, #0
 80013cc:	2000      	movs	r0, #0
 80013ce:	f000 fdff 	bl	8001fd0 <RGB>
 80013d2:	4603      	mov	r3, r0
 80013d4:	4618      	mov	r0, r3
 80013d6:	f000 ff7f 	bl	80022d8 <LCD_Init>
	draw_covid_cases();
 80013da:	f7ff fead 	bl	8001138 <draw_covid_cases>
 80013de:	2300      	movs	r3, #0

}
 80013e0:	4618      	mov	r0, r3
 80013e2:	bd80      	pop	{r7, pc}

080013e4 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 80013e4:	b480      	push	{r7}
 80013e6:	af00      	add	r7, sp, #0

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 80013e8:	bf00      	nop
 80013ea:	46bd      	mov	sp, r7
 80013ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80013f0:	4770      	bx	lr

080013f2 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 80013f2:	b480      	push	{r7}
 80013f4:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 80013f6:	e7fe      	b.n	80013f6 <HardFault_Handler+0x4>

080013f8 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 80013f8:	b480      	push	{r7}
 80013fa:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 80013fc:	e7fe      	b.n	80013fc <MemManage_Handler+0x4>

080013fe <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 80013fe:	b480      	push	{r7}
 8001400:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001402:	e7fe      	b.n	8001402 <BusFault_Handler+0x4>

08001404 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8001404:	b480      	push	{r7}
 8001406:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001408:	e7fe      	b.n	8001408 <UsageFault_Handler+0x4>

0800140a <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 800140a:	b480      	push	{r7}
 800140c:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 800140e:	bf00      	nop
 8001410:	46bd      	mov	sp, r7
 8001412:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001416:	4770      	bx	lr

08001418 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8001418:	b480      	push	{r7}
 800141a:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 800141c:	bf00      	nop
 800141e:	46bd      	mov	sp, r7
 8001420:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001424:	4770      	bx	lr

08001426 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8001426:	b480      	push	{r7}
 8001428:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 800142a:	bf00      	nop
 800142c:	46bd      	mov	sp, r7
 800142e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001432:	4770      	bx	lr

08001434 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8001434:	b580      	push	{r7, lr}
 8001436:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8001438:	f001 f8ce 	bl	80025d8 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 800143c:	bf00      	nop
 800143e:	bd80      	pop	{r7, pc}

08001440 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 8001440:	b480      	push	{r7}
 8001442:	af00      	add	r7, sp, #0
	return 1;
 8001444:	2301      	movs	r3, #1
}
 8001446:	4618      	mov	r0, r3
 8001448:	46bd      	mov	sp, r7
 800144a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800144e:	4770      	bx	lr

08001450 <_kill>:

int _kill(int pid, int sig)
{
 8001450:	b580      	push	{r7, lr}
 8001452:	b082      	sub	sp, #8
 8001454:	af00      	add	r7, sp, #0
 8001456:	6078      	str	r0, [r7, #4]
 8001458:	6039      	str	r1, [r7, #0]
	errno = EINVAL;
 800145a:	f001 f8d1 	bl	8002600 <__errno>
 800145e:	4603      	mov	r3, r0
 8001460:	2216      	movs	r2, #22
 8001462:	601a      	str	r2, [r3, #0]
	return -1;
 8001464:	f04f 33ff 	mov.w	r3, #4294967295
}
 8001468:	4618      	mov	r0, r3
 800146a:	3708      	adds	r7, #8
 800146c:	46bd      	mov	sp, r7
 800146e:	bd80      	pop	{r7, pc}

08001470 <_exit>:

void _exit (int status)
{
 8001470:	b580      	push	{r7, lr}
 8001472:	b082      	sub	sp, #8
 8001474:	af00      	add	r7, sp, #0
 8001476:	6078      	str	r0, [r7, #4]
	_kill(status, -1);
 8001478:	f04f 31ff 	mov.w	r1, #4294967295
 800147c:	6878      	ldr	r0, [r7, #4]
 800147e:	f7ff ffe7 	bl	8001450 <_kill>
	while (1) {}		/* Make sure we hang here */
 8001482:	e7fe      	b.n	8001482 <_exit+0x12>

08001484 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8001484:	b580      	push	{r7, lr}
 8001486:	b086      	sub	sp, #24
 8001488:	af00      	add	r7, sp, #0
 800148a:	60f8      	str	r0, [r7, #12]
 800148c:	60b9      	str	r1, [r7, #8]
 800148e:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001490:	2300      	movs	r3, #0
 8001492:	617b      	str	r3, [r7, #20]
 8001494:	e00a      	b.n	80014ac <_read+0x28>
	{
		*ptr++ = __io_getchar();
 8001496:	f3af 8000 	nop.w
 800149a:	4601      	mov	r1, r0
 800149c:	68bb      	ldr	r3, [r7, #8]
 800149e:	1c5a      	adds	r2, r3, #1
 80014a0:	60ba      	str	r2, [r7, #8]
 80014a2:	b2ca      	uxtb	r2, r1
 80014a4:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80014a6:	697b      	ldr	r3, [r7, #20]
 80014a8:	3301      	adds	r3, #1
 80014aa:	617b      	str	r3, [r7, #20]
 80014ac:	697a      	ldr	r2, [r7, #20]
 80014ae:	687b      	ldr	r3, [r7, #4]
 80014b0:	429a      	cmp	r2, r3
 80014b2:	dbf0      	blt.n	8001496 <_read+0x12>
	}

return len;
 80014b4:	687b      	ldr	r3, [r7, #4]
}
 80014b6:	4618      	mov	r0, r3
 80014b8:	3718      	adds	r7, #24
 80014ba:	46bd      	mov	sp, r7
 80014bc:	bd80      	pop	{r7, pc}

080014be <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80014be:	b580      	push	{r7, lr}
 80014c0:	b086      	sub	sp, #24
 80014c2:	af00      	add	r7, sp, #0
 80014c4:	60f8      	str	r0, [r7, #12]
 80014c6:	60b9      	str	r1, [r7, #8]
 80014c8:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80014ca:	2300      	movs	r3, #0
 80014cc:	617b      	str	r3, [r7, #20]
 80014ce:	e009      	b.n	80014e4 <_write+0x26>
	{
		__io_putchar(*ptr++);
 80014d0:	68bb      	ldr	r3, [r7, #8]
 80014d2:	1c5a      	adds	r2, r3, #1
 80014d4:	60ba      	str	r2, [r7, #8]
 80014d6:	781b      	ldrb	r3, [r3, #0]
 80014d8:	4618      	mov	r0, r3
 80014da:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80014de:	697b      	ldr	r3, [r7, #20]
 80014e0:	3301      	adds	r3, #1
 80014e2:	617b      	str	r3, [r7, #20]
 80014e4:	697a      	ldr	r2, [r7, #20]
 80014e6:	687b      	ldr	r3, [r7, #4]
 80014e8:	429a      	cmp	r2, r3
 80014ea:	dbf1      	blt.n	80014d0 <_write+0x12>
	}
	return len;
 80014ec:	687b      	ldr	r3, [r7, #4]
}
 80014ee:	4618      	mov	r0, r3
 80014f0:	3718      	adds	r7, #24
 80014f2:	46bd      	mov	sp, r7
 80014f4:	bd80      	pop	{r7, pc}

080014f6 <_close>:

int _close(int file)
{
 80014f6:	b480      	push	{r7}
 80014f8:	b083      	sub	sp, #12
 80014fa:	af00      	add	r7, sp, #0
 80014fc:	6078      	str	r0, [r7, #4]
	return -1;
 80014fe:	f04f 33ff 	mov.w	r3, #4294967295
}
 8001502:	4618      	mov	r0, r3
 8001504:	370c      	adds	r7, #12
 8001506:	46bd      	mov	sp, r7
 8001508:	f85d 7b04 	ldr.w	r7, [sp], #4
 800150c:	4770      	bx	lr

0800150e <_fstat>:


int _fstat(int file, struct stat *st)
{
 800150e:	b480      	push	{r7}
 8001510:	b083      	sub	sp, #12
 8001512:	af00      	add	r7, sp, #0
 8001514:	6078      	str	r0, [r7, #4]
 8001516:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 8001518:	683b      	ldr	r3, [r7, #0]
 800151a:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 800151e:	605a      	str	r2, [r3, #4]
	return 0;
 8001520:	2300      	movs	r3, #0
}
 8001522:	4618      	mov	r0, r3
 8001524:	370c      	adds	r7, #12
 8001526:	46bd      	mov	sp, r7
 8001528:	f85d 7b04 	ldr.w	r7, [sp], #4
 800152c:	4770      	bx	lr

0800152e <_isatty>:

int _isatty(int file)
{
 800152e:	b480      	push	{r7}
 8001530:	b083      	sub	sp, #12
 8001532:	af00      	add	r7, sp, #0
 8001534:	6078      	str	r0, [r7, #4]
	return 1;
 8001536:	2301      	movs	r3, #1
}
 8001538:	4618      	mov	r0, r3
 800153a:	370c      	adds	r7, #12
 800153c:	46bd      	mov	sp, r7
 800153e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001542:	4770      	bx	lr

08001544 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8001544:	b480      	push	{r7}
 8001546:	b085      	sub	sp, #20
 8001548:	af00      	add	r7, sp, #0
 800154a:	60f8      	str	r0, [r7, #12]
 800154c:	60b9      	str	r1, [r7, #8]
 800154e:	607a      	str	r2, [r7, #4]
	return 0;
 8001550:	2300      	movs	r3, #0
}
 8001552:	4618      	mov	r0, r3
 8001554:	3714      	adds	r7, #20
 8001556:	46bd      	mov	sp, r7
 8001558:	f85d 7b04 	ldr.w	r7, [sp], #4
 800155c:	4770      	bx	lr
	...

08001560 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8001560:	b580      	push	{r7, lr}
 8001562:	b086      	sub	sp, #24
 8001564:	af00      	add	r7, sp, #0
 8001566:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8001568:	4a14      	ldr	r2, [pc, #80]	; (80015bc <_sbrk+0x5c>)
 800156a:	4b15      	ldr	r3, [pc, #84]	; (80015c0 <_sbrk+0x60>)
 800156c:	1ad3      	subs	r3, r2, r3
 800156e:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8001570:	697b      	ldr	r3, [r7, #20]
 8001572:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initalize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8001574:	4b13      	ldr	r3, [pc, #76]	; (80015c4 <_sbrk+0x64>)
 8001576:	681b      	ldr	r3, [r3, #0]
 8001578:	2b00      	cmp	r3, #0
 800157a:	d102      	bne.n	8001582 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 800157c:	4b11      	ldr	r3, [pc, #68]	; (80015c4 <_sbrk+0x64>)
 800157e:	4a12      	ldr	r2, [pc, #72]	; (80015c8 <_sbrk+0x68>)
 8001580:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8001582:	4b10      	ldr	r3, [pc, #64]	; (80015c4 <_sbrk+0x64>)
 8001584:	681a      	ldr	r2, [r3, #0]
 8001586:	687b      	ldr	r3, [r7, #4]
 8001588:	4413      	add	r3, r2
 800158a:	693a      	ldr	r2, [r7, #16]
 800158c:	429a      	cmp	r2, r3
 800158e:	d207      	bcs.n	80015a0 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8001590:	f001 f836 	bl	8002600 <__errno>
 8001594:	4603      	mov	r3, r0
 8001596:	220c      	movs	r2, #12
 8001598:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 800159a:	f04f 33ff 	mov.w	r3, #4294967295
 800159e:	e009      	b.n	80015b4 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80015a0:	4b08      	ldr	r3, [pc, #32]	; (80015c4 <_sbrk+0x64>)
 80015a2:	681b      	ldr	r3, [r3, #0]
 80015a4:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80015a6:	4b07      	ldr	r3, [pc, #28]	; (80015c4 <_sbrk+0x64>)
 80015a8:	681a      	ldr	r2, [r3, #0]
 80015aa:	687b      	ldr	r3, [r7, #4]
 80015ac:	4413      	add	r3, r2
 80015ae:	4a05      	ldr	r2, [pc, #20]	; (80015c4 <_sbrk+0x64>)
 80015b0:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 80015b2:	68fb      	ldr	r3, [r7, #12]
}
 80015b4:	4618      	mov	r0, r3
 80015b6:	3718      	adds	r7, #24
 80015b8:	46bd      	mov	sp, r7
 80015ba:	bd80      	pop	{r7, pc}
 80015bc:	20018000 	.word	0x20018000
 80015c0:	00000400 	.word	0x00000400
 80015c4:	200001fc 	.word	0x200001fc
 80015c8:	20000220 	.word	0x20000220

080015cc <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 80015cc:	b480      	push	{r7}
 80015ce:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 80015d0:	4b08      	ldr	r3, [pc, #32]	; (80015f4 <SystemInit+0x28>)
 80015d2:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80015d6:	4a07      	ldr	r2, [pc, #28]	; (80015f4 <SystemInit+0x28>)
 80015d8:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 80015dc:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 80015e0:	4b04      	ldr	r3, [pc, #16]	; (80015f4 <SystemInit+0x28>)
 80015e2:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 80015e6:	609a      	str	r2, [r3, #8]
#endif
}
 80015e8:	bf00      	nop
 80015ea:	46bd      	mov	sp, r7
 80015ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80015f0:	4770      	bx	lr
 80015f2:	bf00      	nop
 80015f4:	e000ed00 	.word	0xe000ed00

080015f8 <SystemCoreClockUpdate>:
  *     
  * @param  None
  * @retval None
  */
void SystemCoreClockUpdate(void)
{
 80015f8:	b480      	push	{r7}
 80015fa:	b087      	sub	sp, #28
 80015fc:	af00      	add	r7, sp, #0
  uint32_t tmp = 0, pllvco = 0, pllp = 2, pllsource = 0, pllm = 2;
 80015fe:	2300      	movs	r3, #0
 8001600:	613b      	str	r3, [r7, #16]
 8001602:	2300      	movs	r3, #0
 8001604:	617b      	str	r3, [r7, #20]
 8001606:	2302      	movs	r3, #2
 8001608:	60fb      	str	r3, [r7, #12]
 800160a:	2300      	movs	r3, #0
 800160c:	60bb      	str	r3, [r7, #8]
 800160e:	2302      	movs	r3, #2
 8001610:	607b      	str	r3, [r7, #4]
  
  /* Get SYSCLK source -------------------------------------------------------*/
  tmp = RCC->CFGR & RCC_CFGR_SWS;
 8001612:	4b34      	ldr	r3, [pc, #208]	; (80016e4 <SystemCoreClockUpdate+0xec>)
 8001614:	689b      	ldr	r3, [r3, #8]
 8001616:	f003 030c 	and.w	r3, r3, #12
 800161a:	613b      	str	r3, [r7, #16]

  switch (tmp)
 800161c:	693b      	ldr	r3, [r7, #16]
 800161e:	2b08      	cmp	r3, #8
 8001620:	d011      	beq.n	8001646 <SystemCoreClockUpdate+0x4e>
 8001622:	693b      	ldr	r3, [r7, #16]
 8001624:	2b08      	cmp	r3, #8
 8001626:	d844      	bhi.n	80016b2 <SystemCoreClockUpdate+0xba>
 8001628:	693b      	ldr	r3, [r7, #16]
 800162a:	2b00      	cmp	r3, #0
 800162c:	d003      	beq.n	8001636 <SystemCoreClockUpdate+0x3e>
 800162e:	693b      	ldr	r3, [r7, #16]
 8001630:	2b04      	cmp	r3, #4
 8001632:	d004      	beq.n	800163e <SystemCoreClockUpdate+0x46>
 8001634:	e03d      	b.n	80016b2 <SystemCoreClockUpdate+0xba>
  {
    case 0x00:  /* HSI used as system clock source */
      SystemCoreClock = HSI_VALUE;
 8001636:	4b2c      	ldr	r3, [pc, #176]	; (80016e8 <SystemCoreClockUpdate+0xf0>)
 8001638:	4a2c      	ldr	r2, [pc, #176]	; (80016ec <SystemCoreClockUpdate+0xf4>)
 800163a:	601a      	str	r2, [r3, #0]
      break;
 800163c:	e03d      	b.n	80016ba <SystemCoreClockUpdate+0xc2>
    case 0x04:  /* HSE used as system clock source */
      SystemCoreClock = HSE_VALUE;
 800163e:	4b2a      	ldr	r3, [pc, #168]	; (80016e8 <SystemCoreClockUpdate+0xf0>)
 8001640:	4a2b      	ldr	r2, [pc, #172]	; (80016f0 <SystemCoreClockUpdate+0xf8>)
 8001642:	601a      	str	r2, [r3, #0]
      break;
 8001644:	e039      	b.n	80016ba <SystemCoreClockUpdate+0xc2>
    case 0x08:  /* PLL used as system clock source */

      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLL_M) * PLL_N
         SYSCLK = PLL_VCO / PLL_P
         */    
      pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) >> 22;
 8001646:	4b27      	ldr	r3, [pc, #156]	; (80016e4 <SystemCoreClockUpdate+0xec>)
 8001648:	685b      	ldr	r3, [r3, #4]
 800164a:	0d9b      	lsrs	r3, r3, #22
 800164c:	f003 0301 	and.w	r3, r3, #1
 8001650:	60bb      	str	r3, [r7, #8]
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8001652:	4b24      	ldr	r3, [pc, #144]	; (80016e4 <SystemCoreClockUpdate+0xec>)
 8001654:	685b      	ldr	r3, [r3, #4]
 8001656:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 800165a:	607b      	str	r3, [r7, #4]
      
      if (pllsource != 0)
 800165c:	68bb      	ldr	r3, [r7, #8]
 800165e:	2b00      	cmp	r3, #0
 8001660:	d00c      	beq.n	800167c <SystemCoreClockUpdate+0x84>
      {
        /* HSE used as PLL clock source */
        pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
 8001662:	4a23      	ldr	r2, [pc, #140]	; (80016f0 <SystemCoreClockUpdate+0xf8>)
 8001664:	687b      	ldr	r3, [r7, #4]
 8001666:	fbb2 f3f3 	udiv	r3, r2, r3
 800166a:	4a1e      	ldr	r2, [pc, #120]	; (80016e4 <SystemCoreClockUpdate+0xec>)
 800166c:	6852      	ldr	r2, [r2, #4]
 800166e:	0992      	lsrs	r2, r2, #6
 8001670:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8001674:	fb02 f303 	mul.w	r3, r2, r3
 8001678:	617b      	str	r3, [r7, #20]
 800167a:	e00b      	b.n	8001694 <SystemCoreClockUpdate+0x9c>
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
 800167c:	4a1b      	ldr	r2, [pc, #108]	; (80016ec <SystemCoreClockUpdate+0xf4>)
 800167e:	687b      	ldr	r3, [r7, #4]
 8001680:	fbb2 f3f3 	udiv	r3, r2, r3
 8001684:	4a17      	ldr	r2, [pc, #92]	; (80016e4 <SystemCoreClockUpdate+0xec>)
 8001686:	6852      	ldr	r2, [r2, #4]
 8001688:	0992      	lsrs	r2, r2, #6
 800168a:	f3c2 0208 	ubfx	r2, r2, #0, #9
 800168e:	fb02 f303 	mul.w	r3, r2, r3
 8001692:	617b      	str	r3, [r7, #20]
      }

      pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
 8001694:	4b13      	ldr	r3, [pc, #76]	; (80016e4 <SystemCoreClockUpdate+0xec>)
 8001696:	685b      	ldr	r3, [r3, #4]
 8001698:	0c1b      	lsrs	r3, r3, #16
 800169a:	f003 0303 	and.w	r3, r3, #3
 800169e:	3301      	adds	r3, #1
 80016a0:	005b      	lsls	r3, r3, #1
 80016a2:	60fb      	str	r3, [r7, #12]
      SystemCoreClock = pllvco/pllp;
 80016a4:	697a      	ldr	r2, [r7, #20]
 80016a6:	68fb      	ldr	r3, [r7, #12]
 80016a8:	fbb2 f3f3 	udiv	r3, r2, r3
 80016ac:	4a0e      	ldr	r2, [pc, #56]	; (80016e8 <SystemCoreClockUpdate+0xf0>)
 80016ae:	6013      	str	r3, [r2, #0]
      break;
 80016b0:	e003      	b.n	80016ba <SystemCoreClockUpdate+0xc2>
    default:
      SystemCoreClock = HSI_VALUE;
 80016b2:	4b0d      	ldr	r3, [pc, #52]	; (80016e8 <SystemCoreClockUpdate+0xf0>)
 80016b4:	4a0d      	ldr	r2, [pc, #52]	; (80016ec <SystemCoreClockUpdate+0xf4>)
 80016b6:	601a      	str	r2, [r3, #0]
      break;
 80016b8:	bf00      	nop
  }
  /* Compute HCLK frequency --------------------------------------------------*/
  /* Get HCLK prescaler */
  tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4)];
 80016ba:	4b0a      	ldr	r3, [pc, #40]	; (80016e4 <SystemCoreClockUpdate+0xec>)
 80016bc:	689b      	ldr	r3, [r3, #8]
 80016be:	091b      	lsrs	r3, r3, #4
 80016c0:	f003 030f 	and.w	r3, r3, #15
 80016c4:	4a0b      	ldr	r2, [pc, #44]	; (80016f4 <SystemCoreClockUpdate+0xfc>)
 80016c6:	5cd3      	ldrb	r3, [r2, r3]
 80016c8:	613b      	str	r3, [r7, #16]
  /* HCLK frequency */
  SystemCoreClock >>= tmp;
 80016ca:	4b07      	ldr	r3, [pc, #28]	; (80016e8 <SystemCoreClockUpdate+0xf0>)
 80016cc:	681a      	ldr	r2, [r3, #0]
 80016ce:	693b      	ldr	r3, [r7, #16]
 80016d0:	fa22 f303 	lsr.w	r3, r2, r3
 80016d4:	4a04      	ldr	r2, [pc, #16]	; (80016e8 <SystemCoreClockUpdate+0xf0>)
 80016d6:	6013      	str	r3, [r2, #0]
}
 80016d8:	bf00      	nop
 80016da:	371c      	adds	r7, #28
 80016dc:	46bd      	mov	sp, r7
 80016de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80016e2:	4770      	bx	lr
 80016e4:	40023800 	.word	0x40023800
 80016e8:	20000000 	.word	0x20000000
 80016ec:	00f42400 	.word	0x00f42400
 80016f0:	007a1200 	.word	0x007a1200
 80016f4:	08007bd4 	.word	0x08007bd4

080016f8 <RCC_GPIO_CLK_enable>:
static void TouchMode(void);
static uint16_t ReadADC(void);

// 			enable clock for GPIO 			//

static void RCC_GPIO_CLK_enable(void) {RCC->AHB1ENR |= RCC_AHB1ENR_GPIOAEN | RCC_AHB1ENR_GPIOBEN | RCC_AHB1ENR_GPIOCEN;}
 80016f8:	b480      	push	{r7}
 80016fa:	af00      	add	r7, sp, #0
 80016fc:	4b05      	ldr	r3, [pc, #20]	; (8001714 <RCC_GPIO_CLK_enable+0x1c>)
 80016fe:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001700:	4a04      	ldr	r2, [pc, #16]	; (8001714 <RCC_GPIO_CLK_enable+0x1c>)
 8001702:	f043 0307 	orr.w	r3, r3, #7
 8001706:	6313      	str	r3, [r2, #48]	; 0x30
 8001708:	bf00      	nop
 800170a:	46bd      	mov	sp, r7
 800170c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001710:	4770      	bx	lr
 8001712:	bf00      	nop
 8001714:	40023800 	.word	0x40023800

08001718 <GPIO_Init>:
#include "tftlcdlib.h"

void GPIO_Init(void){
 8001718:	b580      	push	{r7, lr}
 800171a:	af00      	add	r7, sp, #0
// sets the outputs for control and data transfer for the display 
	
	RCC_GPIO_CLK_enable();
 800171c:	f7ff ffec 	bl	80016f8 <RCC_GPIO_CLK_enable>
	
	GPIOA->OSPEEDR |= 0xFFFFFFFF;
 8001720:	4b1d      	ldr	r3, [pc, #116]	; (8001798 <GPIO_Init+0x80>)
 8001722:	689b      	ldr	r3, [r3, #8]
 8001724:	4b1c      	ldr	r3, [pc, #112]	; (8001798 <GPIO_Init+0x80>)
 8001726:	f04f 32ff 	mov.w	r2, #4294967295
 800172a:	609a      	str	r2, [r3, #8]
	GPIOB->OSPEEDR |= 0xFFFFFFFF;
 800172c:	4b1b      	ldr	r3, [pc, #108]	; (800179c <GPIO_Init+0x84>)
 800172e:	689b      	ldr	r3, [r3, #8]
 8001730:	4b1a      	ldr	r3, [pc, #104]	; (800179c <GPIO_Init+0x84>)
 8001732:	f04f 32ff 	mov.w	r2, #4294967295
 8001736:	609a      	str	r2, [r3, #8]
	GPIOC->OSPEEDR |= 0xFFFFFFFF;
 8001738:	4b19      	ldr	r3, [pc, #100]	; (80017a0 <GPIO_Init+0x88>)
 800173a:	689b      	ldr	r3, [r3, #8]
 800173c:	4b18      	ldr	r3, [pc, #96]	; (80017a0 <GPIO_Init+0x88>)
 800173e:	f04f 32ff 	mov.w	r2, #4294967295
 8001742:	609a      	str	r2, [r3, #8]

	GPIOA->MODER &= 0xFFC0FCF0;
 8001744:	4b14      	ldr	r3, [pc, #80]	; (8001798 <GPIO_Init+0x80>)
 8001746:	681a      	ldr	r2, [r3, #0]
 8001748:	4913      	ldr	r1, [pc, #76]	; (8001798 <GPIO_Init+0x80>)
 800174a:	4b16      	ldr	r3, [pc, #88]	; (80017a4 <GPIO_Init+0x8c>)
 800174c:	4013      	ands	r3, r2
 800174e:	600b      	str	r3, [r1, #0]
	GPIOB->MODER &= 0xFFCFF03C;
 8001750:	4b12      	ldr	r3, [pc, #72]	; (800179c <GPIO_Init+0x84>)
 8001752:	681a      	ldr	r2, [r3, #0]
 8001754:	4911      	ldr	r1, [pc, #68]	; (800179c <GPIO_Init+0x84>)
 8001756:	4b14      	ldr	r3, [pc, #80]	; (80017a8 <GPIO_Init+0x90>)
 8001758:	4013      	ands	r3, r2
 800175a:	600b      	str	r3, [r1, #0]
	GPIOC->MODER &= 0xFFFF3FF3;
 800175c:	4b10      	ldr	r3, [pc, #64]	; (80017a0 <GPIO_Init+0x88>)
 800175e:	681b      	ldr	r3, [r3, #0]
 8001760:	4a0f      	ldr	r2, [pc, #60]	; (80017a0 <GPIO_Init+0x88>)
 8001762:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 8001766:	f023 030c 	bic.w	r3, r3, #12
 800176a:	6013      	str	r3, [r2, #0]
		
	GPIOA->MODER |= 0x00150105;
 800176c:	4b0a      	ldr	r3, [pc, #40]	; (8001798 <GPIO_Init+0x80>)
 800176e:	681a      	ldr	r2, [r3, #0]
 8001770:	4909      	ldr	r1, [pc, #36]	; (8001798 <GPIO_Init+0x80>)
 8001772:	4b0e      	ldr	r3, [pc, #56]	; (80017ac <GPIO_Init+0x94>)
 8001774:	4313      	orrs	r3, r2
 8001776:	600b      	str	r3, [r1, #0]
	GPIOB->MODER |= 0x00100541;
 8001778:	4b08      	ldr	r3, [pc, #32]	; (800179c <GPIO_Init+0x84>)
 800177a:	681a      	ldr	r2, [r3, #0]
 800177c:	4907      	ldr	r1, [pc, #28]	; (800179c <GPIO_Init+0x84>)
 800177e:	4b0c      	ldr	r3, [pc, #48]	; (80017b0 <GPIO_Init+0x98>)
 8001780:	4313      	orrs	r3, r2
 8001782:	600b      	str	r3, [r1, #0]
	GPIOC->MODER |= 0x00004004;
 8001784:	4b06      	ldr	r3, [pc, #24]	; (80017a0 <GPIO_Init+0x88>)
 8001786:	681b      	ldr	r3, [r3, #0]
 8001788:	4a05      	ldr	r2, [pc, #20]	; (80017a0 <GPIO_Init+0x88>)
 800178a:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800178e:	f043 0304 	orr.w	r3, r3, #4
 8001792:	6013      	str	r3, [r2, #0]
	
}
 8001794:	bf00      	nop
 8001796:	bd80      	pop	{r7, pc}
 8001798:	40020000 	.word	0x40020000
 800179c:	40020400 	.word	0x40020400
 80017a0:	40020800 	.word	0x40020800
 80017a4:	ffc0fcf0 	.word	0xffc0fcf0
 80017a8:	ffcff03c 	.word	0xffcff03c
 80017ac:	00150105 	.word	0x00150105
 80017b0:	00100541 	.word	0x00100541

080017b4 <ADC_Init>:
	GPIOB->MODER |= 0x00100540;
	GPIOC->MODER |= 0x00004000;

}

void ADC_Init(void){
 80017b4:	b480      	push	{r7}
 80017b6:	af00      	add	r7, sp, #0
	//sets the parameters of the AD converter for touch reading 
	
	ADC1->CR1 &= ~(ADC_CR1_RES_1|ADC_CR1_RES_0); // 10-bit resolution
 80017b8:	4b20      	ldr	r3, [pc, #128]	; (800183c <ADC_Init+0x88>)
 80017ba:	685b      	ldr	r3, [r3, #4]
 80017bc:	4a1f      	ldr	r2, [pc, #124]	; (800183c <ADC_Init+0x88>)
 80017be:	f023 7340 	bic.w	r3, r3, #50331648	; 0x3000000
 80017c2:	6053      	str	r3, [r2, #4]
	ADC1->CR1 &= ~(ADC_CR1_DISCNUM_0|ADC_CR1_DISCNUM_1|ADC_CR1_DISCNUM_2);
 80017c4:	4b1d      	ldr	r3, [pc, #116]	; (800183c <ADC_Init+0x88>)
 80017c6:	685b      	ldr	r3, [r3, #4]
 80017c8:	4a1c      	ldr	r2, [pc, #112]	; (800183c <ADC_Init+0x88>)
 80017ca:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 80017ce:	6053      	str	r3, [r2, #4]
	ADC1->CR1 |= ADC_CR1_SCAN | ADC_CR1_DISCEN; // scan mode and regular discontinuous mode
 80017d0:	4b1a      	ldr	r3, [pc, #104]	; (800183c <ADC_Init+0x88>)
 80017d2:	685b      	ldr	r3, [r3, #4]
 80017d4:	4a19      	ldr	r2, [pc, #100]	; (800183c <ADC_Init+0x88>)
 80017d6:	f443 6310 	orr.w	r3, r3, #2304	; 0x900
 80017da:	6053      	str	r3, [r2, #4]
	ADC1->CR1 &= ~(ADC_CR1_JDISCEN);
 80017dc:	4b17      	ldr	r3, [pc, #92]	; (800183c <ADC_Init+0x88>)
 80017de:	685b      	ldr	r3, [r3, #4]
 80017e0:	4a16      	ldr	r2, [pc, #88]	; (800183c <ADC_Init+0x88>)
 80017e2:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80017e6:	6053      	str	r3, [r2, #4]
	ADC1->CR2 &= ~(ADC_CR2_ALIGN);
 80017e8:	4b14      	ldr	r3, [pc, #80]	; (800183c <ADC_Init+0x88>)
 80017ea:	689b      	ldr	r3, [r3, #8]
 80017ec:	4a13      	ldr	r2, [pc, #76]	; (800183c <ADC_Init+0x88>)
 80017ee:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80017f2:	6093      	str	r3, [r2, #8]
	ADC1->SMPR2 &= ~(ADC_SMPR2_SMP0_Msk);
 80017f4:	4b11      	ldr	r3, [pc, #68]	; (800183c <ADC_Init+0x88>)
 80017f6:	691b      	ldr	r3, [r3, #16]
 80017f8:	4a10      	ldr	r2, [pc, #64]	; (800183c <ADC_Init+0x88>)
 80017fa:	f023 0307 	bic.w	r3, r3, #7
 80017fe:	6113      	str	r3, [r2, #16]
	ADC1->SMPR2 |= ADC_SMPR2_SMP0_1; // 28 cycles, sampling time slection
 8001800:	4b0e      	ldr	r3, [pc, #56]	; (800183c <ADC_Init+0x88>)
 8001802:	691b      	ldr	r3, [r3, #16]
 8001804:	4a0d      	ldr	r2, [pc, #52]	; (800183c <ADC_Init+0x88>)
 8001806:	f043 0302 	orr.w	r3, r3, #2
 800180a:	6113      	str	r3, [r2, #16]
	ADC1->SQR1 &= ~ADC_SQR1_L;
 800180c:	4b0b      	ldr	r3, [pc, #44]	; (800183c <ADC_Init+0x88>)
 800180e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8001810:	4a0a      	ldr	r2, [pc, #40]	; (800183c <ADC_Init+0x88>)
 8001812:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 8001816:	62d3      	str	r3, [r2, #44]	; 0x2c
	ADC->CCR &= ~(ADC_CCR_VBATE|ADC_CCR_TSVREFE);
 8001818:	4b09      	ldr	r3, [pc, #36]	; (8001840 <ADC_Init+0x8c>)
 800181a:	685b      	ldr	r3, [r3, #4]
 800181c:	4a08      	ldr	r2, [pc, #32]	; (8001840 <ADC_Init+0x8c>)
 800181e:	f423 0340 	bic.w	r3, r3, #12582912	; 0xc00000
 8001822:	6053      	str	r3, [r2, #4]
	ADC->CCR &= ~(ADC_CCR_ADCPRE);
 8001824:	4b06      	ldr	r3, [pc, #24]	; (8001840 <ADC_Init+0x8c>)
 8001826:	685b      	ldr	r3, [r3, #4]
 8001828:	4a05      	ldr	r2, [pc, #20]	; (8001840 <ADC_Init+0x8c>)
 800182a:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 800182e:	6053      	str	r3, [r2, #4]
		
}
 8001830:	bf00      	nop
 8001832:	46bd      	mov	sp, r7
 8001834:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001838:	4770      	bx	lr
 800183a:	bf00      	nop
 800183c:	40012000 	.word	0x40012000
 8001840:	40012300 	.word	0x40012300

08001844 <LCD_DrawPixel>:
	uint16_t displayID = Read_Data16b(0x0000);
	
return displayID;
}

void LCD_DrawPixel(uint16_t x, uint16_t y, uint16_t color){
 8001844:	b580      	push	{r7, lr}
 8001846:	b082      	sub	sp, #8
 8001848:	af00      	add	r7, sp, #0
 800184a:	4603      	mov	r3, r0
 800184c:	80fb      	strh	r3, [r7, #6]
 800184e:	460b      	mov	r3, r1
 8001850:	80bb      	strh	r3, [r7, #4]
 8001852:	4613      	mov	r3, r2
 8001854:	807b      	strh	r3, [r7, #2]
	// renders one pixel 
	
	cs_active();
 8001856:	4b1e      	ldr	r3, [pc, #120]	; (80018d0 <LCD_DrawPixel+0x8c>)
 8001858:	699b      	ldr	r3, [r3, #24]
 800185a:	4a1d      	ldr	r2, [pc, #116]	; (80018d0 <LCD_DrawPixel+0x8c>)
 800185c:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8001860:	6193      	str	r3, [r2, #24]
	
	LCD_WriteCommand8b(0x20);
 8001862:	2020      	movs	r0, #32
 8001864:	f000 fcfa 	bl	800225c <LCD_WriteCommand8b>
	LCD_WriteData8b(x >> 8);
 8001868:	88fb      	ldrh	r3, [r7, #6]
 800186a:	0a1b      	lsrs	r3, r3, #8
 800186c:	b29b      	uxth	r3, r3
 800186e:	b2db      	uxtb	r3, r3
 8001870:	4618      	mov	r0, r3
 8001872:	f000 fc9f 	bl	80021b4 <LCD_WriteData8b>
	LCD_WriteData8b(x);
 8001876:	88fb      	ldrh	r3, [r7, #6]
 8001878:	b2db      	uxtb	r3, r3
 800187a:	4618      	mov	r0, r3
 800187c:	f000 fc9a 	bl	80021b4 <LCD_WriteData8b>
	
	LCD_WriteCommand8b(0x21);
 8001880:	2021      	movs	r0, #33	; 0x21
 8001882:	f000 fceb 	bl	800225c <LCD_WriteCommand8b>
	LCD_WriteData8b(y >> 8);
 8001886:	88bb      	ldrh	r3, [r7, #4]
 8001888:	0a1b      	lsrs	r3, r3, #8
 800188a:	b29b      	uxth	r3, r3
 800188c:	b2db      	uxtb	r3, r3
 800188e:	4618      	mov	r0, r3
 8001890:	f000 fc90 	bl	80021b4 <LCD_WriteData8b>
	LCD_WriteData8b(y);
 8001894:	88bb      	ldrh	r3, [r7, #4]
 8001896:	b2db      	uxtb	r3, r3
 8001898:	4618      	mov	r0, r3
 800189a:	f000 fc8b 	bl	80021b4 <LCD_WriteData8b>
	
	LCD_WriteCommand8b(0x22);
 800189e:	2022      	movs	r0, #34	; 0x22
 80018a0:	f000 fcdc 	bl	800225c <LCD_WriteCommand8b>
	LCD_WriteData8b(color >> 8);
 80018a4:	887b      	ldrh	r3, [r7, #2]
 80018a6:	0a1b      	lsrs	r3, r3, #8
 80018a8:	b29b      	uxth	r3, r3
 80018aa:	b2db      	uxtb	r3, r3
 80018ac:	4618      	mov	r0, r3
 80018ae:	f000 fc81 	bl	80021b4 <LCD_WriteData8b>
	LCD_WriteData8b(color);
 80018b2:	887b      	ldrh	r3, [r7, #2]
 80018b4:	b2db      	uxtb	r3, r3
 80018b6:	4618      	mov	r0, r3
 80018b8:	f000 fc7c 	bl	80021b4 <LCD_WriteData8b>
	
	cs_idle();
 80018bc:	4b04      	ldr	r3, [pc, #16]	; (80018d0 <LCD_DrawPixel+0x8c>)
 80018be:	699b      	ldr	r3, [r3, #24]
 80018c0:	4a03      	ldr	r2, [pc, #12]	; (80018d0 <LCD_DrawPixel+0x8c>)
 80018c2:	f043 0301 	orr.w	r3, r3, #1
 80018c6:	6193      	str	r3, [r2, #24]
	
}
 80018c8:	bf00      	nop
 80018ca:	3708      	adds	r7, #8
 80018cc:	46bd      	mov	sp, r7
 80018ce:	bd80      	pop	{r7, pc}
 80018d0:	40020400 	.word	0x40020400

080018d4 <LCD_SetAddressWindow>:

void LCD_SetAddressWindow(uint16_t x1, uint16_t y1, uint16_t x2, uint16_t y2) {
 80018d4:	b590      	push	{r4, r7, lr}
 80018d6:	b085      	sub	sp, #20
 80018d8:	af00      	add	r7, sp, #0
 80018da:	4604      	mov	r4, r0
 80018dc:	4608      	mov	r0, r1
 80018de:	4611      	mov	r1, r2
 80018e0:	461a      	mov	r2, r3
 80018e2:	4623      	mov	r3, r4
 80018e4:	80fb      	strh	r3, [r7, #6]
 80018e6:	4603      	mov	r3, r0
 80018e8:	80bb      	strh	r3, [r7, #4]
 80018ea:	460b      	mov	r3, r1
 80018ec:	807b      	strh	r3, [r7, #2]
 80018ee:	4613      	mov	r3, r2
 80018f0:	803b      	strh	r3, [r7, #0]
	// selects an array in the display memory to be written to using LCD_WR 
  cs_active();
 80018f2:	4b37      	ldr	r3, [pc, #220]	; (80019d0 <LCD_SetAddressWindow+0xfc>)
 80018f4:	699b      	ldr	r3, [r3, #24]
 80018f6:	4a36      	ldr	r2, [pc, #216]	; (80019d0 <LCD_SetAddressWindow+0xfc>)
 80018f8:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80018fc:	6193      	str	r3, [r2, #24]
	
    uint16_t x, y;
    
      x  = x1;
 80018fe:	88fb      	ldrh	r3, [r7, #6]
 8001900:	81fb      	strh	r3, [r7, #14]
      y  = y1;
 8001902:	88bb      	ldrh	r3, [r7, #4]
 8001904:	81bb      	strh	r3, [r7, #12]
      
		//address window
    LCD_WriteCommand8b(0x50); LCD_WriteData8b(x1 >> 8); LCD_WriteData8b(x1);
 8001906:	2050      	movs	r0, #80	; 0x50
 8001908:	f000 fca8 	bl	800225c <LCD_WriteCommand8b>
 800190c:	88fb      	ldrh	r3, [r7, #6]
 800190e:	0a1b      	lsrs	r3, r3, #8
 8001910:	b29b      	uxth	r3, r3
 8001912:	b2db      	uxtb	r3, r3
 8001914:	4618      	mov	r0, r3
 8001916:	f000 fc4d 	bl	80021b4 <LCD_WriteData8b>
 800191a:	88fb      	ldrh	r3, [r7, #6]
 800191c:	b2db      	uxtb	r3, r3
 800191e:	4618      	mov	r0, r3
 8001920:	f000 fc48 	bl	80021b4 <LCD_WriteData8b>
    LCD_WriteCommand8b(0x51); LCD_WriteData8b(x2 >> 8); LCD_WriteData8b(x2);
 8001924:	2051      	movs	r0, #81	; 0x51
 8001926:	f000 fc99 	bl	800225c <LCD_WriteCommand8b>
 800192a:	887b      	ldrh	r3, [r7, #2]
 800192c:	0a1b      	lsrs	r3, r3, #8
 800192e:	b29b      	uxth	r3, r3
 8001930:	b2db      	uxtb	r3, r3
 8001932:	4618      	mov	r0, r3
 8001934:	f000 fc3e 	bl	80021b4 <LCD_WriteData8b>
 8001938:	887b      	ldrh	r3, [r7, #2]
 800193a:	b2db      	uxtb	r3, r3
 800193c:	4618      	mov	r0, r3
 800193e:	f000 fc39 	bl	80021b4 <LCD_WriteData8b>
    LCD_WriteCommand8b(0x52); LCD_WriteData8b(y1 >> 8); LCD_WriteData8b(y1);
 8001942:	2052      	movs	r0, #82	; 0x52
 8001944:	f000 fc8a 	bl	800225c <LCD_WriteCommand8b>
 8001948:	88bb      	ldrh	r3, [r7, #4]
 800194a:	0a1b      	lsrs	r3, r3, #8
 800194c:	b29b      	uxth	r3, r3
 800194e:	b2db      	uxtb	r3, r3
 8001950:	4618      	mov	r0, r3
 8001952:	f000 fc2f 	bl	80021b4 <LCD_WriteData8b>
 8001956:	88bb      	ldrh	r3, [r7, #4]
 8001958:	b2db      	uxtb	r3, r3
 800195a:	4618      	mov	r0, r3
 800195c:	f000 fc2a 	bl	80021b4 <LCD_WriteData8b>
    LCD_WriteCommand8b(0x53); LCD_WriteData8b(y2 >> 8); LCD_WriteData8b(y2);
 8001960:	2053      	movs	r0, #83	; 0x53
 8001962:	f000 fc7b 	bl	800225c <LCD_WriteCommand8b>
 8001966:	883b      	ldrh	r3, [r7, #0]
 8001968:	0a1b      	lsrs	r3, r3, #8
 800196a:	b29b      	uxth	r3, r3
 800196c:	b2db      	uxtb	r3, r3
 800196e:	4618      	mov	r0, r3
 8001970:	f000 fc20 	bl	80021b4 <LCD_WriteData8b>
 8001974:	883b      	ldrh	r3, [r7, #0]
 8001976:	b2db      	uxtb	r3, r3
 8001978:	4618      	mov	r0, r3
 800197a:	f000 fc1b 	bl	80021b4 <LCD_WriteData8b>
		
		//address counter
    LCD_WriteCommand8b(0x20); LCD_WriteData8b(x >> 8); LCD_WriteData8b(x);
 800197e:	2020      	movs	r0, #32
 8001980:	f000 fc6c 	bl	800225c <LCD_WriteCommand8b>
 8001984:	89fb      	ldrh	r3, [r7, #14]
 8001986:	0a1b      	lsrs	r3, r3, #8
 8001988:	b29b      	uxth	r3, r3
 800198a:	b2db      	uxtb	r3, r3
 800198c:	4618      	mov	r0, r3
 800198e:	f000 fc11 	bl	80021b4 <LCD_WriteData8b>
 8001992:	89fb      	ldrh	r3, [r7, #14]
 8001994:	b2db      	uxtb	r3, r3
 8001996:	4618      	mov	r0, r3
 8001998:	f000 fc0c 	bl	80021b4 <LCD_WriteData8b>
    LCD_WriteCommand8b(0x21); LCD_WriteData8b(y >> 8); LCD_WriteData8b(y);
 800199c:	2021      	movs	r0, #33	; 0x21
 800199e:	f000 fc5d 	bl	800225c <LCD_WriteCommand8b>
 80019a2:	89bb      	ldrh	r3, [r7, #12]
 80019a4:	0a1b      	lsrs	r3, r3, #8
 80019a6:	b29b      	uxth	r3, r3
 80019a8:	b2db      	uxtb	r3, r3
 80019aa:	4618      	mov	r0, r3
 80019ac:	f000 fc02 	bl	80021b4 <LCD_WriteData8b>
 80019b0:	89bb      	ldrh	r3, [r7, #12]
 80019b2:	b2db      	uxtb	r3, r3
 80019b4:	4618      	mov	r0, r3
 80019b6:	f000 fbfd 	bl	80021b4 <LCD_WriteData8b>

	cs_idle();
 80019ba:	4b05      	ldr	r3, [pc, #20]	; (80019d0 <LCD_SetAddressWindow+0xfc>)
 80019bc:	699b      	ldr	r3, [r3, #24]
 80019be:	4a04      	ldr	r2, [pc, #16]	; (80019d0 <LCD_SetAddressWindow+0xfc>)
 80019c0:	f043 0301 	orr.w	r3, r3, #1
 80019c4:	6193      	str	r3, [r2, #24]

}
 80019c6:	bf00      	nop
 80019c8:	3714      	adds	r7, #20
 80019ca:	46bd      	mov	sp, r7
 80019cc:	bd90      	pop	{r4, r7, pc}
 80019ce:	bf00      	nop
 80019d0:	40020400 	.word	0x40020400

080019d4 <FastWrite>:

void FastWrite(uint8_t colorhigh, uint8_t colorlow, uint32_t numberOfEntries){
 80019d4:	b580      	push	{r7, lr}
 80019d6:	b084      	sub	sp, #16
 80019d8:	af00      	add	r7, sp, #0
 80019da:	4603      	mov	r3, r0
 80019dc:	603a      	str	r2, [r7, #0]
 80019de:	71fb      	strb	r3, [r7, #7]
 80019e0:	460b      	mov	r3, r1
 80019e2:	71bb      	strb	r3, [r7, #6]
// If the lower part of the byte is the same as the upper one, writing is 
// simplified by using this function 
	
	LCD_WriteCommand8b(0x22);
 80019e4:	2022      	movs	r0, #34	; 0x22
 80019e6:	f000 fc39 	bl	800225c <LCD_WriteCommand8b>
		
	if(colorhigh==colorlow){
 80019ea:	79fa      	ldrb	r2, [r7, #7]
 80019ec:	79bb      	ldrb	r3, [r7, #6]
 80019ee:	429a      	cmp	r2, r3
 80019f0:	d117      	bne.n	8001a22 <FastWrite+0x4e>
		
		LCD_WriteData8b(colorhigh);
 80019f2:	79fb      	ldrb	r3, [r7, #7]
 80019f4:	4618      	mov	r0, r3
 80019f6:	f000 fbdd 	bl	80021b4 <LCD_WriteData8b>
		LCD_WriteData8b(colorlow);
 80019fa:	79bb      	ldrb	r3, [r7, #6]
 80019fc:	4618      	mov	r0, r3
 80019fe:	f000 fbd9 	bl	80021b4 <LCD_WriteData8b>
		for(int i = 0;i<numberOfEntries-1;i++){	
 8001a02:	2300      	movs	r3, #0
 8001a04:	60fb      	str	r3, [r7, #12]
 8001a06:	e006      	b.n	8001a16 <FastWrite+0x42>
		
			ConfirmEntry();
 8001a08:	f000 fb72 	bl	80020f0 <ConfirmEntry>
			ConfirmEntry();
 8001a0c:	f000 fb70 	bl	80020f0 <ConfirmEntry>
		for(int i = 0;i<numberOfEntries-1;i++){	
 8001a10:	68fb      	ldr	r3, [r7, #12]
 8001a12:	3301      	adds	r3, #1
 8001a14:	60fb      	str	r3, [r7, #12]
 8001a16:	683b      	ldr	r3, [r7, #0]
 8001a18:	1e5a      	subs	r2, r3, #1
 8001a1a:	68fb      	ldr	r3, [r7, #12]
 8001a1c:	429a      	cmp	r2, r3
 8001a1e:	d8f3      	bhi.n	8001a08 <FastWrite+0x34>
			LCD_WriteData8b(colorhigh);
			LCD_WriteData8b(colorlow);
		}
	}

}
 8001a20:	e011      	b.n	8001a46 <FastWrite+0x72>
		for(int i = 0;i<numberOfEntries;i++){	
 8001a22:	2300      	movs	r3, #0
 8001a24:	60bb      	str	r3, [r7, #8]
 8001a26:	e00a      	b.n	8001a3e <FastWrite+0x6a>
			LCD_WriteData8b(colorhigh);
 8001a28:	79fb      	ldrb	r3, [r7, #7]
 8001a2a:	4618      	mov	r0, r3
 8001a2c:	f000 fbc2 	bl	80021b4 <LCD_WriteData8b>
			LCD_WriteData8b(colorlow);
 8001a30:	79bb      	ldrb	r3, [r7, #6]
 8001a32:	4618      	mov	r0, r3
 8001a34:	f000 fbbe 	bl	80021b4 <LCD_WriteData8b>
		for(int i = 0;i<numberOfEntries;i++){	
 8001a38:	68bb      	ldr	r3, [r7, #8]
 8001a3a:	3301      	adds	r3, #1
 8001a3c:	60bb      	str	r3, [r7, #8]
 8001a3e:	68bb      	ldr	r3, [r7, #8]
 8001a40:	683a      	ldr	r2, [r7, #0]
 8001a42:	429a      	cmp	r2, r3
 8001a44:	d8f0      	bhi.n	8001a28 <FastWrite+0x54>
}
 8001a46:	bf00      	nop
 8001a48:	3710      	adds	r7, #16
 8001a4a:	46bd      	mov	sp, r7
 8001a4c:	bd80      	pop	{r7, pc}
	...

08001a50 <LCD_DisplayFill>:


void LCD_DisplayFill(uint16_t color){
 8001a50:	b580      	push	{r7, lr}
 8001a52:	b084      	sub	sp, #16
 8001a54:	af00      	add	r7, sp, #0
 8001a56:	4603      	mov	r3, r0
 8001a58:	80fb      	strh	r3, [r7, #6]
	// fills the display with the selected color 
	
	cs_active();
 8001a5a:	4b12      	ldr	r3, [pc, #72]	; (8001aa4 <LCD_DisplayFill+0x54>)
 8001a5c:	699b      	ldr	r3, [r3, #24]
 8001a5e:	4a11      	ldr	r2, [pc, #68]	; (8001aa4 <LCD_DisplayFill+0x54>)
 8001a60:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8001a64:	6193      	str	r3, [r2, #24]

	uint8_t col_l = color;
 8001a66:	88fb      	ldrh	r3, [r7, #6]
 8001a68:	73fb      	strb	r3, [r7, #15]
	uint8_t col_h = color >> 8;
 8001a6a:	88fb      	ldrh	r3, [r7, #6]
 8001a6c:	0a1b      	lsrs	r3, r3, #8
 8001a6e:	b29b      	uxth	r3, r3
 8001a70:	73bb      	strb	r3, [r7, #14]
	  
	LCD_SetAddressWindow(0,0,LCD_WIDTH-1,LCD_HEIGHT-1);
 8001a72:	f240 133f 	movw	r3, #319	; 0x13f
 8001a76:	22ef      	movs	r2, #239	; 0xef
 8001a78:	2100      	movs	r1, #0
 8001a7a:	2000      	movs	r0, #0
 8001a7c:	f7ff ff2a 	bl	80018d4 <LCD_SetAddressWindow>
		
	FastWrite(col_h,col_l,LCD_WIDTH*LCD_HEIGHT);
 8001a80:	7bf9      	ldrb	r1, [r7, #15]
 8001a82:	7bbb      	ldrb	r3, [r7, #14]
 8001a84:	f44f 3296 	mov.w	r2, #76800	; 0x12c00
 8001a88:	4618      	mov	r0, r3
 8001a8a:	f7ff ffa3 	bl	80019d4 <FastWrite>
		
	cs_idle();
 8001a8e:	4b05      	ldr	r3, [pc, #20]	; (8001aa4 <LCD_DisplayFill+0x54>)
 8001a90:	699b      	ldr	r3, [r3, #24]
 8001a92:	4a04      	ldr	r2, [pc, #16]	; (8001aa4 <LCD_DisplayFill+0x54>)
 8001a94:	f043 0301 	orr.w	r3, r3, #1
 8001a98:	6193      	str	r3, [r2, #24]
	
}
 8001a9a:	bf00      	nop
 8001a9c:	3710      	adds	r7, #16
 8001a9e:	46bd      	mov	sp, r7
 8001aa0:	bd80      	pop	{r7, pc}
 8001aa2:	bf00      	nop
 8001aa4:	40020400 	.word	0x40020400

08001aa8 <LCD_FilledRectangle>:

void LCD_FilledRectangle(uint16_t x, uint16_t y, uint16_t w, uint16_t h, uint16_t color){
 8001aa8:	b590      	push	{r4, r7, lr}
 8001aaa:	b085      	sub	sp, #20
 8001aac:	af00      	add	r7, sp, #0
 8001aae:	4604      	mov	r4, r0
 8001ab0:	4608      	mov	r0, r1
 8001ab2:	4611      	mov	r1, r2
 8001ab4:	461a      	mov	r2, r3
 8001ab6:	4623      	mov	r3, r4
 8001ab8:	80fb      	strh	r3, [r7, #6]
 8001aba:	4603      	mov	r3, r0
 8001abc:	80bb      	strh	r3, [r7, #4]
 8001abe:	460b      	mov	r3, r1
 8001ac0:	807b      	strh	r3, [r7, #2]
 8001ac2:	4613      	mov	r3, r2
 8001ac4:	803b      	strh	r3, [r7, #0]
	// fills the rectangular area with the selected color 
	
	cs_active();
 8001ac6:	4b1c      	ldr	r3, [pc, #112]	; (8001b38 <LCD_FilledRectangle+0x90>)
 8001ac8:	699b      	ldr	r3, [r3, #24]
 8001aca:	4a1b      	ldr	r2, [pc, #108]	; (8001b38 <LCD_FilledRectangle+0x90>)
 8001acc:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8001ad0:	6193      	str	r3, [r2, #24]
	
	uint8_t col_l = color;
 8001ad2:	8c3b      	ldrh	r3, [r7, #32]
 8001ad4:	73fb      	strb	r3, [r7, #15]
	uint8_t col_h = color >> 8;
 8001ad6:	8c3b      	ldrh	r3, [r7, #32]
 8001ad8:	0a1b      	lsrs	r3, r3, #8
 8001ada:	b29b      	uxth	r3, r3
 8001adc:	73bb      	strb	r3, [r7, #14]
	
	LCD_SetAddressWindow(x,y,x+w-1,y+h-1);
 8001ade:	88fa      	ldrh	r2, [r7, #6]
 8001ae0:	887b      	ldrh	r3, [r7, #2]
 8001ae2:	4413      	add	r3, r2
 8001ae4:	b29b      	uxth	r3, r3
 8001ae6:	3b01      	subs	r3, #1
 8001ae8:	b29c      	uxth	r4, r3
 8001aea:	88ba      	ldrh	r2, [r7, #4]
 8001aec:	883b      	ldrh	r3, [r7, #0]
 8001aee:	4413      	add	r3, r2
 8001af0:	b29b      	uxth	r3, r3
 8001af2:	3b01      	subs	r3, #1
 8001af4:	b29b      	uxth	r3, r3
 8001af6:	88b9      	ldrh	r1, [r7, #4]
 8001af8:	88f8      	ldrh	r0, [r7, #6]
 8001afa:	4622      	mov	r2, r4
 8001afc:	f7ff feea 	bl	80018d4 <LCD_SetAddressWindow>
	
	FastWrite(col_h,col_l,w*h);
 8001b00:	887b      	ldrh	r3, [r7, #2]
 8001b02:	883a      	ldrh	r2, [r7, #0]
 8001b04:	fb02 f303 	mul.w	r3, r2, r3
 8001b08:	461a      	mov	r2, r3
 8001b0a:	7bf9      	ldrb	r1, [r7, #15]
 8001b0c:	7bbb      	ldrb	r3, [r7, #14]
 8001b0e:	4618      	mov	r0, r3
 8001b10:	f7ff ff60 	bl	80019d4 <FastWrite>
	
	LCD_SetAddressWindow(0,0,LCD_WIDTH-1,LCD_HEIGHT-1);
 8001b14:	f240 133f 	movw	r3, #319	; 0x13f
 8001b18:	22ef      	movs	r2, #239	; 0xef
 8001b1a:	2100      	movs	r1, #0
 8001b1c:	2000      	movs	r0, #0
 8001b1e:	f7ff fed9 	bl	80018d4 <LCD_SetAddressWindow>
	
	cs_idle();
 8001b22:	4b05      	ldr	r3, [pc, #20]	; (8001b38 <LCD_FilledRectangle+0x90>)
 8001b24:	699b      	ldr	r3, [r3, #24]
 8001b26:	4a04      	ldr	r2, [pc, #16]	; (8001b38 <LCD_FilledRectangle+0x90>)
 8001b28:	f043 0301 	orr.w	r3, r3, #1
 8001b2c:	6193      	str	r3, [r2, #24]
	
}
 8001b2e:	bf00      	nop
 8001b30:	3714      	adds	r7, #20
 8001b32:	46bd      	mov	sp, r7
 8001b34:	bd90      	pop	{r4, r7, pc}
 8001b36:	bf00      	nop
 8001b38:	40020400 	.word	0x40020400

08001b3c <LCD_FilledCircle>:

	cs_idle();
	
}

void LCD_FilledCircle(uint16_t x, uint16_t y, uint16_t r, uint16_t color){
 8001b3c:	b590      	push	{r4, r7, lr}
 8001b3e:	b085      	sub	sp, #20
 8001b40:	af00      	add	r7, sp, #0
 8001b42:	4604      	mov	r4, r0
 8001b44:	4608      	mov	r0, r1
 8001b46:	4611      	mov	r1, r2
 8001b48:	461a      	mov	r2, r3
 8001b4a:	4623      	mov	r3, r4
 8001b4c:	80fb      	strh	r3, [r7, #6]
 8001b4e:	4603      	mov	r3, r0
 8001b50:	80bb      	strh	r3, [r7, #4]
 8001b52:	460b      	mov	r3, r1
 8001b54:	807b      	strh	r3, [r7, #2]
 8001b56:	4613      	mov	r3, r2
 8001b58:	803b      	strh	r3, [r7, #0]
// draws a fill circle 
	
	cs_active();
 8001b5a:	4b4b      	ldr	r3, [pc, #300]	; (8001c88 <LCD_FilledCircle+0x14c>)
 8001b5c:	699b      	ldr	r3, [r3, #24]
 8001b5e:	4a4a      	ldr	r2, [pc, #296]	; (8001c88 <LCD_FilledCircle+0x14c>)
 8001b60:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8001b64:	6193      	str	r3, [r2, #24]
	
	if (r<1) return;
 8001b66:	887b      	ldrh	r3, [r7, #2]
 8001b68:	2b00      	cmp	r3, #0
 8001b6a:	f000 8089 	beq.w	8001c80 <LCD_FilledCircle+0x144>
	LCD_HorizontalLine(x, y - r, 2*r+1, color);
 8001b6e:	88ba      	ldrh	r2, [r7, #4]
 8001b70:	887b      	ldrh	r3, [r7, #2]
 8001b72:	1ad3      	subs	r3, r2, r3
 8001b74:	b299      	uxth	r1, r3
 8001b76:	887b      	ldrh	r3, [r7, #2]
 8001b78:	005b      	lsls	r3, r3, #1
 8001b7a:	b29b      	uxth	r3, r3
 8001b7c:	3301      	adds	r3, #1
 8001b7e:	b29a      	uxth	r2, r3
 8001b80:	883b      	ldrh	r3, [r7, #0]
 8001b82:	88f8      	ldrh	r0, [r7, #6]
 8001b84:	f000 f882 	bl	8001c8c <LCD_HorizontalLine>
	
	int16_t d2x = 1;
 8001b88:	2301      	movs	r3, #1
 8001b8a:	81fb      	strh	r3, [r7, #14]
  int16_t d2y = - 2*r;
 8001b8c:	887b      	ldrh	r3, [r7, #2]
 8001b8e:	461a      	mov	r2, r3
 8001b90:	03d2      	lsls	r2, r2, #15
 8001b92:	1ad3      	subs	r3, r2, r3
 8001b94:	005b      	lsls	r3, r3, #1
 8001b96:	b29b      	uxth	r3, r3
 8001b98:	81bb      	strh	r3, [r7, #12]
  int16_t xp = 0;
 8001b9a:	2300      	movs	r3, #0
 8001b9c:	817b      	strh	r3, [r7, #10]
	
	int16_t f = 1 - r;
 8001b9e:	887b      	ldrh	r3, [r7, #2]
 8001ba0:	f1c3 0301 	rsb	r3, r3, #1
 8001ba4:	b29b      	uxth	r3, r3
 8001ba6:	813b      	strh	r3, [r7, #8]


  while (xp < r) {
 8001ba8:	e05e      	b.n	8001c68 <LCD_FilledCircle+0x12c>
    if (f >= 0) {
 8001baa:	f9b7 3008 	ldrsh.w	r3, [r7, #8]
 8001bae:	2b00      	cmp	r3, #0
 8001bb0:	db0b      	blt.n	8001bca <LCD_FilledCircle+0x8e>
      r--;
 8001bb2:	887b      	ldrh	r3, [r7, #2]
 8001bb4:	3b01      	subs	r3, #1
 8001bb6:	807b      	strh	r3, [r7, #2]
      d2y += 2;
 8001bb8:	89bb      	ldrh	r3, [r7, #12]
 8001bba:	3302      	adds	r3, #2
 8001bbc:	b29b      	uxth	r3, r3
 8001bbe:	81bb      	strh	r3, [r7, #12]
      f += d2y;
 8001bc0:	893a      	ldrh	r2, [r7, #8]
 8001bc2:	89bb      	ldrh	r3, [r7, #12]
 8001bc4:	4413      	add	r3, r2
 8001bc6:	b29b      	uxth	r3, r3
 8001bc8:	813b      	strh	r3, [r7, #8]
    }
    xp++;
 8001bca:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 8001bce:	b29b      	uxth	r3, r3
 8001bd0:	3301      	adds	r3, #1
 8001bd2:	b29b      	uxth	r3, r3
 8001bd4:	817b      	strh	r3, [r7, #10]
    d2x += 2;
 8001bd6:	89fb      	ldrh	r3, [r7, #14]
 8001bd8:	3302      	adds	r3, #2
 8001bda:	b29b      	uxth	r3, r3
 8001bdc:	81fb      	strh	r3, [r7, #14]
    f += d2x;
 8001bde:	893a      	ldrh	r2, [r7, #8]
 8001be0:	89fb      	ldrh	r3, [r7, #14]
 8001be2:	4413      	add	r3, r2
 8001be4:	b29b      	uxth	r3, r3
 8001be6:	813b      	strh	r3, [r7, #8]
		LCD_HorizontalLine(x + xp, y - r, 2*r + 1, color);
 8001be8:	897a      	ldrh	r2, [r7, #10]
 8001bea:	88fb      	ldrh	r3, [r7, #6]
 8001bec:	4413      	add	r3, r2
 8001bee:	b298      	uxth	r0, r3
 8001bf0:	88ba      	ldrh	r2, [r7, #4]
 8001bf2:	887b      	ldrh	r3, [r7, #2]
 8001bf4:	1ad3      	subs	r3, r2, r3
 8001bf6:	b299      	uxth	r1, r3
 8001bf8:	887b      	ldrh	r3, [r7, #2]
 8001bfa:	005b      	lsls	r3, r3, #1
 8001bfc:	b29b      	uxth	r3, r3
 8001bfe:	3301      	adds	r3, #1
 8001c00:	b29a      	uxth	r2, r3
 8001c02:	883b      	ldrh	r3, [r7, #0]
 8001c04:	f000 f842 	bl	8001c8c <LCD_HorizontalLine>
    LCD_HorizontalLine(x + r, y - xp, 2*xp + 1, color);
 8001c08:	88fa      	ldrh	r2, [r7, #6]
 8001c0a:	887b      	ldrh	r3, [r7, #2]
 8001c0c:	4413      	add	r3, r2
 8001c0e:	b298      	uxth	r0, r3
 8001c10:	897b      	ldrh	r3, [r7, #10]
 8001c12:	88ba      	ldrh	r2, [r7, #4]
 8001c14:	1ad3      	subs	r3, r2, r3
 8001c16:	b299      	uxth	r1, r3
 8001c18:	897b      	ldrh	r3, [r7, #10]
 8001c1a:	005b      	lsls	r3, r3, #1
 8001c1c:	b29b      	uxth	r3, r3
 8001c1e:	3301      	adds	r3, #1
 8001c20:	b29a      	uxth	r2, r3
 8001c22:	883b      	ldrh	r3, [r7, #0]
 8001c24:	f000 f832 	bl	8001c8c <LCD_HorizontalLine>
		LCD_HorizontalLine(x - xp, y - r, 2*r + 1, color);
 8001c28:	897b      	ldrh	r3, [r7, #10]
 8001c2a:	88fa      	ldrh	r2, [r7, #6]
 8001c2c:	1ad3      	subs	r3, r2, r3
 8001c2e:	b298      	uxth	r0, r3
 8001c30:	88ba      	ldrh	r2, [r7, #4]
 8001c32:	887b      	ldrh	r3, [r7, #2]
 8001c34:	1ad3      	subs	r3, r2, r3
 8001c36:	b299      	uxth	r1, r3
 8001c38:	887b      	ldrh	r3, [r7, #2]
 8001c3a:	005b      	lsls	r3, r3, #1
 8001c3c:	b29b      	uxth	r3, r3
 8001c3e:	3301      	adds	r3, #1
 8001c40:	b29a      	uxth	r2, r3
 8001c42:	883b      	ldrh	r3, [r7, #0]
 8001c44:	f000 f822 	bl	8001c8c <LCD_HorizontalLine>
    LCD_HorizontalLine(x - r, y - xp, 2*xp + 1, color);
 8001c48:	88fa      	ldrh	r2, [r7, #6]
 8001c4a:	887b      	ldrh	r3, [r7, #2]
 8001c4c:	1ad3      	subs	r3, r2, r3
 8001c4e:	b298      	uxth	r0, r3
 8001c50:	897b      	ldrh	r3, [r7, #10]
 8001c52:	88ba      	ldrh	r2, [r7, #4]
 8001c54:	1ad3      	subs	r3, r2, r3
 8001c56:	b299      	uxth	r1, r3
 8001c58:	897b      	ldrh	r3, [r7, #10]
 8001c5a:	005b      	lsls	r3, r3, #1
 8001c5c:	b29b      	uxth	r3, r3
 8001c5e:	3301      	adds	r3, #1
 8001c60:	b29a      	uxth	r2, r3
 8001c62:	883b      	ldrh	r3, [r7, #0]
 8001c64:	f000 f812 	bl	8001c8c <LCD_HorizontalLine>
  while (xp < r) {
 8001c68:	f9b7 200a 	ldrsh.w	r2, [r7, #10]
 8001c6c:	887b      	ldrh	r3, [r7, #2]
 8001c6e:	429a      	cmp	r2, r3
 8001c70:	db9b      	blt.n	8001baa <LCD_FilledCircle+0x6e>
    
  }
	
	cs_idle();
 8001c72:	4b05      	ldr	r3, [pc, #20]	; (8001c88 <LCD_FilledCircle+0x14c>)
 8001c74:	699b      	ldr	r3, [r3, #24]
 8001c76:	4a04      	ldr	r2, [pc, #16]	; (8001c88 <LCD_FilledCircle+0x14c>)
 8001c78:	f043 0301 	orr.w	r3, r3, #1
 8001c7c:	6193      	str	r3, [r2, #24]
 8001c7e:	e000      	b.n	8001c82 <LCD_FilledCircle+0x146>
	if (r<1) return;
 8001c80:	bf00      	nop
}
 8001c82:	3714      	adds	r7, #20
 8001c84:	46bd      	mov	sp, r7
 8001c86:	bd90      	pop	{r4, r7, pc}
 8001c88:	40020400 	.word	0x40020400

08001c8c <LCD_HorizontalLine>:

	cs_idle();

}
	
void LCD_HorizontalLine(uint16_t x, uint16_t y, uint16_t len, uint16_t color){
 8001c8c:	b590      	push	{r4, r7, lr}
 8001c8e:	b085      	sub	sp, #20
 8001c90:	af00      	add	r7, sp, #0
 8001c92:	4604      	mov	r4, r0
 8001c94:	4608      	mov	r0, r1
 8001c96:	4611      	mov	r1, r2
 8001c98:	461a      	mov	r2, r3
 8001c9a:	4623      	mov	r3, r4
 8001c9c:	80fb      	strh	r3, [r7, #6]
 8001c9e:	4603      	mov	r3, r0
 8001ca0:	80bb      	strh	r3, [r7, #4]
 8001ca2:	460b      	mov	r3, r1
 8001ca4:	807b      	strh	r3, [r7, #2]
 8001ca6:	4613      	mov	r3, r2
 8001ca8:	803b      	strh	r3, [r7, #0]
// draws a horizontal line 
	
	cs_active();
 8001caa:	4b17      	ldr	r3, [pc, #92]	; (8001d08 <LCD_HorizontalLine+0x7c>)
 8001cac:	699b      	ldr	r3, [r3, #24]
 8001cae:	4a16      	ldr	r2, [pc, #88]	; (8001d08 <LCD_HorizontalLine+0x7c>)
 8001cb0:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8001cb4:	6193      	str	r3, [r2, #24]
	
	uint8_t col_l = color;
 8001cb6:	883b      	ldrh	r3, [r7, #0]
 8001cb8:	73fb      	strb	r3, [r7, #15]
	uint8_t col_h = color >> 8;
 8001cba:	883b      	ldrh	r3, [r7, #0]
 8001cbc:	0a1b      	lsrs	r3, r3, #8
 8001cbe:	b29b      	uxth	r3, r3
 8001cc0:	73bb      	strb	r3, [r7, #14]
	LCD_SetAddressWindow(x,y,x,y+len-1);
 8001cc2:	88ba      	ldrh	r2, [r7, #4]
 8001cc4:	887b      	ldrh	r3, [r7, #2]
 8001cc6:	4413      	add	r3, r2
 8001cc8:	b29b      	uxth	r3, r3
 8001cca:	3b01      	subs	r3, #1
 8001ccc:	b29b      	uxth	r3, r3
 8001cce:	88fa      	ldrh	r2, [r7, #6]
 8001cd0:	88b9      	ldrh	r1, [r7, #4]
 8001cd2:	88f8      	ldrh	r0, [r7, #6]
 8001cd4:	f7ff fdfe 	bl	80018d4 <LCD_SetAddressWindow>
		
	FastWrite(col_h,col_l,len);
 8001cd8:	887a      	ldrh	r2, [r7, #2]
 8001cda:	7bf9      	ldrb	r1, [r7, #15]
 8001cdc:	7bbb      	ldrb	r3, [r7, #14]
 8001cde:	4618      	mov	r0, r3
 8001ce0:	f7ff fe78 	bl	80019d4 <FastWrite>
	
	LCD_SetAddressWindow(0,0,LCD_WIDTH-1,LCD_HEIGHT-1);
 8001ce4:	f240 133f 	movw	r3, #319	; 0x13f
 8001ce8:	22ef      	movs	r2, #239	; 0xef
 8001cea:	2100      	movs	r1, #0
 8001cec:	2000      	movs	r0, #0
 8001cee:	f7ff fdf1 	bl	80018d4 <LCD_SetAddressWindow>
	
	cs_idle();
 8001cf2:	4b05      	ldr	r3, [pc, #20]	; (8001d08 <LCD_HorizontalLine+0x7c>)
 8001cf4:	699b      	ldr	r3, [r3, #24]
 8001cf6:	4a04      	ldr	r2, [pc, #16]	; (8001d08 <LCD_HorizontalLine+0x7c>)
 8001cf8:	f043 0301 	orr.w	r3, r3, #1
 8001cfc:	6193      	str	r3, [r2, #24]
	
}
 8001cfe:	bf00      	nop
 8001d00:	3714      	adds	r7, #20
 8001d02:	46bd      	mov	sp, r7
 8001d04:	bd90      	pop	{r4, r7, pc}
 8001d06:	bf00      	nop
 8001d08:	40020400 	.word	0x40020400

08001d0c <LCD_VerticalLine>:


void LCD_VerticalLine(uint16_t x, uint16_t y, uint16_t len, uint16_t color){
 8001d0c:	b590      	push	{r4, r7, lr}
 8001d0e:	b085      	sub	sp, #20
 8001d10:	af00      	add	r7, sp, #0
 8001d12:	4604      	mov	r4, r0
 8001d14:	4608      	mov	r0, r1
 8001d16:	4611      	mov	r1, r2
 8001d18:	461a      	mov	r2, r3
 8001d1a:	4623      	mov	r3, r4
 8001d1c:	80fb      	strh	r3, [r7, #6]
 8001d1e:	4603      	mov	r3, r0
 8001d20:	80bb      	strh	r3, [r7, #4]
 8001d22:	460b      	mov	r3, r1
 8001d24:	807b      	strh	r3, [r7, #2]
 8001d26:	4613      	mov	r3, r2
 8001d28:	803b      	strh	r3, [r7, #0]
// draws a vertical line 
	
	cs_active();
 8001d2a:	4b17      	ldr	r3, [pc, #92]	; (8001d88 <LCD_VerticalLine+0x7c>)
 8001d2c:	699b      	ldr	r3, [r3, #24]
 8001d2e:	4a16      	ldr	r2, [pc, #88]	; (8001d88 <LCD_VerticalLine+0x7c>)
 8001d30:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8001d34:	6193      	str	r3, [r2, #24]
	
	uint8_t col_l = color;
 8001d36:	883b      	ldrh	r3, [r7, #0]
 8001d38:	73fb      	strb	r3, [r7, #15]
	uint8_t col_h = color >> 8;
 8001d3a:	883b      	ldrh	r3, [r7, #0]
 8001d3c:	0a1b      	lsrs	r3, r3, #8
 8001d3e:	b29b      	uxth	r3, r3
 8001d40:	73bb      	strb	r3, [r7, #14]
	LCD_SetAddressWindow(x,y,x+len-1,y);
 8001d42:	88fa      	ldrh	r2, [r7, #6]
 8001d44:	887b      	ldrh	r3, [r7, #2]
 8001d46:	4413      	add	r3, r2
 8001d48:	b29b      	uxth	r3, r3
 8001d4a:	3b01      	subs	r3, #1
 8001d4c:	b29a      	uxth	r2, r3
 8001d4e:	88bb      	ldrh	r3, [r7, #4]
 8001d50:	88b9      	ldrh	r1, [r7, #4]
 8001d52:	88f8      	ldrh	r0, [r7, #6]
 8001d54:	f7ff fdbe 	bl	80018d4 <LCD_SetAddressWindow>
		
	FastWrite(col_h,col_l,len);
 8001d58:	887a      	ldrh	r2, [r7, #2]
 8001d5a:	7bf9      	ldrb	r1, [r7, #15]
 8001d5c:	7bbb      	ldrb	r3, [r7, #14]
 8001d5e:	4618      	mov	r0, r3
 8001d60:	f7ff fe38 	bl	80019d4 <FastWrite>
	
	LCD_SetAddressWindow(0,0,LCD_WIDTH-1,LCD_HEIGHT-1);
 8001d64:	f240 133f 	movw	r3, #319	; 0x13f
 8001d68:	22ef      	movs	r2, #239	; 0xef
 8001d6a:	2100      	movs	r1, #0
 8001d6c:	2000      	movs	r0, #0
 8001d6e:	f7ff fdb1 	bl	80018d4 <LCD_SetAddressWindow>

	cs_idle();
 8001d72:	4b05      	ldr	r3, [pc, #20]	; (8001d88 <LCD_VerticalLine+0x7c>)
 8001d74:	699b      	ldr	r3, [r3, #24]
 8001d76:	4a04      	ldr	r2, [pc, #16]	; (8001d88 <LCD_VerticalLine+0x7c>)
 8001d78:	f043 0301 	orr.w	r3, r3, #1
 8001d7c:	6193      	str	r3, [r2, #24]
	
}
 8001d7e:	bf00      	nop
 8001d80:	3714      	adds	r7, #20
 8001d82:	46bd      	mov	sp, r7
 8001d84:	bd90      	pop	{r4, r7, pc}
 8001d86:	bf00      	nop
 8001d88:	40020400 	.word	0x40020400
 8001d8c:	00000000 	.word	0x00000000

08001d90 <LCD_Line>:

void LCD_Line(uint16_t x, uint16_t y, uint16_t len, int16_t rotation, uint16_t color){
 8001d90:	b590      	push	{r4, r7, lr}
 8001d92:	b089      	sub	sp, #36	; 0x24
 8001d94:	af00      	add	r7, sp, #0
 8001d96:	4604      	mov	r4, r0
 8001d98:	4608      	mov	r0, r1
 8001d9a:	4611      	mov	r1, r2
 8001d9c:	461a      	mov	r2, r3
 8001d9e:	4623      	mov	r3, r4
 8001da0:	80fb      	strh	r3, [r7, #6]
 8001da2:	4603      	mov	r3, r0
 8001da4:	80bb      	strh	r3, [r7, #4]
 8001da6:	460b      	mov	r3, r1
 8001da8:	807b      	strh	r3, [r7, #2]
 8001daa:	4613      	mov	r3, r2
 8001dac:	803b      	strh	r3, [r7, #0]
// draws a line rotated by a specified angle 
	if(len<1) return;
 8001dae:	887b      	ldrh	r3, [r7, #2]
 8001db0:	2b00      	cmp	r3, #0
 8001db2:	f000 8098 	beq.w	8001ee6 <LCD_Line+0x156>
	
	cs_active();
 8001db6:	4b50      	ldr	r3, [pc, #320]	; (8001ef8 <LCD_Line+0x168>)
 8001db8:	699b      	ldr	r3, [r3, #24]
 8001dba:	4a4f      	ldr	r2, [pc, #316]	; (8001ef8 <LCD_Line+0x168>)
 8001dbc:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8001dc0:	6193      	str	r3, [r2, #24]
	
	LCD_DrawPixel(x,y,color);
 8001dc2:	8e3a      	ldrh	r2, [r7, #48]	; 0x30
 8001dc4:	88b9      	ldrh	r1, [r7, #4]
 8001dc6:	88fb      	ldrh	r3, [r7, #6]
 8001dc8:	4618      	mov	r0, r3
 8001dca:	f7ff fd3b 	bl	8001844 <LCD_DrawPixel>

	double x_tmp = x;
 8001dce:	88fb      	ldrh	r3, [r7, #6]
 8001dd0:	4618      	mov	r0, r3
 8001dd2:	f7fe fb9f 	bl	8000514 <__aeabi_ui2d>
 8001dd6:	4602      	mov	r2, r0
 8001dd8:	460b      	mov	r3, r1
 8001dda:	e9c7 2306 	strd	r2, r3, [r7, #24]
	double y_tmp = y;
 8001dde:	88bb      	ldrh	r3, [r7, #4]
 8001de0:	4618      	mov	r0, r3
 8001de2:	f7fe fb97 	bl	8000514 <__aeabi_ui2d>
 8001de6:	4602      	mov	r2, r0
 8001de8:	460b      	mov	r3, r1
 8001dea:	e9c7 2304 	strd	r2, r3, [r7, #16]
	
	for(int i=0;i<len;i++){
 8001dee:	2300      	movs	r3, #0
 8001df0:	60fb      	str	r3, [r7, #12]
 8001df2:	e06d      	b.n	8001ed0 <LCD_Line+0x140>
		
	x_tmp = x_tmp + sin(rotation*PI/180.0);
 8001df4:	f9b7 3000 	ldrsh.w	r3, [r7]
 8001df8:	4618      	mov	r0, r3
 8001dfa:	f7fe fb9b 	bl	8000534 <__aeabi_i2d>
 8001dfe:	a33c      	add	r3, pc, #240	; (adr r3, 8001ef0 <LCD_Line+0x160>)
 8001e00:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001e04:	f7fe fc00 	bl	8000608 <__aeabi_dmul>
 8001e08:	4602      	mov	r2, r0
 8001e0a:	460b      	mov	r3, r1
 8001e0c:	4610      	mov	r0, r2
 8001e0e:	4619      	mov	r1, r3
 8001e10:	f04f 0200 	mov.w	r2, #0
 8001e14:	4b39      	ldr	r3, [pc, #228]	; (8001efc <LCD_Line+0x16c>)
 8001e16:	f7fe fd21 	bl	800085c <__aeabi_ddiv>
 8001e1a:	4602      	mov	r2, r0
 8001e1c:	460b      	mov	r3, r1
 8001e1e:	ec43 2b17 	vmov	d7, r2, r3
 8001e22:	eeb0 0a47 	vmov.f32	s0, s14
 8001e26:	eef0 0a67 	vmov.f32	s1, s15
 8001e2a:	f004 fbcd 	bl	80065c8 <sin>
 8001e2e:	ec53 2b10 	vmov	r2, r3, d0
 8001e32:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 8001e36:	f7fe fa31 	bl	800029c <__adddf3>
 8001e3a:	4602      	mov	r2, r0
 8001e3c:	460b      	mov	r3, r1
 8001e3e:	e9c7 2306 	strd	r2, r3, [r7, #24]
	y_tmp = y_tmp + cos(rotation*PI/180.0);
 8001e42:	f9b7 3000 	ldrsh.w	r3, [r7]
 8001e46:	4618      	mov	r0, r3
 8001e48:	f7fe fb74 	bl	8000534 <__aeabi_i2d>
 8001e4c:	a328      	add	r3, pc, #160	; (adr r3, 8001ef0 <LCD_Line+0x160>)
 8001e4e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001e52:	f7fe fbd9 	bl	8000608 <__aeabi_dmul>
 8001e56:	4602      	mov	r2, r0
 8001e58:	460b      	mov	r3, r1
 8001e5a:	4610      	mov	r0, r2
 8001e5c:	4619      	mov	r1, r3
 8001e5e:	f04f 0200 	mov.w	r2, #0
 8001e62:	4b26      	ldr	r3, [pc, #152]	; (8001efc <LCD_Line+0x16c>)
 8001e64:	f7fe fcfa 	bl	800085c <__aeabi_ddiv>
 8001e68:	4602      	mov	r2, r0
 8001e6a:	460b      	mov	r3, r1
 8001e6c:	ec43 2b17 	vmov	d7, r2, r3
 8001e70:	eeb0 0a47 	vmov.f32	s0, s14
 8001e74:	eef0 0a67 	vmov.f32	s1, s15
 8001e78:	f004 fb0e 	bl	8006498 <cos>
 8001e7c:	ec53 2b10 	vmov	r2, r3, d0
 8001e80:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 8001e84:	f7fe fa0a 	bl	800029c <__adddf3>
 8001e88:	4602      	mov	r2, r0
 8001e8a:	460b      	mov	r3, r1
 8001e8c:	e9c7 2304 	strd	r2, r3, [r7, #16]

	LCD_DrawPixel(round(x_tmp),round(y_tmp),color);
 8001e90:	ed97 0b06 	vldr	d0, [r7, #24]
 8001e94:	f004 fb50 	bl	8006538 <round>
 8001e98:	ec53 2b10 	vmov	r2, r3, d0
 8001e9c:	4610      	mov	r0, r2
 8001e9e:	4619      	mov	r1, r3
 8001ea0:	f7fe fe8a 	bl	8000bb8 <__aeabi_d2uiz>
 8001ea4:	4603      	mov	r3, r0
 8001ea6:	b29c      	uxth	r4, r3
 8001ea8:	ed97 0b04 	vldr	d0, [r7, #16]
 8001eac:	f004 fb44 	bl	8006538 <round>
 8001eb0:	ec53 2b10 	vmov	r2, r3, d0
 8001eb4:	4610      	mov	r0, r2
 8001eb6:	4619      	mov	r1, r3
 8001eb8:	f7fe fe7e 	bl	8000bb8 <__aeabi_d2uiz>
 8001ebc:	4603      	mov	r3, r0
 8001ebe:	b29b      	uxth	r3, r3
 8001ec0:	8e3a      	ldrh	r2, [r7, #48]	; 0x30
 8001ec2:	4619      	mov	r1, r3
 8001ec4:	4620      	mov	r0, r4
 8001ec6:	f7ff fcbd 	bl	8001844 <LCD_DrawPixel>
	for(int i=0;i<len;i++){
 8001eca:	68fb      	ldr	r3, [r7, #12]
 8001ecc:	3301      	adds	r3, #1
 8001ece:	60fb      	str	r3, [r7, #12]
 8001ed0:	887b      	ldrh	r3, [r7, #2]
 8001ed2:	68fa      	ldr	r2, [r7, #12]
 8001ed4:	429a      	cmp	r2, r3
 8001ed6:	db8d      	blt.n	8001df4 <LCD_Line+0x64>
	}

	cs_idle();
 8001ed8:	4b07      	ldr	r3, [pc, #28]	; (8001ef8 <LCD_Line+0x168>)
 8001eda:	699b      	ldr	r3, [r3, #24]
 8001edc:	4a06      	ldr	r2, [pc, #24]	; (8001ef8 <LCD_Line+0x168>)
 8001ede:	f043 0301 	orr.w	r3, r3, #1
 8001ee2:	6193      	str	r3, [r2, #24]
 8001ee4:	e000      	b.n	8001ee8 <LCD_Line+0x158>
	if(len<1) return;
 8001ee6:	bf00      	nop
	
}
 8001ee8:	3724      	adds	r7, #36	; 0x24
 8001eea:	46bd      	mov	sp, r7
 8001eec:	bd90      	pop	{r4, r7, pc}
 8001eee:	bf00      	nop
 8001ef0:	53c8d4f1 	.word	0x53c8d4f1
 8001ef4:	400921fb 	.word	0x400921fb
 8001ef8:	40020400 	.word	0x40020400
 8001efc:	40668000 	.word	0x40668000

08001f00 <ClearChar>:

void ClearChar(uint16_t x, uint16_t y, uint16_t background_color){
 8001f00:	b580      	push	{r7, lr}
 8001f02:	b084      	sub	sp, #16
 8001f04:	af02      	add	r7, sp, #8
 8001f06:	4603      	mov	r3, r0
 8001f08:	80fb      	strh	r3, [r7, #6]
 8001f0a:	460b      	mov	r3, r1
 8001f0c:	80bb      	strh	r3, [r7, #4]
 8001f0e:	4613      	mov	r3, r2
 8001f10:	807b      	strh	r3, [r7, #2]
	// fills the background area behind a typed character 
	
	if(TEXT_ROTATION){
		LCD_FilledRectangle(x, y, FONT_WIDTH, FONT_HEIGHT, background_color);
 8001f12:	88b9      	ldrh	r1, [r7, #4]
 8001f14:	88f8      	ldrh	r0, [r7, #6]
 8001f16:	887b      	ldrh	r3, [r7, #2]
 8001f18:	9300      	str	r3, [sp, #0]
 8001f1a:	2307      	movs	r3, #7
 8001f1c:	2205      	movs	r2, #5
 8001f1e:	f7ff fdc3 	bl	8001aa8 <LCD_FilledRectangle>
	}
	else{
		LCD_FilledRectangle(x, y, FONT_HEIGHT, FONT_WIDTH, background_color);	
	}

}
 8001f22:	bf00      	nop
 8001f24:	3708      	adds	r7, #8
 8001f26:	46bd      	mov	sp, r7
 8001f28:	bd80      	pop	{r7, pc}
	...

08001f2c <LCD_WriteChar>:


void LCD_WriteChar(uint16_t x, uint16_t y, uint8_t ch, uint16_t color, uint16_t background_color){
 8001f2c:	b590      	push	{r4, r7, lr}
 8001f2e:	b087      	sub	sp, #28
 8001f30:	af00      	add	r7, sp, #0
 8001f32:	4604      	mov	r4, r0
 8001f34:	4608      	mov	r0, r1
 8001f36:	4611      	mov	r1, r2
 8001f38:	461a      	mov	r2, r3
 8001f3a:	4623      	mov	r3, r4
 8001f3c:	80fb      	strh	r3, [r7, #6]
 8001f3e:	4603      	mov	r3, r0
 8001f40:	80bb      	strh	r3, [r7, #4]
 8001f42:	460b      	mov	r3, r1
 8001f44:	70fb      	strb	r3, [r7, #3]
 8001f46:	4613      	mov	r3, r2
 8001f48:	803b      	strh	r3, [r7, #0]
// prints a character from the available font to the display 
	
	ClearChar(x,y,background_color);
 8001f4a:	8d3a      	ldrh	r2, [r7, #40]	; 0x28
 8001f4c:	88b9      	ldrh	r1, [r7, #4]
 8001f4e:	88fb      	ldrh	r3, [r7, #6]
 8001f50:	4618      	mov	r0, r3
 8001f52:	f7ff ffd5 	bl	8001f00 <ClearChar>
	uint8_t tmp;
	
	for(int col=0;col<FONT_WIDTH;col++){
 8001f56:	2300      	movs	r3, #0
 8001f58:	617b      	str	r3, [r7, #20]
 8001f5a:	e02e      	b.n	8001fba <LCD_WriteChar+0x8e>
		
		uint8_t mask = 0x01;
 8001f5c:	2301      	movs	r3, #1
 8001f5e:	73fb      	strb	r3, [r7, #15]
		
		for(int row=0;row<FONT_HEIGHT;row++){
 8001f60:	2300      	movs	r3, #0
 8001f62:	613b      	str	r3, [r7, #16]
 8001f64:	e023      	b.n	8001fae <LCD_WriteChar+0x82>
			
			tmp = font5x7[FONT_WIDTH*(ch-32)+col];
 8001f66:	78fb      	ldrb	r3, [r7, #3]
 8001f68:	f1a3 0220 	sub.w	r2, r3, #32
 8001f6c:	4613      	mov	r3, r2
 8001f6e:	009b      	lsls	r3, r3, #2
 8001f70:	441a      	add	r2, r3
 8001f72:	697b      	ldr	r3, [r7, #20]
 8001f74:	4413      	add	r3, r2
 8001f76:	4a15      	ldr	r2, [pc, #84]	; (8001fcc <LCD_WriteChar+0xa0>)
 8001f78:	5cd3      	ldrb	r3, [r2, r3]
 8001f7a:	73bb      	strb	r3, [r7, #14]
			
			if(tmp&(mask<<row)) {
 8001f7c:	7bba      	ldrb	r2, [r7, #14]
 8001f7e:	7bf9      	ldrb	r1, [r7, #15]
 8001f80:	693b      	ldr	r3, [r7, #16]
 8001f82:	fa01 f303 	lsl.w	r3, r1, r3
 8001f86:	4013      	ands	r3, r2
 8001f88:	2b00      	cmp	r3, #0
 8001f8a:	d00d      	beq.n	8001fa8 <LCD_WriteChar+0x7c>
				
				if(TEXT_ROTATION){
					LCD_DrawPixel(x+col,y+row,color);
 8001f8c:	697b      	ldr	r3, [r7, #20]
 8001f8e:	b29a      	uxth	r2, r3
 8001f90:	88fb      	ldrh	r3, [r7, #6]
 8001f92:	4413      	add	r3, r2
 8001f94:	b298      	uxth	r0, r3
 8001f96:	693b      	ldr	r3, [r7, #16]
 8001f98:	b29a      	uxth	r2, r3
 8001f9a:	88bb      	ldrh	r3, [r7, #4]
 8001f9c:	4413      	add	r3, r2
 8001f9e:	b29b      	uxth	r3, r3
 8001fa0:	883a      	ldrh	r2, [r7, #0]
 8001fa2:	4619      	mov	r1, r3
 8001fa4:	f7ff fc4e 	bl	8001844 <LCD_DrawPixel>
		for(int row=0;row<FONT_HEIGHT;row++){
 8001fa8:	693b      	ldr	r3, [r7, #16]
 8001faa:	3301      	adds	r3, #1
 8001fac:	613b      	str	r3, [r7, #16]
 8001fae:	693b      	ldr	r3, [r7, #16]
 8001fb0:	2b06      	cmp	r3, #6
 8001fb2:	ddd8      	ble.n	8001f66 <LCD_WriteChar+0x3a>
	for(int col=0;col<FONT_WIDTH;col++){
 8001fb4:	697b      	ldr	r3, [r7, #20]
 8001fb6:	3301      	adds	r3, #1
 8001fb8:	617b      	str	r3, [r7, #20]
 8001fba:	697b      	ldr	r3, [r7, #20]
 8001fbc:	2b04      	cmp	r3, #4
 8001fbe:	ddcd      	ble.n	8001f5c <LCD_WriteChar+0x30>
				}
				
			}
		}
	}
}
 8001fc0:	bf00      	nop
 8001fc2:	bf00      	nop
 8001fc4:	371c      	adds	r7, #28
 8001fc6:	46bd      	mov	sp, r7
 8001fc8:	bd90      	pop	{r4, r7, pc}
 8001fca:	bf00      	nop
 8001fcc:	08007be4 	.word	0x08007be4

08001fd0 <RGB>:


uint16_t RGB(uint8_t red, uint8_t green, uint8_t blue){
 8001fd0:	b590      	push	{r4, r7, lr}
 8001fd2:	b085      	sub	sp, #20
 8001fd4:	af00      	add	r7, sp, #0
 8001fd6:	4603      	mov	r3, r0
 8001fd8:	71fb      	strb	r3, [r7, #7]
 8001fda:	460b      	mov	r3, r1
 8001fdc:	71bb      	strb	r3, [r7, #6]
 8001fde:	4613      	mov	r3, r2
 8001fe0:	717b      	strb	r3, [r7, #5]
	// converts 565 RGB color to RGB(0-255,0-255,0-255) 
	
	uint16_t color = (2048*((uint16_t)round(31.0*(red/255.0)))) | (32*((uint16_t)round(63.0*(green/255.0)))) | ((uint16_t)round(31.0*(blue/255.0)));
 8001fe2:	79fb      	ldrb	r3, [r7, #7]
 8001fe4:	4618      	mov	r0, r3
 8001fe6:	f7fe faa5 	bl	8000534 <__aeabi_i2d>
 8001fea:	a33d      	add	r3, pc, #244	; (adr r3, 80020e0 <RGB+0x110>)
 8001fec:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001ff0:	f7fe fc34 	bl	800085c <__aeabi_ddiv>
 8001ff4:	4602      	mov	r2, r0
 8001ff6:	460b      	mov	r3, r1
 8001ff8:	4610      	mov	r0, r2
 8001ffa:	4619      	mov	r1, r3
 8001ffc:	f04f 0200 	mov.w	r2, #0
 8002000:	4b39      	ldr	r3, [pc, #228]	; (80020e8 <RGB+0x118>)
 8002002:	f7fe fb01 	bl	8000608 <__aeabi_dmul>
 8002006:	4602      	mov	r2, r0
 8002008:	460b      	mov	r3, r1
 800200a:	ec43 2b17 	vmov	d7, r2, r3
 800200e:	eeb0 0a47 	vmov.f32	s0, s14
 8002012:	eef0 0a67 	vmov.f32	s1, s15
 8002016:	f004 fa8f 	bl	8006538 <round>
 800201a:	ec53 2b10 	vmov	r2, r3, d0
 800201e:	4610      	mov	r0, r2
 8002020:	4619      	mov	r1, r3
 8002022:	f7fe fdc9 	bl	8000bb8 <__aeabi_d2uiz>
 8002026:	4603      	mov	r3, r0
 8002028:	b29b      	uxth	r3, r3
 800202a:	02db      	lsls	r3, r3, #11
 800202c:	b29b      	uxth	r3, r3
 800202e:	b21c      	sxth	r4, r3
 8002030:	79bb      	ldrb	r3, [r7, #6]
 8002032:	4618      	mov	r0, r3
 8002034:	f7fe fa7e 	bl	8000534 <__aeabi_i2d>
 8002038:	a329      	add	r3, pc, #164	; (adr r3, 80020e0 <RGB+0x110>)
 800203a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800203e:	f7fe fc0d 	bl	800085c <__aeabi_ddiv>
 8002042:	4602      	mov	r2, r0
 8002044:	460b      	mov	r3, r1
 8002046:	4610      	mov	r0, r2
 8002048:	4619      	mov	r1, r3
 800204a:	f04f 0200 	mov.w	r2, #0
 800204e:	4b27      	ldr	r3, [pc, #156]	; (80020ec <RGB+0x11c>)
 8002050:	f7fe fada 	bl	8000608 <__aeabi_dmul>
 8002054:	4602      	mov	r2, r0
 8002056:	460b      	mov	r3, r1
 8002058:	ec43 2b17 	vmov	d7, r2, r3
 800205c:	eeb0 0a47 	vmov.f32	s0, s14
 8002060:	eef0 0a67 	vmov.f32	s1, s15
 8002064:	f004 fa68 	bl	8006538 <round>
 8002068:	ec53 2b10 	vmov	r2, r3, d0
 800206c:	4610      	mov	r0, r2
 800206e:	4619      	mov	r1, r3
 8002070:	f7fe fda2 	bl	8000bb8 <__aeabi_d2uiz>
 8002074:	4603      	mov	r3, r0
 8002076:	b29b      	uxth	r3, r3
 8002078:	015b      	lsls	r3, r3, #5
 800207a:	b29b      	uxth	r3, r3
 800207c:	b21b      	sxth	r3, r3
 800207e:	4323      	orrs	r3, r4
 8002080:	b21c      	sxth	r4, r3
 8002082:	797b      	ldrb	r3, [r7, #5]
 8002084:	4618      	mov	r0, r3
 8002086:	f7fe fa55 	bl	8000534 <__aeabi_i2d>
 800208a:	a315      	add	r3, pc, #84	; (adr r3, 80020e0 <RGB+0x110>)
 800208c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002090:	f7fe fbe4 	bl	800085c <__aeabi_ddiv>
 8002094:	4602      	mov	r2, r0
 8002096:	460b      	mov	r3, r1
 8002098:	4610      	mov	r0, r2
 800209a:	4619      	mov	r1, r3
 800209c:	f04f 0200 	mov.w	r2, #0
 80020a0:	4b11      	ldr	r3, [pc, #68]	; (80020e8 <RGB+0x118>)
 80020a2:	f7fe fab1 	bl	8000608 <__aeabi_dmul>
 80020a6:	4602      	mov	r2, r0
 80020a8:	460b      	mov	r3, r1
 80020aa:	ec43 2b17 	vmov	d7, r2, r3
 80020ae:	eeb0 0a47 	vmov.f32	s0, s14
 80020b2:	eef0 0a67 	vmov.f32	s1, s15
 80020b6:	f004 fa3f 	bl	8006538 <round>
 80020ba:	ec53 2b10 	vmov	r2, r3, d0
 80020be:	4610      	mov	r0, r2
 80020c0:	4619      	mov	r1, r3
 80020c2:	f7fe fd79 	bl	8000bb8 <__aeabi_d2uiz>
 80020c6:	4603      	mov	r3, r0
 80020c8:	b29b      	uxth	r3, r3
 80020ca:	b21b      	sxth	r3, r3
 80020cc:	4323      	orrs	r3, r4
 80020ce:	b21b      	sxth	r3, r3
 80020d0:	81fb      	strh	r3, [r7, #14]

	return color;
 80020d2:	89fb      	ldrh	r3, [r7, #14]
}
 80020d4:	4618      	mov	r0, r3
 80020d6:	3714      	adds	r7, #20
 80020d8:	46bd      	mov	sp, r7
 80020da:	bd90      	pop	{r4, r7, pc}
 80020dc:	f3af 8000 	nop.w
 80020e0:	00000000 	.word	0x00000000
 80020e4:	406fe000 	.word	0x406fe000
 80020e8:	403f0000 	.word	0x403f0000
 80020ec:	404f8000 	.word	0x404f8000

080020f0 <ConfirmEntry>:


void ConfirmEntry(void){
 80020f0:	b480      	push	{r7}
 80020f2:	af00      	add	r7, sp, #0
	// sends data on the parallel 8-bit interface to the display 
	
	wr_active();
 80020f4:	4b08      	ldr	r3, [pc, #32]	; (8002118 <ConfirmEntry+0x28>)
 80020f6:	699b      	ldr	r3, [r3, #24]
 80020f8:	4a07      	ldr	r2, [pc, #28]	; (8002118 <ConfirmEntry+0x28>)
 80020fa:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80020fe:	6193      	str	r3, [r2, #24]
	wr_idle();
 8002100:	4b05      	ldr	r3, [pc, #20]	; (8002118 <ConfirmEntry+0x28>)
 8002102:	699b      	ldr	r3, [r3, #24]
 8002104:	4a04      	ldr	r2, [pc, #16]	; (8002118 <ConfirmEntry+0x28>)
 8002106:	f043 0302 	orr.w	r3, r3, #2
 800210a:	6193      	str	r3, [r2, #24]
	
}
 800210c:	bf00      	nop
 800210e:	46bd      	mov	sp, r7
 8002110:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002114:	4770      	bx	lr
 8002116:	bf00      	nop
 8002118:	40020000 	.word	0x40020000

0800211c <DisplayReset>:

void DisplayReset(void){
 800211c:	b580      	push	{r7, lr}
 800211e:	b082      	sub	sp, #8
 8002120:	af00      	add	r7, sp, #0
 // resets the display to initialize 
	
	
	cs_idle(); 
 8002122:	4b21      	ldr	r3, [pc, #132]	; (80021a8 <DisplayReset+0x8c>)
 8002124:	699b      	ldr	r3, [r3, #24]
 8002126:	4a20      	ldr	r2, [pc, #128]	; (80021a8 <DisplayReset+0x8c>)
 8002128:	f043 0301 	orr.w	r3, r3, #1
 800212c:	6193      	str	r3, [r2, #24]
	rs_data();
 800212e:	4b1f      	ldr	r3, [pc, #124]	; (80021ac <DisplayReset+0x90>)
 8002130:	699b      	ldr	r3, [r3, #24]
 8002132:	4a1e      	ldr	r2, [pc, #120]	; (80021ac <DisplayReset+0x90>)
 8002134:	f043 0310 	orr.w	r3, r3, #16
 8002138:	6193      	str	r3, [r2, #24]
	wr_idle();
 800213a:	4b1c      	ldr	r3, [pc, #112]	; (80021ac <DisplayReset+0x90>)
 800213c:	699b      	ldr	r3, [r3, #24]
 800213e:	4a1b      	ldr	r2, [pc, #108]	; (80021ac <DisplayReset+0x90>)
 8002140:	f043 0302 	orr.w	r3, r3, #2
 8002144:	6193      	str	r3, [r2, #24]
	rd_idle();
 8002146:	4b19      	ldr	r3, [pc, #100]	; (80021ac <DisplayReset+0x90>)
 8002148:	699b      	ldr	r3, [r3, #24]
 800214a:	4a18      	ldr	r2, [pc, #96]	; (80021ac <DisplayReset+0x90>)
 800214c:	f043 0301 	orr.w	r3, r3, #1
 8002150:	6193      	str	r3, [r2, #24]
	rst_reset();
 8002152:	4b17      	ldr	r3, [pc, #92]	; (80021b0 <DisplayReset+0x94>)
 8002154:	699b      	ldr	r3, [r3, #24]
 8002156:	4a16      	ldr	r2, [pc, #88]	; (80021b0 <DisplayReset+0x94>)
 8002158:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800215c:	6193      	str	r3, [r2, #24]
	
	LCD_Wait(20);
 800215e:	2014      	movs	r0, #20
 8002160:	f000 f898 	bl	8002294 <LCD_Wait>
	
	rst_active();
 8002164:	4b12      	ldr	r3, [pc, #72]	; (80021b0 <DisplayReset+0x94>)
 8002166:	699b      	ldr	r3, [r3, #24]
 8002168:	4a11      	ldr	r2, [pc, #68]	; (80021b0 <DisplayReset+0x94>)
 800216a:	f043 0302 	orr.w	r3, r3, #2
 800216e:	6193      	str	r3, [r2, #24]
	
	LCD_Wait(150);
 8002170:	2096      	movs	r0, #150	; 0x96
 8002172:	f000 f88f 	bl	8002294 <LCD_Wait>
	
	cs_active();
 8002176:	4b0c      	ldr	r3, [pc, #48]	; (80021a8 <DisplayReset+0x8c>)
 8002178:	699b      	ldr	r3, [r3, #24]
 800217a:	4a0b      	ldr	r2, [pc, #44]	; (80021a8 <DisplayReset+0x8c>)
 800217c:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8002180:	6193      	str	r3, [r2, #24]
	
	LCD_WriteCommand8b(0x00);
 8002182:	2000      	movs	r0, #0
 8002184:	f000 f86a 	bl	800225c <LCD_WriteCommand8b>
	
	for(int i=0;i<3;i++) ConfirmEntry();
 8002188:	2300      	movs	r3, #0
 800218a:	607b      	str	r3, [r7, #4]
 800218c:	e004      	b.n	8002198 <DisplayReset+0x7c>
 800218e:	f7ff ffaf 	bl	80020f0 <ConfirmEntry>
 8002192:	687b      	ldr	r3, [r7, #4]
 8002194:	3301      	adds	r3, #1
 8002196:	607b      	str	r3, [r7, #4]
 8002198:	687b      	ldr	r3, [r7, #4]
 800219a:	2b02      	cmp	r3, #2
 800219c:	ddf7      	ble.n	800218e <DisplayReset+0x72>
	
}
 800219e:	bf00      	nop
 80021a0:	bf00      	nop
 80021a2:	3708      	adds	r7, #8
 80021a4:	46bd      	mov	sp, r7
 80021a6:	bd80      	pop	{r7, pc}
 80021a8:	40020400 	.word	0x40020400
 80021ac:	40020000 	.word	0x40020000
 80021b0:	40020800 	.word	0x40020800

080021b4 <LCD_WriteData8b>:


void LCD_WriteData8b(uint8_t data){
 80021b4:	b580      	push	{r7, lr}
 80021b6:	b082      	sub	sp, #8
 80021b8:	af00      	add	r7, sp, #0
 80021ba:	4603      	mov	r3, r0
 80021bc:	71fb      	strb	r3, [r7, #7]
	// sets the GPIO pins and sends them to the display 
	cs_active();
 80021be:	4b24      	ldr	r3, [pc, #144]	; (8002250 <LCD_WriteData8b+0x9c>)
 80021c0:	699b      	ldr	r3, [r3, #24]
 80021c2:	4a23      	ldr	r2, [pc, #140]	; (8002250 <LCD_WriteData8b+0x9c>)
 80021c4:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80021c8:	6193      	str	r3, [r2, #24]
	
	GPIOA->ODR = (GPIOA->ODR & 0b1111100011111111)\
 80021ca:	4b22      	ldr	r3, [pc, #136]	; (8002254 <LCD_WriteData8b+0xa0>)
 80021cc:	695a      	ldr	r2, [r3, #20]
 80021ce:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 80021d2:	4013      	ands	r3, r2
	| ((data & 1) << 9) | ((data & 0x04) << 8) | ((data & 0x80) << 1);
 80021d4:	79fa      	ldrb	r2, [r7, #7]
 80021d6:	0252      	lsls	r2, r2, #9
 80021d8:	f402 7200 	and.w	r2, r2, #512	; 0x200
 80021dc:	431a      	orrs	r2, r3
 80021de:	79fb      	ldrb	r3, [r7, #7]
 80021e0:	021b      	lsls	r3, r3, #8
 80021e2:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 80021e6:	431a      	orrs	r2, r3
 80021e8:	79fb      	ldrb	r3, [r7, #7]
 80021ea:	005b      	lsls	r3, r3, #1
 80021ec:	f403 7380 	and.w	r3, r3, #256	; 0x100
	GPIOA->ODR = (GPIOA->ODR & 0b1111100011111111)\
 80021f0:	4918      	ldr	r1, [pc, #96]	; (8002254 <LCD_WriteData8b+0xa0>)
	| ((data & 1) << 9) | ((data & 0x04) << 8) | ((data & 0x80) << 1);
 80021f2:	4313      	orrs	r3, r2
	GPIOA->ODR = (GPIOA->ODR & 0b1111100011111111)\
 80021f4:	614b      	str	r3, [r1, #20]
	
	GPIOB->ODR = (GPIOB->ODR & 0b1111101111000111)\
 80021f6:	4b16      	ldr	r3, [pc, #88]	; (8002250 <LCD_WriteData8b+0x9c>)
 80021f8:	695a      	ldr	r2, [r3, #20]
 80021fa:	f64f 33c7 	movw	r3, #64455	; 0xfbc7
 80021fe:	4013      	ands	r3, r2
	| (data & 0x08) | ((data & 0x10) << 1) | ((data & 0x20) >> 1) | ((data & 0x40) << 4);
 8002200:	79fa      	ldrb	r2, [r7, #7]
 8002202:	f002 0208 	and.w	r2, r2, #8
 8002206:	431a      	orrs	r2, r3
 8002208:	79fb      	ldrb	r3, [r7, #7]
 800220a:	005b      	lsls	r3, r3, #1
 800220c:	f003 0320 	and.w	r3, r3, #32
 8002210:	431a      	orrs	r2, r3
 8002212:	79fb      	ldrb	r3, [r7, #7]
 8002214:	105b      	asrs	r3, r3, #1
 8002216:	f003 0310 	and.w	r3, r3, #16
 800221a:	431a      	orrs	r2, r3
 800221c:	79fb      	ldrb	r3, [r7, #7]
 800221e:	011b      	lsls	r3, r3, #4
 8002220:	f403 6380 	and.w	r3, r3, #1024	; 0x400
	GPIOB->ODR = (GPIOB->ODR & 0b1111101111000111)\
 8002224:	490a      	ldr	r1, [pc, #40]	; (8002250 <LCD_WriteData8b+0x9c>)
	| (data & 0x08) | ((data & 0x10) << 1) | ((data & 0x20) >> 1) | ((data & 0x40) << 4);
 8002226:	4313      	orrs	r3, r2
	GPIOB->ODR = (GPIOB->ODR & 0b1111101111000111)\
 8002228:	614b      	str	r3, [r1, #20]
	
	GPIOC->ODR = (GPIOC->ODR & 0b1111111101111111)\
 800222a:	4b0b      	ldr	r3, [pc, #44]	; (8002258 <LCD_WriteData8b+0xa4>)
 800222c:	695a      	ldr	r2, [r3, #20]
 800222e:	f64f 737f 	movw	r3, #65407	; 0xff7f
 8002232:	4013      	ands	r3, r2
	| ((data & 0x02) << 6);
 8002234:	79fa      	ldrb	r2, [r7, #7]
 8002236:	0192      	lsls	r2, r2, #6
 8002238:	f002 0280 	and.w	r2, r2, #128	; 0x80
	GPIOC->ODR = (GPIOC->ODR & 0b1111111101111111)\
 800223c:	4906      	ldr	r1, [pc, #24]	; (8002258 <LCD_WriteData8b+0xa4>)
	| ((data & 0x02) << 6);
 800223e:	4313      	orrs	r3, r2
	GPIOC->ODR = (GPIOC->ODR & 0b1111111101111111)\
 8002240:	614b      	str	r3, [r1, #20]
		
	ConfirmEntry();
 8002242:	f7ff ff55 	bl	80020f0 <ConfirmEntry>

}
 8002246:	bf00      	nop
 8002248:	3708      	adds	r7, #8
 800224a:	46bd      	mov	sp, r7
 800224c:	bd80      	pop	{r7, pc}
 800224e:	bf00      	nop
 8002250:	40020400 	.word	0x40020400
 8002254:	40020000 	.word	0x40020000
 8002258:	40020800 	.word	0x40020800

0800225c <LCD_WriteCommand8b>:


void LCD_WriteCommand8b(uint8_t data){
 800225c:	b580      	push	{r7, lr}
 800225e:	b082      	sub	sp, #8
 8002260:	af00      	add	r7, sp, #0
 8002262:	4603      	mov	r3, r0
 8002264:	71fb      	strb	r3, [r7, #7]
// sends a command over the parallel interface 
	
	rs_command();
 8002266:	4b0a      	ldr	r3, [pc, #40]	; (8002290 <LCD_WriteCommand8b+0x34>)
 8002268:	699b      	ldr	r3, [r3, #24]
 800226a:	4a09      	ldr	r2, [pc, #36]	; (8002290 <LCD_WriteCommand8b+0x34>)
 800226c:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8002270:	6193      	str	r3, [r2, #24]
	LCD_WriteData8b(data);
 8002272:	79fb      	ldrb	r3, [r7, #7]
 8002274:	4618      	mov	r0, r3
 8002276:	f7ff ff9d 	bl	80021b4 <LCD_WriteData8b>
	rs_data();
 800227a:	4b05      	ldr	r3, [pc, #20]	; (8002290 <LCD_WriteCommand8b+0x34>)
 800227c:	699b      	ldr	r3, [r3, #24]
 800227e:	4a04      	ldr	r2, [pc, #16]	; (8002290 <LCD_WriteCommand8b+0x34>)
 8002280:	f043 0310 	orr.w	r3, r3, #16
 8002284:	6193      	str	r3, [r2, #24]

}
 8002286:	bf00      	nop
 8002288:	3708      	adds	r7, #8
 800228a:	46bd      	mov	sp, r7
 800228c:	bd80      	pop	{r7, pc}
 800228e:	bf00      	nop
 8002290:	40020000 	.word	0x40020000

08002294 <LCD_Wait>:

void LCD_Wait(uint16_t delay){
 8002294:	b480      	push	{r7}
 8002296:	b085      	sub	sp, #20
 8002298:	af00      	add	r7, sp, #0
 800229a:	4603      	mov	r3, r0
 800229c:	80fb      	strh	r3, [r7, #6]
// waits several processor cycles 
	
	for(int i=0; i<= delay; i++){
 800229e:	2300      	movs	r3, #0
 80022a0:	60fb      	str	r3, [r7, #12]
 80022a2:	e00d      	b.n	80022c0 <LCD_Wait+0x2c>
		for(int j=0; j <= LCD_DELAY; j++){}
 80022a4:	2300      	movs	r3, #0
 80022a6:	60bb      	str	r3, [r7, #8]
 80022a8:	e002      	b.n	80022b0 <LCD_Wait+0x1c>
 80022aa:	68bb      	ldr	r3, [r7, #8]
 80022ac:	3301      	adds	r3, #1
 80022ae:	60bb      	str	r3, [r7, #8]
 80022b0:	68bb      	ldr	r3, [r7, #8]
 80022b2:	f240 72d3 	movw	r2, #2003	; 0x7d3
 80022b6:	4293      	cmp	r3, r2
 80022b8:	ddf7      	ble.n	80022aa <LCD_Wait+0x16>
	for(int i=0; i<= delay; i++){
 80022ba:	68fb      	ldr	r3, [r7, #12]
 80022bc:	3301      	adds	r3, #1
 80022be:	60fb      	str	r3, [r7, #12]
 80022c0:	88fb      	ldrh	r3, [r7, #6]
 80022c2:	68fa      	ldr	r2, [r7, #12]
 80022c4:	429a      	cmp	r2, r3
 80022c6:	dded      	ble.n	80022a4 <LCD_Wait+0x10>
	}
}
 80022c8:	bf00      	nop
 80022ca:	bf00      	nop
 80022cc:	3714      	adds	r7, #20
 80022ce:	46bd      	mov	sp, r7
 80022d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80022d4:	4770      	bx	lr
	...

080022d8 <LCD_Init>:

void LCD_Init(uint16_t color){
 80022d8:	b580      	push	{r7, lr}
 80022da:	b082      	sub	sp, #8
 80022dc:	af00      	add	r7, sp, #0
 80022de:	4603      	mov	r3, r0
 80022e0:	80fb      	strh	r3, [r7, #6]
	// launches the display 
	
	DisplayReset();
 80022e2:	f7ff ff1b 	bl	800211c <DisplayReset>
	LCD_Wait(150);
 80022e6:	2096      	movs	r0, #150	; 0x96
 80022e8:	f7ff ffd4 	bl	8002294 <LCD_Wait>

	cs_active();
 80022ec:	4ba4      	ldr	r3, [pc, #656]	; (8002580 <LCD_Init+0x2a8>)
 80022ee:	699b      	ldr	r3, [r3, #24]
 80022f0:	4aa3      	ldr	r2, [pc, #652]	; (8002580 <LCD_Init+0x2a8>)
 80022f2:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80022f6:	6193      	str	r3, [r2, #24]
	LCD_Wait(150);
 80022f8:	2096      	movs	r0, #150	; 0x96
 80022fa:	f7ff ffcb 	bl	8002294 <LCD_Wait>
    
		LCD_WriteCommand8b(0x01);LCD_WriteData8b(0x01);LCD_WriteData8b(0x00);
 80022fe:	2001      	movs	r0, #1
 8002300:	f7ff ffac 	bl	800225c <LCD_WriteCommand8b>
 8002304:	2001      	movs	r0, #1
 8002306:	f7ff ff55 	bl	80021b4 <LCD_WriteData8b>
 800230a:	2000      	movs	r0, #0
 800230c:	f7ff ff52 	bl	80021b4 <LCD_WriteData8b>
		LCD_WriteCommand8b(0x02);LCD_WriteData8b(0x07);LCD_WriteData8b(0x00);
 8002310:	2002      	movs	r0, #2
 8002312:	f7ff ffa3 	bl	800225c <LCD_WriteCommand8b>
 8002316:	2007      	movs	r0, #7
 8002318:	f7ff ff4c 	bl	80021b4 <LCD_WriteData8b>
 800231c:	2000      	movs	r0, #0
 800231e:	f7ff ff49 	bl	80021b4 <LCD_WriteData8b>
		LCD_WriteCommand8b(0x03);LCD_WriteData8b(0x10);LCD_WriteData8b(0x30);
 8002322:	2003      	movs	r0, #3
 8002324:	f7ff ff9a 	bl	800225c <LCD_WriteCommand8b>
 8002328:	2010      	movs	r0, #16
 800232a:	f7ff ff43 	bl	80021b4 <LCD_WriteData8b>
 800232e:	2030      	movs	r0, #48	; 0x30
 8002330:	f7ff ff40 	bl	80021b4 <LCD_WriteData8b>
		LCD_WriteCommand8b(0x08);LCD_WriteData8b(0x03);LCD_WriteData8b(0x02);
 8002334:	2008      	movs	r0, #8
 8002336:	f7ff ff91 	bl	800225c <LCD_WriteCommand8b>
 800233a:	2003      	movs	r0, #3
 800233c:	f7ff ff3a 	bl	80021b4 <LCD_WriteData8b>
 8002340:	2002      	movs	r0, #2
 8002342:	f7ff ff37 	bl	80021b4 <LCD_WriteData8b>
		LCD_WriteCommand8b(0x09);LCD_WriteData8b(0x00);LCD_WriteData8b(0x00);
 8002346:	2009      	movs	r0, #9
 8002348:	f7ff ff88 	bl	800225c <LCD_WriteCommand8b>
 800234c:	2000      	movs	r0, #0
 800234e:	f7ff ff31 	bl	80021b4 <LCD_WriteData8b>
 8002352:	2000      	movs	r0, #0
 8002354:	f7ff ff2e 	bl	80021b4 <LCD_WriteData8b>
		LCD_WriteCommand8b(0x0A);LCD_WriteData8b(0x00);LCD_WriteData8b(0x08);
 8002358:	200a      	movs	r0, #10
 800235a:	f7ff ff7f 	bl	800225c <LCD_WriteCommand8b>
 800235e:	2000      	movs	r0, #0
 8002360:	f7ff ff28 	bl	80021b4 <LCD_WriteData8b>
 8002364:	2008      	movs	r0, #8
 8002366:	f7ff ff25 	bl	80021b4 <LCD_WriteData8b>
		
		//power control settings
		LCD_WriteCommand8b(0x10);LCD_WriteData8b(0x07);LCD_WriteData8b(0x90);
 800236a:	2010      	movs	r0, #16
 800236c:	f7ff ff76 	bl	800225c <LCD_WriteCommand8b>
 8002370:	2007      	movs	r0, #7
 8002372:	f7ff ff1f 	bl	80021b4 <LCD_WriteData8b>
 8002376:	2090      	movs	r0, #144	; 0x90
 8002378:	f7ff ff1c 	bl	80021b4 <LCD_WriteData8b>
		LCD_WriteCommand8b(0x11);LCD_WriteData8b(0x00);LCD_WriteData8b(0x05);
 800237c:	2011      	movs	r0, #17
 800237e:	f7ff ff6d 	bl	800225c <LCD_WriteCommand8b>
 8002382:	2000      	movs	r0, #0
 8002384:	f7ff ff16 	bl	80021b4 <LCD_WriteData8b>
 8002388:	2005      	movs	r0, #5
 800238a:	f7ff ff13 	bl	80021b4 <LCD_WriteData8b>
		LCD_WriteCommand8b(0x12);LCD_WriteData8b(0x00);LCD_WriteData8b(0x00);
 800238e:	2012      	movs	r0, #18
 8002390:	f7ff ff64 	bl	800225c <LCD_WriteCommand8b>
 8002394:	2000      	movs	r0, #0
 8002396:	f7ff ff0d 	bl	80021b4 <LCD_WriteData8b>
 800239a:	2000      	movs	r0, #0
 800239c:	f7ff ff0a 	bl	80021b4 <LCD_WriteData8b>
		LCD_WriteCommand8b(0x13);LCD_WriteData8b(0x00);LCD_WriteData8b(0x00);
 80023a0:	2013      	movs	r0, #19
 80023a2:	f7ff ff5b 	bl	800225c <LCD_WriteCommand8b>
 80023a6:	2000      	movs	r0, #0
 80023a8:	f7ff ff04 	bl	80021b4 <LCD_WriteData8b>
 80023ac:	2000      	movs	r0, #0
 80023ae:	f7ff ff01 	bl	80021b4 <LCD_WriteData8b>

	LCD_Wait(150);
 80023b2:	2096      	movs	r0, #150	; 0x96
 80023b4:	f7ff ff6e 	bl	8002294 <LCD_Wait>
		// power supply settings
		LCD_WriteCommand8b(0x10);LCD_WriteData8b(0x12);LCD_WriteData8b(0xB0);
 80023b8:	2010      	movs	r0, #16
 80023ba:	f7ff ff4f 	bl	800225c <LCD_WriteCommand8b>
 80023be:	2012      	movs	r0, #18
 80023c0:	f7ff fef8 	bl	80021b4 <LCD_WriteData8b>
 80023c4:	20b0      	movs	r0, #176	; 0xb0
 80023c6:	f7ff fef5 	bl	80021b4 <LCD_WriteData8b>

		LCD_WriteCommand8b(0x11);LCD_WriteData8b(0x00);LCD_WriteData8b(0x07);
 80023ca:	2011      	movs	r0, #17
 80023cc:	f7ff ff46 	bl	800225c <LCD_WriteCommand8b>
 80023d0:	2000      	movs	r0, #0
 80023d2:	f7ff feef 	bl	80021b4 <LCD_WriteData8b>
 80023d6:	2007      	movs	r0, #7
 80023d8:	f7ff feec 	bl	80021b4 <LCD_WriteData8b>

 LCD_Wait(150);
 80023dc:	2096      	movs	r0, #150	; 0x96
 80023de:	f7ff ff59 	bl	8002294 <LCD_Wait>

		LCD_WriteCommand8b(0x12);LCD_WriteData8b(0x00);LCD_WriteData8b(0x8C);
 80023e2:	2012      	movs	r0, #18
 80023e4:	f7ff ff3a 	bl	800225c <LCD_WriteCommand8b>
 80023e8:	2000      	movs	r0, #0
 80023ea:	f7ff fee3 	bl	80021b4 <LCD_WriteData8b>
 80023ee:	208c      	movs	r0, #140	; 0x8c
 80023f0:	f7ff fee0 	bl	80021b4 <LCD_WriteData8b>
		LCD_WriteCommand8b(0x13);LCD_WriteData8b(0x17);LCD_WriteData8b(0x00);
 80023f4:	2013      	movs	r0, #19
 80023f6:	f7ff ff31 	bl	800225c <LCD_WriteCommand8b>
 80023fa:	2017      	movs	r0, #23
 80023fc:	f7ff feda 	bl	80021b4 <LCD_WriteData8b>
 8002400:	2000      	movs	r0, #0
 8002402:	f7ff fed7 	bl	80021b4 <LCD_WriteData8b>
		LCD_WriteCommand8b(0x29);LCD_WriteData8b(0x00);LCD_WriteData8b(0x22);
 8002406:	2029      	movs	r0, #41	; 0x29
 8002408:	f7ff ff28 	bl	800225c <LCD_WriteCommand8b>
 800240c:	2000      	movs	r0, #0
 800240e:	f7ff fed1 	bl	80021b4 <LCD_WriteData8b>
 8002412:	2022      	movs	r0, #34	; 0x22
 8002414:	f7ff fece 	bl	80021b4 <LCD_WriteData8b>

	LCD_Wait(150);
 8002418:	2096      	movs	r0, #150	; 0x96
 800241a:	f7ff ff3b 	bl	8002294 <LCD_Wait>

		//gamma parameters
		LCD_WriteCommand8b(0x30);LCD_WriteData8b(0x00);LCD_WriteData8b(0x00);
 800241e:	2030      	movs	r0, #48	; 0x30
 8002420:	f7ff ff1c 	bl	800225c <LCD_WriteCommand8b>
 8002424:	2000      	movs	r0, #0
 8002426:	f7ff fec5 	bl	80021b4 <LCD_WriteData8b>
 800242a:	2000      	movs	r0, #0
 800242c:	f7ff fec2 	bl	80021b4 <LCD_WriteData8b>
		LCD_WriteCommand8b(0x31);LCD_WriteData8b(0x05);LCD_WriteData8b(0x05);
 8002430:	2031      	movs	r0, #49	; 0x31
 8002432:	f7ff ff13 	bl	800225c <LCD_WriteCommand8b>
 8002436:	2005      	movs	r0, #5
 8002438:	f7ff febc 	bl	80021b4 <LCD_WriteData8b>
 800243c:	2005      	movs	r0, #5
 800243e:	f7ff feb9 	bl	80021b4 <LCD_WriteData8b>
		LCD_WriteCommand8b(0x32);LCD_WriteData8b(0x02);LCD_WriteData8b(0x05);
 8002442:	2032      	movs	r0, #50	; 0x32
 8002444:	f7ff ff0a 	bl	800225c <LCD_WriteCommand8b>
 8002448:	2002      	movs	r0, #2
 800244a:	f7ff feb3 	bl	80021b4 <LCD_WriteData8b>
 800244e:	2005      	movs	r0, #5
 8002450:	f7ff feb0 	bl	80021b4 <LCD_WriteData8b>
		LCD_WriteCommand8b(0x35);LCD_WriteData8b(0x02);LCD_WriteData8b(0x06);
 8002454:	2035      	movs	r0, #53	; 0x35
 8002456:	f7ff ff01 	bl	800225c <LCD_WriteCommand8b>
 800245a:	2002      	movs	r0, #2
 800245c:	f7ff feaa 	bl	80021b4 <LCD_WriteData8b>
 8002460:	2006      	movs	r0, #6
 8002462:	f7ff fea7 	bl	80021b4 <LCD_WriteData8b>
		LCD_WriteCommand8b(0x36);LCD_WriteData8b(0x04);LCD_WriteData8b(0x08);
 8002466:	2036      	movs	r0, #54	; 0x36
 8002468:	f7ff fef8 	bl	800225c <LCD_WriteCommand8b>
 800246c:	2004      	movs	r0, #4
 800246e:	f7ff fea1 	bl	80021b4 <LCD_WriteData8b>
 8002472:	2008      	movs	r0, #8
 8002474:	f7ff fe9e 	bl	80021b4 <LCD_WriteData8b>
		LCD_WriteCommand8b(0x37);LCD_WriteData8b(0x00);LCD_WriteData8b(0x00);
 8002478:	2037      	movs	r0, #55	; 0x37
 800247a:	f7ff feef 	bl	800225c <LCD_WriteCommand8b>
 800247e:	2000      	movs	r0, #0
 8002480:	f7ff fe98 	bl	80021b4 <LCD_WriteData8b>
 8002484:	2000      	movs	r0, #0
 8002486:	f7ff fe95 	bl	80021b4 <LCD_WriteData8b>
		LCD_WriteCommand8b(0x38);LCD_WriteData8b(0x05);LCD_WriteData8b(0x04);
 800248a:	2038      	movs	r0, #56	; 0x38
 800248c:	f7ff fee6 	bl	800225c <LCD_WriteCommand8b>
 8002490:	2005      	movs	r0, #5
 8002492:	f7ff fe8f 	bl	80021b4 <LCD_WriteData8b>
 8002496:	2004      	movs	r0, #4
 8002498:	f7ff fe8c 	bl	80021b4 <LCD_WriteData8b>
		LCD_WriteCommand8b(0x39);LCD_WriteData8b(0x02);LCD_WriteData8b(0x06);
 800249c:	2039      	movs	r0, #57	; 0x39
 800249e:	f7ff fedd 	bl	800225c <LCD_WriteCommand8b>
 80024a2:	2002      	movs	r0, #2
 80024a4:	f7ff fe86 	bl	80021b4 <LCD_WriteData8b>
 80024a8:	2006      	movs	r0, #6
 80024aa:	f7ff fe83 	bl	80021b4 <LCD_WriteData8b>
		LCD_WriteCommand8b(0x3C);LCD_WriteData8b(0x02);LCD_WriteData8b(0x06);
 80024ae:	203c      	movs	r0, #60	; 0x3c
 80024b0:	f7ff fed4 	bl	800225c <LCD_WriteCommand8b>
 80024b4:	2002      	movs	r0, #2
 80024b6:	f7ff fe7d 	bl	80021b4 <LCD_WriteData8b>
 80024ba:	2006      	movs	r0, #6
 80024bc:	f7ff fe7a 	bl	80021b4 <LCD_WriteData8b>
		LCD_WriteCommand8b(0x3D);LCD_WriteData8b(0x04);LCD_WriteData8b(0x08);
 80024c0:	203d      	movs	r0, #61	; 0x3d
 80024c2:	f7ff fecb 	bl	800225c <LCD_WriteCommand8b>
 80024c6:	2004      	movs	r0, #4
 80024c8:	f7ff fe74 	bl	80021b4 <LCD_WriteData8b>
 80024cc:	2008      	movs	r0, #8
 80024ce:	f7ff fe71 	bl	80021b4 <LCD_WriteData8b>

		LCD_WriteCommand8b(0x50);LCD_WriteData8b(0x00);LCD_WriteData8b(0x00);
 80024d2:	2050      	movs	r0, #80	; 0x50
 80024d4:	f7ff fec2 	bl	800225c <LCD_WriteCommand8b>
 80024d8:	2000      	movs	r0, #0
 80024da:	f7ff fe6b 	bl	80021b4 <LCD_WriteData8b>
 80024de:	2000      	movs	r0, #0
 80024e0:	f7ff fe68 	bl	80021b4 <LCD_WriteData8b>
		LCD_WriteCommand8b(0x51);LCD_WriteData8b(0x00);LCD_WriteData8b(0xEF);
 80024e4:	2051      	movs	r0, #81	; 0x51
 80024e6:	f7ff feb9 	bl	800225c <LCD_WriteCommand8b>
 80024ea:	2000      	movs	r0, #0
 80024ec:	f7ff fe62 	bl	80021b4 <LCD_WriteData8b>
 80024f0:	20ef      	movs	r0, #239	; 0xef
 80024f2:	f7ff fe5f 	bl	80021b4 <LCD_WriteData8b>
		LCD_WriteCommand8b(0x52);LCD_WriteData8b(0x00);LCD_WriteData8b(0x00);
 80024f6:	2052      	movs	r0, #82	; 0x52
 80024f8:	f7ff feb0 	bl	800225c <LCD_WriteCommand8b>
 80024fc:	2000      	movs	r0, #0
 80024fe:	f7ff fe59 	bl	80021b4 <LCD_WriteData8b>
 8002502:	2000      	movs	r0, #0
 8002504:	f7ff fe56 	bl	80021b4 <LCD_WriteData8b>
		LCD_WriteCommand8b(0x53);LCD_WriteData8b(0x01);LCD_WriteData8b(0x3F);
 8002508:	2053      	movs	r0, #83	; 0x53
 800250a:	f7ff fea7 	bl	800225c <LCD_WriteCommand8b>
 800250e:	2001      	movs	r0, #1
 8002510:	f7ff fe50 	bl	80021b4 <LCD_WriteData8b>
 8002514:	203f      	movs	r0, #63	; 0x3f
 8002516:	f7ff fe4d 	bl	80021b4 <LCD_WriteData8b>

		LCD_WriteCommand8b(0x60);LCD_WriteData8b(0xA7);LCD_WriteData8b(0x00);
 800251a:	2060      	movs	r0, #96	; 0x60
 800251c:	f7ff fe9e 	bl	800225c <LCD_WriteCommand8b>
 8002520:	20a7      	movs	r0, #167	; 0xa7
 8002522:	f7ff fe47 	bl	80021b4 <LCD_WriteData8b>
 8002526:	2000      	movs	r0, #0
 8002528:	f7ff fe44 	bl	80021b4 <LCD_WriteData8b>
		LCD_WriteCommand8b(0x61);LCD_WriteData8b(0x00);LCD_WriteData8b(0x01);
 800252c:	2061      	movs	r0, #97	; 0x61
 800252e:	f7ff fe95 	bl	800225c <LCD_WriteCommand8b>
 8002532:	2000      	movs	r0, #0
 8002534:	f7ff fe3e 	bl	80021b4 <LCD_WriteData8b>
 8002538:	2001      	movs	r0, #1
 800253a:	f7ff fe3b 	bl	80021b4 <LCD_WriteData8b>
		LCD_WriteCommand8b(0x90);LCD_WriteData8b(0x00);LCD_WriteData8b(0x33); 
 800253e:	2090      	movs	r0, #144	; 0x90
 8002540:	f7ff fe8c 	bl	800225c <LCD_WriteCommand8b>
 8002544:	2000      	movs	r0, #0
 8002546:	f7ff fe35 	bl	80021b4 <LCD_WriteData8b>
 800254a:	2033      	movs	r0, #51	; 0x33
 800254c:	f7ff fe32 	bl	80021b4 <LCD_WriteData8b>
		LCD_Wait(150);
 8002550:	2096      	movs	r0, #150	; 0x96
 8002552:	f7ff fe9f 	bl	8002294 <LCD_Wait>
		LCD_WriteCommand8b(0x07); LCD_WriteData8b(0x01);LCD_WriteData8b(0x33); //Display ON
 8002556:	2007      	movs	r0, #7
 8002558:	f7ff fe80 	bl	800225c <LCD_WriteCommand8b>
 800255c:	2001      	movs	r0, #1
 800255e:	f7ff fe29 	bl	80021b4 <LCD_WriteData8b>
 8002562:	2033      	movs	r0, #51	; 0x33
 8002564:	f7ff fe26 	bl	80021b4 <LCD_WriteData8b>
		LCD_Wait(150);
 8002568:	2096      	movs	r0, #150	; 0x96
 800256a:	f7ff fe93 	bl	8002294 <LCD_Wait>
   
	LCD_DisplayFill(color);
 800256e:	88fb      	ldrh	r3, [r7, #6]
 8002570:	4618      	mov	r0, r3
 8002572:	f7ff fa6d 	bl	8001a50 <LCD_DisplayFill>
	
}
 8002576:	bf00      	nop
 8002578:	3708      	adds	r7, #8
 800257a:	46bd      	mov	sp, r7
 800257c:	bd80      	pop	{r7, pc}
 800257e:	bf00      	nop
 8002580:	40020400 	.word	0x40020400

08002584 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack    		 /* set stack pointer */
 8002584:	f8df d034 	ldr.w	sp, [pc, #52]	; 80025bc <LoopFillZerobss+0x14>

/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8002588:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 800258a:	e003      	b.n	8002594 <LoopCopyDataInit>

0800258c <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 800258c:	4b0c      	ldr	r3, [pc, #48]	; (80025c0 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 800258e:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 8002590:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 8002592:	3104      	adds	r1, #4

08002594 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 8002594:	480b      	ldr	r0, [pc, #44]	; (80025c4 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 8002596:	4b0c      	ldr	r3, [pc, #48]	; (80025c8 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 8002598:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 800259a:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 800259c:	d3f6      	bcc.n	800258c <CopyDataInit>
  ldr  r2, =_sbss
 800259e:	4a0b      	ldr	r2, [pc, #44]	; (80025cc <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 80025a0:	e002      	b.n	80025a8 <LoopFillZerobss>

080025a2 <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 80025a2:	2300      	movs	r3, #0
  str  r3, [r2], #4
 80025a4:	f842 3b04 	str.w	r3, [r2], #4

080025a8 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 80025a8:	4b09      	ldr	r3, [pc, #36]	; (80025d0 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 80025aa:	429a      	cmp	r2, r3
  bcc  FillZerobss
 80025ac:	d3f9      	bcc.n	80025a2 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 80025ae:	f7ff f80d 	bl	80015cc <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 80025b2:	f000 f82b 	bl	800260c <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 80025b6:	f7fe fefb 	bl	80013b0 <main>
  bx  lr    
 80025ba:	4770      	bx	lr
  ldr   sp, =_estack    		 /* set stack pointer */
 80025bc:	20018000 	.word	0x20018000
  ldr  r3, =_sidata
 80025c0:	08008478 	.word	0x08008478
  ldr  r0, =_sdata
 80025c4:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 80025c8:	200001dc 	.word	0x200001dc
  ldr  r2, =_sbss
 80025cc:	200001dc 	.word	0x200001dc
  ldr  r3, = _ebss
 80025d0:	2000021c 	.word	0x2000021c

080025d4 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80025d4:	e7fe      	b.n	80025d4 <ADC_IRQHandler>
	...

080025d8 <HAL_IncTick>:
 * @note This function is declared as __weak to be overwritten in case of other 
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 80025d8:	b480      	push	{r7}
 80025da:	af00      	add	r7, sp, #0
  uwTick += uwTickFreq;
 80025dc:	4b06      	ldr	r3, [pc, #24]	; (80025f8 <HAL_IncTick+0x20>)
 80025de:	781b      	ldrb	r3, [r3, #0]
 80025e0:	461a      	mov	r2, r3
 80025e2:	4b06      	ldr	r3, [pc, #24]	; (80025fc <HAL_IncTick+0x24>)
 80025e4:	681b      	ldr	r3, [r3, #0]
 80025e6:	4413      	add	r3, r2
 80025e8:	4a04      	ldr	r2, [pc, #16]	; (80025fc <HAL_IncTick+0x24>)
 80025ea:	6013      	str	r3, [r2, #0]
}
 80025ec:	bf00      	nop
 80025ee:	46bd      	mov	sp, r7
 80025f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80025f4:	4770      	bx	lr
 80025f6:	bf00      	nop
 80025f8:	20000004 	.word	0x20000004
 80025fc:	20000208 	.word	0x20000208

08002600 <__errno>:
 8002600:	4b01      	ldr	r3, [pc, #4]	; (8002608 <__errno+0x8>)
 8002602:	6818      	ldr	r0, [r3, #0]
 8002604:	4770      	bx	lr
 8002606:	bf00      	nop
 8002608:	20000008 	.word	0x20000008

0800260c <__libc_init_array>:
 800260c:	b570      	push	{r4, r5, r6, lr}
 800260e:	4d0d      	ldr	r5, [pc, #52]	; (8002644 <__libc_init_array+0x38>)
 8002610:	4c0d      	ldr	r4, [pc, #52]	; (8002648 <__libc_init_array+0x3c>)
 8002612:	1b64      	subs	r4, r4, r5
 8002614:	10a4      	asrs	r4, r4, #2
 8002616:	2600      	movs	r6, #0
 8002618:	42a6      	cmp	r6, r4
 800261a:	d109      	bne.n	8002630 <__libc_init_array+0x24>
 800261c:	4d0b      	ldr	r5, [pc, #44]	; (800264c <__libc_init_array+0x40>)
 800261e:	4c0c      	ldr	r4, [pc, #48]	; (8002650 <__libc_init_array+0x44>)
 8002620:	f005 fa7c 	bl	8007b1c <_init>
 8002624:	1b64      	subs	r4, r4, r5
 8002626:	10a4      	asrs	r4, r4, #2
 8002628:	2600      	movs	r6, #0
 800262a:	42a6      	cmp	r6, r4
 800262c:	d105      	bne.n	800263a <__libc_init_array+0x2e>
 800262e:	bd70      	pop	{r4, r5, r6, pc}
 8002630:	f855 3b04 	ldr.w	r3, [r5], #4
 8002634:	4798      	blx	r3
 8002636:	3601      	adds	r6, #1
 8002638:	e7ee      	b.n	8002618 <__libc_init_array+0xc>
 800263a:	f855 3b04 	ldr.w	r3, [r5], #4
 800263e:	4798      	blx	r3
 8002640:	3601      	adds	r6, #1
 8002642:	e7f2      	b.n	800262a <__libc_init_array+0x1e>
 8002644:	08008470 	.word	0x08008470
 8002648:	08008470 	.word	0x08008470
 800264c:	08008470 	.word	0x08008470
 8002650:	08008474 	.word	0x08008474

08002654 <malloc>:
 8002654:	4b02      	ldr	r3, [pc, #8]	; (8002660 <malloc+0xc>)
 8002656:	4601      	mov	r1, r0
 8002658:	6818      	ldr	r0, [r3, #0]
 800265a:	f000 b863 	b.w	8002724 <_malloc_r>
 800265e:	bf00      	nop
 8002660:	20000008 	.word	0x20000008

08002664 <free>:
 8002664:	4b02      	ldr	r3, [pc, #8]	; (8002670 <free+0xc>)
 8002666:	4601      	mov	r1, r0
 8002668:	6818      	ldr	r0, [r3, #0]
 800266a:	f000 b80b 	b.w	8002684 <_free_r>
 800266e:	bf00      	nop
 8002670:	20000008 	.word	0x20000008

08002674 <memset>:
 8002674:	4402      	add	r2, r0
 8002676:	4603      	mov	r3, r0
 8002678:	4293      	cmp	r3, r2
 800267a:	d100      	bne.n	800267e <memset+0xa>
 800267c:	4770      	bx	lr
 800267e:	f803 1b01 	strb.w	r1, [r3], #1
 8002682:	e7f9      	b.n	8002678 <memset+0x4>

08002684 <_free_r>:
 8002684:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8002686:	2900      	cmp	r1, #0
 8002688:	d048      	beq.n	800271c <_free_r+0x98>
 800268a:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800268e:	9001      	str	r0, [sp, #4]
 8002690:	2b00      	cmp	r3, #0
 8002692:	f1a1 0404 	sub.w	r4, r1, #4
 8002696:	bfb8      	it	lt
 8002698:	18e4      	addlt	r4, r4, r3
 800269a:	f001 fdff 	bl	800429c <__malloc_lock>
 800269e:	4a20      	ldr	r2, [pc, #128]	; (8002720 <_free_r+0x9c>)
 80026a0:	9801      	ldr	r0, [sp, #4]
 80026a2:	6813      	ldr	r3, [r2, #0]
 80026a4:	4615      	mov	r5, r2
 80026a6:	b933      	cbnz	r3, 80026b6 <_free_r+0x32>
 80026a8:	6063      	str	r3, [r4, #4]
 80026aa:	6014      	str	r4, [r2, #0]
 80026ac:	b003      	add	sp, #12
 80026ae:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80026b2:	f001 bdf9 	b.w	80042a8 <__malloc_unlock>
 80026b6:	42a3      	cmp	r3, r4
 80026b8:	d90b      	bls.n	80026d2 <_free_r+0x4e>
 80026ba:	6821      	ldr	r1, [r4, #0]
 80026bc:	1862      	adds	r2, r4, r1
 80026be:	4293      	cmp	r3, r2
 80026c0:	bf04      	itt	eq
 80026c2:	681a      	ldreq	r2, [r3, #0]
 80026c4:	685b      	ldreq	r3, [r3, #4]
 80026c6:	6063      	str	r3, [r4, #4]
 80026c8:	bf04      	itt	eq
 80026ca:	1852      	addeq	r2, r2, r1
 80026cc:	6022      	streq	r2, [r4, #0]
 80026ce:	602c      	str	r4, [r5, #0]
 80026d0:	e7ec      	b.n	80026ac <_free_r+0x28>
 80026d2:	461a      	mov	r2, r3
 80026d4:	685b      	ldr	r3, [r3, #4]
 80026d6:	b10b      	cbz	r3, 80026dc <_free_r+0x58>
 80026d8:	42a3      	cmp	r3, r4
 80026da:	d9fa      	bls.n	80026d2 <_free_r+0x4e>
 80026dc:	6811      	ldr	r1, [r2, #0]
 80026de:	1855      	adds	r5, r2, r1
 80026e0:	42a5      	cmp	r5, r4
 80026e2:	d10b      	bne.n	80026fc <_free_r+0x78>
 80026e4:	6824      	ldr	r4, [r4, #0]
 80026e6:	4421      	add	r1, r4
 80026e8:	1854      	adds	r4, r2, r1
 80026ea:	42a3      	cmp	r3, r4
 80026ec:	6011      	str	r1, [r2, #0]
 80026ee:	d1dd      	bne.n	80026ac <_free_r+0x28>
 80026f0:	681c      	ldr	r4, [r3, #0]
 80026f2:	685b      	ldr	r3, [r3, #4]
 80026f4:	6053      	str	r3, [r2, #4]
 80026f6:	4421      	add	r1, r4
 80026f8:	6011      	str	r1, [r2, #0]
 80026fa:	e7d7      	b.n	80026ac <_free_r+0x28>
 80026fc:	d902      	bls.n	8002704 <_free_r+0x80>
 80026fe:	230c      	movs	r3, #12
 8002700:	6003      	str	r3, [r0, #0]
 8002702:	e7d3      	b.n	80026ac <_free_r+0x28>
 8002704:	6825      	ldr	r5, [r4, #0]
 8002706:	1961      	adds	r1, r4, r5
 8002708:	428b      	cmp	r3, r1
 800270a:	bf04      	itt	eq
 800270c:	6819      	ldreq	r1, [r3, #0]
 800270e:	685b      	ldreq	r3, [r3, #4]
 8002710:	6063      	str	r3, [r4, #4]
 8002712:	bf04      	itt	eq
 8002714:	1949      	addeq	r1, r1, r5
 8002716:	6021      	streq	r1, [r4, #0]
 8002718:	6054      	str	r4, [r2, #4]
 800271a:	e7c7      	b.n	80026ac <_free_r+0x28>
 800271c:	b003      	add	sp, #12
 800271e:	bd30      	pop	{r4, r5, pc}
 8002720:	20000200 	.word	0x20000200

08002724 <_malloc_r>:
 8002724:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002726:	1ccd      	adds	r5, r1, #3
 8002728:	f025 0503 	bic.w	r5, r5, #3
 800272c:	3508      	adds	r5, #8
 800272e:	2d0c      	cmp	r5, #12
 8002730:	bf38      	it	cc
 8002732:	250c      	movcc	r5, #12
 8002734:	2d00      	cmp	r5, #0
 8002736:	4606      	mov	r6, r0
 8002738:	db01      	blt.n	800273e <_malloc_r+0x1a>
 800273a:	42a9      	cmp	r1, r5
 800273c:	d903      	bls.n	8002746 <_malloc_r+0x22>
 800273e:	230c      	movs	r3, #12
 8002740:	6033      	str	r3, [r6, #0]
 8002742:	2000      	movs	r0, #0
 8002744:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002746:	f001 fda9 	bl	800429c <__malloc_lock>
 800274a:	4921      	ldr	r1, [pc, #132]	; (80027d0 <_malloc_r+0xac>)
 800274c:	680a      	ldr	r2, [r1, #0]
 800274e:	4614      	mov	r4, r2
 8002750:	b99c      	cbnz	r4, 800277a <_malloc_r+0x56>
 8002752:	4f20      	ldr	r7, [pc, #128]	; (80027d4 <_malloc_r+0xb0>)
 8002754:	683b      	ldr	r3, [r7, #0]
 8002756:	b923      	cbnz	r3, 8002762 <_malloc_r+0x3e>
 8002758:	4621      	mov	r1, r4
 800275a:	4630      	mov	r0, r6
 800275c:	f000 fa4c 	bl	8002bf8 <_sbrk_r>
 8002760:	6038      	str	r0, [r7, #0]
 8002762:	4629      	mov	r1, r5
 8002764:	4630      	mov	r0, r6
 8002766:	f000 fa47 	bl	8002bf8 <_sbrk_r>
 800276a:	1c43      	adds	r3, r0, #1
 800276c:	d123      	bne.n	80027b6 <_malloc_r+0x92>
 800276e:	230c      	movs	r3, #12
 8002770:	6033      	str	r3, [r6, #0]
 8002772:	4630      	mov	r0, r6
 8002774:	f001 fd98 	bl	80042a8 <__malloc_unlock>
 8002778:	e7e3      	b.n	8002742 <_malloc_r+0x1e>
 800277a:	6823      	ldr	r3, [r4, #0]
 800277c:	1b5b      	subs	r3, r3, r5
 800277e:	d417      	bmi.n	80027b0 <_malloc_r+0x8c>
 8002780:	2b0b      	cmp	r3, #11
 8002782:	d903      	bls.n	800278c <_malloc_r+0x68>
 8002784:	6023      	str	r3, [r4, #0]
 8002786:	441c      	add	r4, r3
 8002788:	6025      	str	r5, [r4, #0]
 800278a:	e004      	b.n	8002796 <_malloc_r+0x72>
 800278c:	6863      	ldr	r3, [r4, #4]
 800278e:	42a2      	cmp	r2, r4
 8002790:	bf0c      	ite	eq
 8002792:	600b      	streq	r3, [r1, #0]
 8002794:	6053      	strne	r3, [r2, #4]
 8002796:	4630      	mov	r0, r6
 8002798:	f001 fd86 	bl	80042a8 <__malloc_unlock>
 800279c:	f104 000b 	add.w	r0, r4, #11
 80027a0:	1d23      	adds	r3, r4, #4
 80027a2:	f020 0007 	bic.w	r0, r0, #7
 80027a6:	1ac2      	subs	r2, r0, r3
 80027a8:	d0cc      	beq.n	8002744 <_malloc_r+0x20>
 80027aa:	1a1b      	subs	r3, r3, r0
 80027ac:	50a3      	str	r3, [r4, r2]
 80027ae:	e7c9      	b.n	8002744 <_malloc_r+0x20>
 80027b0:	4622      	mov	r2, r4
 80027b2:	6864      	ldr	r4, [r4, #4]
 80027b4:	e7cc      	b.n	8002750 <_malloc_r+0x2c>
 80027b6:	1cc4      	adds	r4, r0, #3
 80027b8:	f024 0403 	bic.w	r4, r4, #3
 80027bc:	42a0      	cmp	r0, r4
 80027be:	d0e3      	beq.n	8002788 <_malloc_r+0x64>
 80027c0:	1a21      	subs	r1, r4, r0
 80027c2:	4630      	mov	r0, r6
 80027c4:	f000 fa18 	bl	8002bf8 <_sbrk_r>
 80027c8:	3001      	adds	r0, #1
 80027ca:	d1dd      	bne.n	8002788 <_malloc_r+0x64>
 80027cc:	e7cf      	b.n	800276e <_malloc_r+0x4a>
 80027ce:	bf00      	nop
 80027d0:	20000200 	.word	0x20000200
 80027d4:	20000204 	.word	0x20000204

080027d8 <_scanf_float>:
 80027d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80027dc:	b087      	sub	sp, #28
 80027de:	4617      	mov	r7, r2
 80027e0:	9303      	str	r3, [sp, #12]
 80027e2:	688b      	ldr	r3, [r1, #8]
 80027e4:	1e5a      	subs	r2, r3, #1
 80027e6:	f5b2 7fae 	cmp.w	r2, #348	; 0x15c
 80027ea:	bf83      	ittte	hi
 80027ec:	f46f 75ae 	mvnhi.w	r5, #348	; 0x15c
 80027f0:	195b      	addhi	r3, r3, r5
 80027f2:	9302      	strhi	r3, [sp, #8]
 80027f4:	2300      	movls	r3, #0
 80027f6:	bf86      	itte	hi
 80027f8:	f240 135d 	movwhi	r3, #349	; 0x15d
 80027fc:	608b      	strhi	r3, [r1, #8]
 80027fe:	9302      	strls	r3, [sp, #8]
 8002800:	680b      	ldr	r3, [r1, #0]
 8002802:	468b      	mov	fp, r1
 8002804:	2500      	movs	r5, #0
 8002806:	f443 63f0 	orr.w	r3, r3, #1920	; 0x780
 800280a:	f84b 3b1c 	str.w	r3, [fp], #28
 800280e:	e9cd 5504 	strd	r5, r5, [sp, #16]
 8002812:	4680      	mov	r8, r0
 8002814:	460c      	mov	r4, r1
 8002816:	465e      	mov	r6, fp
 8002818:	46aa      	mov	sl, r5
 800281a:	46a9      	mov	r9, r5
 800281c:	9501      	str	r5, [sp, #4]
 800281e:	68a2      	ldr	r2, [r4, #8]
 8002820:	b152      	cbz	r2, 8002838 <_scanf_float+0x60>
 8002822:	683b      	ldr	r3, [r7, #0]
 8002824:	781b      	ldrb	r3, [r3, #0]
 8002826:	2b4e      	cmp	r3, #78	; 0x4e
 8002828:	d864      	bhi.n	80028f4 <_scanf_float+0x11c>
 800282a:	2b40      	cmp	r3, #64	; 0x40
 800282c:	d83c      	bhi.n	80028a8 <_scanf_float+0xd0>
 800282e:	f1a3 012b 	sub.w	r1, r3, #43	; 0x2b
 8002832:	b2c8      	uxtb	r0, r1
 8002834:	280e      	cmp	r0, #14
 8002836:	d93a      	bls.n	80028ae <_scanf_float+0xd6>
 8002838:	f1b9 0f00 	cmp.w	r9, #0
 800283c:	d003      	beq.n	8002846 <_scanf_float+0x6e>
 800283e:	6823      	ldr	r3, [r4, #0]
 8002840:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8002844:	6023      	str	r3, [r4, #0]
 8002846:	f10a 3aff 	add.w	sl, sl, #4294967295
 800284a:	f1ba 0f01 	cmp.w	sl, #1
 800284e:	f200 8113 	bhi.w	8002a78 <_scanf_float+0x2a0>
 8002852:	455e      	cmp	r6, fp
 8002854:	f200 8105 	bhi.w	8002a62 <_scanf_float+0x28a>
 8002858:	2501      	movs	r5, #1
 800285a:	4628      	mov	r0, r5
 800285c:	b007      	add	sp, #28
 800285e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002862:	f1a3 0261 	sub.w	r2, r3, #97	; 0x61
 8002866:	2a0d      	cmp	r2, #13
 8002868:	d8e6      	bhi.n	8002838 <_scanf_float+0x60>
 800286a:	a101      	add	r1, pc, #4	; (adr r1, 8002870 <_scanf_float+0x98>)
 800286c:	f851 f022 	ldr.w	pc, [r1, r2, lsl #2]
 8002870:	080029af 	.word	0x080029af
 8002874:	08002839 	.word	0x08002839
 8002878:	08002839 	.word	0x08002839
 800287c:	08002839 	.word	0x08002839
 8002880:	08002a0f 	.word	0x08002a0f
 8002884:	080029e7 	.word	0x080029e7
 8002888:	08002839 	.word	0x08002839
 800288c:	08002839 	.word	0x08002839
 8002890:	080029bd 	.word	0x080029bd
 8002894:	08002839 	.word	0x08002839
 8002898:	08002839 	.word	0x08002839
 800289c:	08002839 	.word	0x08002839
 80028a0:	08002839 	.word	0x08002839
 80028a4:	08002975 	.word	0x08002975
 80028a8:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 80028ac:	e7db      	b.n	8002866 <_scanf_float+0x8e>
 80028ae:	290e      	cmp	r1, #14
 80028b0:	d8c2      	bhi.n	8002838 <_scanf_float+0x60>
 80028b2:	a001      	add	r0, pc, #4	; (adr r0, 80028b8 <_scanf_float+0xe0>)
 80028b4:	f850 f021 	ldr.w	pc, [r0, r1, lsl #2]
 80028b8:	08002967 	.word	0x08002967
 80028bc:	08002839 	.word	0x08002839
 80028c0:	08002967 	.word	0x08002967
 80028c4:	080029fb 	.word	0x080029fb
 80028c8:	08002839 	.word	0x08002839
 80028cc:	08002915 	.word	0x08002915
 80028d0:	08002951 	.word	0x08002951
 80028d4:	08002951 	.word	0x08002951
 80028d8:	08002951 	.word	0x08002951
 80028dc:	08002951 	.word	0x08002951
 80028e0:	08002951 	.word	0x08002951
 80028e4:	08002951 	.word	0x08002951
 80028e8:	08002951 	.word	0x08002951
 80028ec:	08002951 	.word	0x08002951
 80028f0:	08002951 	.word	0x08002951
 80028f4:	2b6e      	cmp	r3, #110	; 0x6e
 80028f6:	d809      	bhi.n	800290c <_scanf_float+0x134>
 80028f8:	2b60      	cmp	r3, #96	; 0x60
 80028fa:	d8b2      	bhi.n	8002862 <_scanf_float+0x8a>
 80028fc:	2b54      	cmp	r3, #84	; 0x54
 80028fe:	d077      	beq.n	80029f0 <_scanf_float+0x218>
 8002900:	2b59      	cmp	r3, #89	; 0x59
 8002902:	d199      	bne.n	8002838 <_scanf_float+0x60>
 8002904:	2d07      	cmp	r5, #7
 8002906:	d197      	bne.n	8002838 <_scanf_float+0x60>
 8002908:	2508      	movs	r5, #8
 800290a:	e029      	b.n	8002960 <_scanf_float+0x188>
 800290c:	2b74      	cmp	r3, #116	; 0x74
 800290e:	d06f      	beq.n	80029f0 <_scanf_float+0x218>
 8002910:	2b79      	cmp	r3, #121	; 0x79
 8002912:	e7f6      	b.n	8002902 <_scanf_float+0x12a>
 8002914:	6821      	ldr	r1, [r4, #0]
 8002916:	05c8      	lsls	r0, r1, #23
 8002918:	d51a      	bpl.n	8002950 <_scanf_float+0x178>
 800291a:	9b02      	ldr	r3, [sp, #8]
 800291c:	f021 0180 	bic.w	r1, r1, #128	; 0x80
 8002920:	6021      	str	r1, [r4, #0]
 8002922:	f109 0901 	add.w	r9, r9, #1
 8002926:	b11b      	cbz	r3, 8002930 <_scanf_float+0x158>
 8002928:	3b01      	subs	r3, #1
 800292a:	3201      	adds	r2, #1
 800292c:	9302      	str	r3, [sp, #8]
 800292e:	60a2      	str	r2, [r4, #8]
 8002930:	68a3      	ldr	r3, [r4, #8]
 8002932:	3b01      	subs	r3, #1
 8002934:	60a3      	str	r3, [r4, #8]
 8002936:	6923      	ldr	r3, [r4, #16]
 8002938:	3301      	adds	r3, #1
 800293a:	6123      	str	r3, [r4, #16]
 800293c:	687b      	ldr	r3, [r7, #4]
 800293e:	3b01      	subs	r3, #1
 8002940:	2b00      	cmp	r3, #0
 8002942:	607b      	str	r3, [r7, #4]
 8002944:	f340 8084 	ble.w	8002a50 <_scanf_float+0x278>
 8002948:	683b      	ldr	r3, [r7, #0]
 800294a:	3301      	adds	r3, #1
 800294c:	603b      	str	r3, [r7, #0]
 800294e:	e766      	b.n	800281e <_scanf_float+0x46>
 8002950:	eb1a 0f05 	cmn.w	sl, r5
 8002954:	f47f af70 	bne.w	8002838 <_scanf_float+0x60>
 8002958:	6822      	ldr	r2, [r4, #0]
 800295a:	f422 72c0 	bic.w	r2, r2, #384	; 0x180
 800295e:	6022      	str	r2, [r4, #0]
 8002960:	f806 3b01 	strb.w	r3, [r6], #1
 8002964:	e7e4      	b.n	8002930 <_scanf_float+0x158>
 8002966:	6822      	ldr	r2, [r4, #0]
 8002968:	0610      	lsls	r0, r2, #24
 800296a:	f57f af65 	bpl.w	8002838 <_scanf_float+0x60>
 800296e:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8002972:	e7f4      	b.n	800295e <_scanf_float+0x186>
 8002974:	f1ba 0f00 	cmp.w	sl, #0
 8002978:	d10e      	bne.n	8002998 <_scanf_float+0x1c0>
 800297a:	f1b9 0f00 	cmp.w	r9, #0
 800297e:	d10e      	bne.n	800299e <_scanf_float+0x1c6>
 8002980:	6822      	ldr	r2, [r4, #0]
 8002982:	f402 61e0 	and.w	r1, r2, #1792	; 0x700
 8002986:	f5b1 6fe0 	cmp.w	r1, #1792	; 0x700
 800298a:	d108      	bne.n	800299e <_scanf_float+0x1c6>
 800298c:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
 8002990:	6022      	str	r2, [r4, #0]
 8002992:	f04f 0a01 	mov.w	sl, #1
 8002996:	e7e3      	b.n	8002960 <_scanf_float+0x188>
 8002998:	f1ba 0f02 	cmp.w	sl, #2
 800299c:	d055      	beq.n	8002a4a <_scanf_float+0x272>
 800299e:	2d01      	cmp	r5, #1
 80029a0:	d002      	beq.n	80029a8 <_scanf_float+0x1d0>
 80029a2:	2d04      	cmp	r5, #4
 80029a4:	f47f af48 	bne.w	8002838 <_scanf_float+0x60>
 80029a8:	3501      	adds	r5, #1
 80029aa:	b2ed      	uxtb	r5, r5
 80029ac:	e7d8      	b.n	8002960 <_scanf_float+0x188>
 80029ae:	f1ba 0f01 	cmp.w	sl, #1
 80029b2:	f47f af41 	bne.w	8002838 <_scanf_float+0x60>
 80029b6:	f04f 0a02 	mov.w	sl, #2
 80029ba:	e7d1      	b.n	8002960 <_scanf_float+0x188>
 80029bc:	b97d      	cbnz	r5, 80029de <_scanf_float+0x206>
 80029be:	f1b9 0f00 	cmp.w	r9, #0
 80029c2:	f47f af3c 	bne.w	800283e <_scanf_float+0x66>
 80029c6:	6822      	ldr	r2, [r4, #0]
 80029c8:	f402 61e0 	and.w	r1, r2, #1792	; 0x700
 80029cc:	f5b1 6fe0 	cmp.w	r1, #1792	; 0x700
 80029d0:	f47f af39 	bne.w	8002846 <_scanf_float+0x6e>
 80029d4:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
 80029d8:	6022      	str	r2, [r4, #0]
 80029da:	2501      	movs	r5, #1
 80029dc:	e7c0      	b.n	8002960 <_scanf_float+0x188>
 80029de:	2d03      	cmp	r5, #3
 80029e0:	d0e2      	beq.n	80029a8 <_scanf_float+0x1d0>
 80029e2:	2d05      	cmp	r5, #5
 80029e4:	e7de      	b.n	80029a4 <_scanf_float+0x1cc>
 80029e6:	2d02      	cmp	r5, #2
 80029e8:	f47f af26 	bne.w	8002838 <_scanf_float+0x60>
 80029ec:	2503      	movs	r5, #3
 80029ee:	e7b7      	b.n	8002960 <_scanf_float+0x188>
 80029f0:	2d06      	cmp	r5, #6
 80029f2:	f47f af21 	bne.w	8002838 <_scanf_float+0x60>
 80029f6:	2507      	movs	r5, #7
 80029f8:	e7b2      	b.n	8002960 <_scanf_float+0x188>
 80029fa:	6822      	ldr	r2, [r4, #0]
 80029fc:	0591      	lsls	r1, r2, #22
 80029fe:	f57f af1b 	bpl.w	8002838 <_scanf_float+0x60>
 8002a02:	f422 7220 	bic.w	r2, r2, #640	; 0x280
 8002a06:	6022      	str	r2, [r4, #0]
 8002a08:	f8cd 9004 	str.w	r9, [sp, #4]
 8002a0c:	e7a8      	b.n	8002960 <_scanf_float+0x188>
 8002a0e:	6822      	ldr	r2, [r4, #0]
 8002a10:	f402 61a0 	and.w	r1, r2, #1280	; 0x500
 8002a14:	f5b1 6f80 	cmp.w	r1, #1024	; 0x400
 8002a18:	d006      	beq.n	8002a28 <_scanf_float+0x250>
 8002a1a:	0550      	lsls	r0, r2, #21
 8002a1c:	f57f af0c 	bpl.w	8002838 <_scanf_float+0x60>
 8002a20:	f1b9 0f00 	cmp.w	r9, #0
 8002a24:	f43f af0f 	beq.w	8002846 <_scanf_float+0x6e>
 8002a28:	0591      	lsls	r1, r2, #22
 8002a2a:	bf58      	it	pl
 8002a2c:	9901      	ldrpl	r1, [sp, #4]
 8002a2e:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
 8002a32:	bf58      	it	pl
 8002a34:	eba9 0101 	subpl.w	r1, r9, r1
 8002a38:	f442 72c0 	orr.w	r2, r2, #384	; 0x180
 8002a3c:	bf58      	it	pl
 8002a3e:	e9cd 1604 	strdpl	r1, r6, [sp, #16]
 8002a42:	6022      	str	r2, [r4, #0]
 8002a44:	f04f 0900 	mov.w	r9, #0
 8002a48:	e78a      	b.n	8002960 <_scanf_float+0x188>
 8002a4a:	f04f 0a03 	mov.w	sl, #3
 8002a4e:	e787      	b.n	8002960 <_scanf_float+0x188>
 8002a50:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
 8002a54:	4639      	mov	r1, r7
 8002a56:	4640      	mov	r0, r8
 8002a58:	4798      	blx	r3
 8002a5a:	2800      	cmp	r0, #0
 8002a5c:	f43f aedf 	beq.w	800281e <_scanf_float+0x46>
 8002a60:	e6ea      	b.n	8002838 <_scanf_float+0x60>
 8002a62:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8002a66:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 8002a6a:	463a      	mov	r2, r7
 8002a6c:	4640      	mov	r0, r8
 8002a6e:	4798      	blx	r3
 8002a70:	6923      	ldr	r3, [r4, #16]
 8002a72:	3b01      	subs	r3, #1
 8002a74:	6123      	str	r3, [r4, #16]
 8002a76:	e6ec      	b.n	8002852 <_scanf_float+0x7a>
 8002a78:	1e6b      	subs	r3, r5, #1
 8002a7a:	2b06      	cmp	r3, #6
 8002a7c:	d825      	bhi.n	8002aca <_scanf_float+0x2f2>
 8002a7e:	2d02      	cmp	r5, #2
 8002a80:	d836      	bhi.n	8002af0 <_scanf_float+0x318>
 8002a82:	455e      	cmp	r6, fp
 8002a84:	f67f aee8 	bls.w	8002858 <_scanf_float+0x80>
 8002a88:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8002a8c:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 8002a90:	463a      	mov	r2, r7
 8002a92:	4640      	mov	r0, r8
 8002a94:	4798      	blx	r3
 8002a96:	6923      	ldr	r3, [r4, #16]
 8002a98:	3b01      	subs	r3, #1
 8002a9a:	6123      	str	r3, [r4, #16]
 8002a9c:	e7f1      	b.n	8002a82 <_scanf_float+0x2aa>
 8002a9e:	9802      	ldr	r0, [sp, #8]
 8002aa0:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8002aa4:	f810 1d01 	ldrb.w	r1, [r0, #-1]!
 8002aa8:	9002      	str	r0, [sp, #8]
 8002aaa:	463a      	mov	r2, r7
 8002aac:	4640      	mov	r0, r8
 8002aae:	4798      	blx	r3
 8002ab0:	6923      	ldr	r3, [r4, #16]
 8002ab2:	3b01      	subs	r3, #1
 8002ab4:	6123      	str	r3, [r4, #16]
 8002ab6:	f10a 3aff 	add.w	sl, sl, #4294967295
 8002aba:	fa5f fa8a 	uxtb.w	sl, sl
 8002abe:	f1ba 0f02 	cmp.w	sl, #2
 8002ac2:	d1ec      	bne.n	8002a9e <_scanf_float+0x2c6>
 8002ac4:	3d03      	subs	r5, #3
 8002ac6:	b2ed      	uxtb	r5, r5
 8002ac8:	1b76      	subs	r6, r6, r5
 8002aca:	6823      	ldr	r3, [r4, #0]
 8002acc:	05da      	lsls	r2, r3, #23
 8002ace:	d52f      	bpl.n	8002b30 <_scanf_float+0x358>
 8002ad0:	055b      	lsls	r3, r3, #21
 8002ad2:	d510      	bpl.n	8002af6 <_scanf_float+0x31e>
 8002ad4:	455e      	cmp	r6, fp
 8002ad6:	f67f aebf 	bls.w	8002858 <_scanf_float+0x80>
 8002ada:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8002ade:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 8002ae2:	463a      	mov	r2, r7
 8002ae4:	4640      	mov	r0, r8
 8002ae6:	4798      	blx	r3
 8002ae8:	6923      	ldr	r3, [r4, #16]
 8002aea:	3b01      	subs	r3, #1
 8002aec:	6123      	str	r3, [r4, #16]
 8002aee:	e7f1      	b.n	8002ad4 <_scanf_float+0x2fc>
 8002af0:	46aa      	mov	sl, r5
 8002af2:	9602      	str	r6, [sp, #8]
 8002af4:	e7df      	b.n	8002ab6 <_scanf_float+0x2de>
 8002af6:	f816 1c01 	ldrb.w	r1, [r6, #-1]
 8002afa:	6923      	ldr	r3, [r4, #16]
 8002afc:	2965      	cmp	r1, #101	; 0x65
 8002afe:	f103 33ff 	add.w	r3, r3, #4294967295
 8002b02:	f106 35ff 	add.w	r5, r6, #4294967295
 8002b06:	6123      	str	r3, [r4, #16]
 8002b08:	d00c      	beq.n	8002b24 <_scanf_float+0x34c>
 8002b0a:	2945      	cmp	r1, #69	; 0x45
 8002b0c:	d00a      	beq.n	8002b24 <_scanf_float+0x34c>
 8002b0e:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8002b12:	463a      	mov	r2, r7
 8002b14:	4640      	mov	r0, r8
 8002b16:	4798      	blx	r3
 8002b18:	6923      	ldr	r3, [r4, #16]
 8002b1a:	f816 1c02 	ldrb.w	r1, [r6, #-2]
 8002b1e:	3b01      	subs	r3, #1
 8002b20:	1eb5      	subs	r5, r6, #2
 8002b22:	6123      	str	r3, [r4, #16]
 8002b24:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8002b28:	463a      	mov	r2, r7
 8002b2a:	4640      	mov	r0, r8
 8002b2c:	4798      	blx	r3
 8002b2e:	462e      	mov	r6, r5
 8002b30:	6825      	ldr	r5, [r4, #0]
 8002b32:	f015 0510 	ands.w	r5, r5, #16
 8002b36:	d158      	bne.n	8002bea <_scanf_float+0x412>
 8002b38:	7035      	strb	r5, [r6, #0]
 8002b3a:	6823      	ldr	r3, [r4, #0]
 8002b3c:	f403 63c0 	and.w	r3, r3, #1536	; 0x600
 8002b40:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8002b44:	d11c      	bne.n	8002b80 <_scanf_float+0x3a8>
 8002b46:	9b01      	ldr	r3, [sp, #4]
 8002b48:	454b      	cmp	r3, r9
 8002b4a:	eba3 0209 	sub.w	r2, r3, r9
 8002b4e:	d124      	bne.n	8002b9a <_scanf_float+0x3c2>
 8002b50:	2200      	movs	r2, #0
 8002b52:	4659      	mov	r1, fp
 8002b54:	4640      	mov	r0, r8
 8002b56:	f000 ff1d 	bl	8003994 <_strtod_r>
 8002b5a:	9b03      	ldr	r3, [sp, #12]
 8002b5c:	6821      	ldr	r1, [r4, #0]
 8002b5e:	681b      	ldr	r3, [r3, #0]
 8002b60:	f011 0f02 	tst.w	r1, #2
 8002b64:	ec57 6b10 	vmov	r6, r7, d0
 8002b68:	f103 0204 	add.w	r2, r3, #4
 8002b6c:	d020      	beq.n	8002bb0 <_scanf_float+0x3d8>
 8002b6e:	9903      	ldr	r1, [sp, #12]
 8002b70:	600a      	str	r2, [r1, #0]
 8002b72:	681b      	ldr	r3, [r3, #0]
 8002b74:	e9c3 6700 	strd	r6, r7, [r3]
 8002b78:	68e3      	ldr	r3, [r4, #12]
 8002b7a:	3301      	adds	r3, #1
 8002b7c:	60e3      	str	r3, [r4, #12]
 8002b7e:	e66c      	b.n	800285a <_scanf_float+0x82>
 8002b80:	9b04      	ldr	r3, [sp, #16]
 8002b82:	2b00      	cmp	r3, #0
 8002b84:	d0e4      	beq.n	8002b50 <_scanf_float+0x378>
 8002b86:	9905      	ldr	r1, [sp, #20]
 8002b88:	230a      	movs	r3, #10
 8002b8a:	462a      	mov	r2, r5
 8002b8c:	3101      	adds	r1, #1
 8002b8e:	4640      	mov	r0, r8
 8002b90:	f000 ff8a 	bl	8003aa8 <_strtol_r>
 8002b94:	9b04      	ldr	r3, [sp, #16]
 8002b96:	9e05      	ldr	r6, [sp, #20]
 8002b98:	1ac2      	subs	r2, r0, r3
 8002b9a:	f204 136f 	addw	r3, r4, #367	; 0x16f
 8002b9e:	429e      	cmp	r6, r3
 8002ba0:	bf28      	it	cs
 8002ba2:	f504 76b7 	addcs.w	r6, r4, #366	; 0x16e
 8002ba6:	4912      	ldr	r1, [pc, #72]	; (8002bf0 <_scanf_float+0x418>)
 8002ba8:	4630      	mov	r0, r6
 8002baa:	f000 f83b 	bl	8002c24 <siprintf>
 8002bae:	e7cf      	b.n	8002b50 <_scanf_float+0x378>
 8002bb0:	f011 0f04 	tst.w	r1, #4
 8002bb4:	9903      	ldr	r1, [sp, #12]
 8002bb6:	600a      	str	r2, [r1, #0]
 8002bb8:	d1db      	bne.n	8002b72 <_scanf_float+0x39a>
 8002bba:	f8d3 8000 	ldr.w	r8, [r3]
 8002bbe:	ee10 2a10 	vmov	r2, s0
 8002bc2:	ee10 0a10 	vmov	r0, s0
 8002bc6:	463b      	mov	r3, r7
 8002bc8:	4639      	mov	r1, r7
 8002bca:	f7fd ffb7 	bl	8000b3c <__aeabi_dcmpun>
 8002bce:	b128      	cbz	r0, 8002bdc <_scanf_float+0x404>
 8002bd0:	4808      	ldr	r0, [pc, #32]	; (8002bf4 <_scanf_float+0x41c>)
 8002bd2:	f000 f821 	bl	8002c18 <nanf>
 8002bd6:	ed88 0a00 	vstr	s0, [r8]
 8002bda:	e7cd      	b.n	8002b78 <_scanf_float+0x3a0>
 8002bdc:	4630      	mov	r0, r6
 8002bde:	4639      	mov	r1, r7
 8002be0:	f7fe f80a 	bl	8000bf8 <__aeabi_d2f>
 8002be4:	f8c8 0000 	str.w	r0, [r8]
 8002be8:	e7c6      	b.n	8002b78 <_scanf_float+0x3a0>
 8002bea:	2500      	movs	r5, #0
 8002bec:	e635      	b.n	800285a <_scanf_float+0x82>
 8002bee:	bf00      	nop
 8002bf0:	08007dc8 	.word	0x08007dc8
 8002bf4:	08007e6b 	.word	0x08007e6b

08002bf8 <_sbrk_r>:
 8002bf8:	b538      	push	{r3, r4, r5, lr}
 8002bfa:	4d06      	ldr	r5, [pc, #24]	; (8002c14 <_sbrk_r+0x1c>)
 8002bfc:	2300      	movs	r3, #0
 8002bfe:	4604      	mov	r4, r0
 8002c00:	4608      	mov	r0, r1
 8002c02:	602b      	str	r3, [r5, #0]
 8002c04:	f7fe fcac 	bl	8001560 <_sbrk>
 8002c08:	1c43      	adds	r3, r0, #1
 8002c0a:	d102      	bne.n	8002c12 <_sbrk_r+0x1a>
 8002c0c:	682b      	ldr	r3, [r5, #0]
 8002c0e:	b103      	cbz	r3, 8002c12 <_sbrk_r+0x1a>
 8002c10:	6023      	str	r3, [r4, #0]
 8002c12:	bd38      	pop	{r3, r4, r5, pc}
 8002c14:	20000218 	.word	0x20000218

08002c18 <nanf>:
 8002c18:	ed9f 0a01 	vldr	s0, [pc, #4]	; 8002c20 <nanf+0x8>
 8002c1c:	4770      	bx	lr
 8002c1e:	bf00      	nop
 8002c20:	7fc00000 	.word	0x7fc00000

08002c24 <siprintf>:
 8002c24:	b40e      	push	{r1, r2, r3}
 8002c26:	b500      	push	{lr}
 8002c28:	b09c      	sub	sp, #112	; 0x70
 8002c2a:	ab1d      	add	r3, sp, #116	; 0x74
 8002c2c:	9002      	str	r0, [sp, #8]
 8002c2e:	9006      	str	r0, [sp, #24]
 8002c30:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 8002c34:	4809      	ldr	r0, [pc, #36]	; (8002c5c <siprintf+0x38>)
 8002c36:	9107      	str	r1, [sp, #28]
 8002c38:	9104      	str	r1, [sp, #16]
 8002c3a:	4909      	ldr	r1, [pc, #36]	; (8002c60 <siprintf+0x3c>)
 8002c3c:	f853 2b04 	ldr.w	r2, [r3], #4
 8002c40:	9105      	str	r1, [sp, #20]
 8002c42:	6800      	ldr	r0, [r0, #0]
 8002c44:	9301      	str	r3, [sp, #4]
 8002c46:	a902      	add	r1, sp, #8
 8002c48:	f002 f85a 	bl	8004d00 <_svfiprintf_r>
 8002c4c:	9b02      	ldr	r3, [sp, #8]
 8002c4e:	2200      	movs	r2, #0
 8002c50:	701a      	strb	r2, [r3, #0]
 8002c52:	b01c      	add	sp, #112	; 0x70
 8002c54:	f85d eb04 	ldr.w	lr, [sp], #4
 8002c58:	b003      	add	sp, #12
 8002c5a:	4770      	bx	lr
 8002c5c:	20000008 	.word	0x20000008
 8002c60:	ffff0208 	.word	0xffff0208

08002c64 <siscanf>:
 8002c64:	b40e      	push	{r1, r2, r3}
 8002c66:	b510      	push	{r4, lr}
 8002c68:	b09f      	sub	sp, #124	; 0x7c
 8002c6a:	ac21      	add	r4, sp, #132	; 0x84
 8002c6c:	f44f 7101 	mov.w	r1, #516	; 0x204
 8002c70:	f854 2b04 	ldr.w	r2, [r4], #4
 8002c74:	9201      	str	r2, [sp, #4]
 8002c76:	f8ad 101c 	strh.w	r1, [sp, #28]
 8002c7a:	9004      	str	r0, [sp, #16]
 8002c7c:	9008      	str	r0, [sp, #32]
 8002c7e:	f7fd faaf 	bl	80001e0 <strlen>
 8002c82:	4b0c      	ldr	r3, [pc, #48]	; (8002cb4 <siscanf+0x50>)
 8002c84:	9005      	str	r0, [sp, #20]
 8002c86:	9009      	str	r0, [sp, #36]	; 0x24
 8002c88:	930d      	str	r3, [sp, #52]	; 0x34
 8002c8a:	480b      	ldr	r0, [pc, #44]	; (8002cb8 <siscanf+0x54>)
 8002c8c:	9a01      	ldr	r2, [sp, #4]
 8002c8e:	6800      	ldr	r0, [r0, #0]
 8002c90:	9403      	str	r4, [sp, #12]
 8002c92:	2300      	movs	r3, #0
 8002c94:	9311      	str	r3, [sp, #68]	; 0x44
 8002c96:	9316      	str	r3, [sp, #88]	; 0x58
 8002c98:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002c9c:	f8ad 301e 	strh.w	r3, [sp, #30]
 8002ca0:	a904      	add	r1, sp, #16
 8002ca2:	4623      	mov	r3, r4
 8002ca4:	f002 f986 	bl	8004fb4 <__ssvfiscanf_r>
 8002ca8:	b01f      	add	sp, #124	; 0x7c
 8002caa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002cae:	b003      	add	sp, #12
 8002cb0:	4770      	bx	lr
 8002cb2:	bf00      	nop
 8002cb4:	08002cdf 	.word	0x08002cdf
 8002cb8:	20000008 	.word	0x20000008

08002cbc <__sread>:
 8002cbc:	b510      	push	{r4, lr}
 8002cbe:	460c      	mov	r4, r1
 8002cc0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8002cc4:	f002 ff28 	bl	8005b18 <_read_r>
 8002cc8:	2800      	cmp	r0, #0
 8002cca:	bfab      	itete	ge
 8002ccc:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8002cce:	89a3      	ldrhlt	r3, [r4, #12]
 8002cd0:	181b      	addge	r3, r3, r0
 8002cd2:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8002cd6:	bfac      	ite	ge
 8002cd8:	6563      	strge	r3, [r4, #84]	; 0x54
 8002cda:	81a3      	strhlt	r3, [r4, #12]
 8002cdc:	bd10      	pop	{r4, pc}

08002cde <__seofread>:
 8002cde:	2000      	movs	r0, #0
 8002ce0:	4770      	bx	lr

08002ce2 <__swrite>:
 8002ce2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002ce6:	461f      	mov	r7, r3
 8002ce8:	898b      	ldrh	r3, [r1, #12]
 8002cea:	05db      	lsls	r3, r3, #23
 8002cec:	4605      	mov	r5, r0
 8002cee:	460c      	mov	r4, r1
 8002cf0:	4616      	mov	r6, r2
 8002cf2:	d505      	bpl.n	8002d00 <__swrite+0x1e>
 8002cf4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8002cf8:	2302      	movs	r3, #2
 8002cfa:	2200      	movs	r2, #0
 8002cfc:	f001 fa9c 	bl	8004238 <_lseek_r>
 8002d00:	89a3      	ldrh	r3, [r4, #12]
 8002d02:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8002d06:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8002d0a:	81a3      	strh	r3, [r4, #12]
 8002d0c:	4632      	mov	r2, r6
 8002d0e:	463b      	mov	r3, r7
 8002d10:	4628      	mov	r0, r5
 8002d12:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8002d16:	f000 bec9 	b.w	8003aac <_write_r>

08002d1a <__sseek>:
 8002d1a:	b510      	push	{r4, lr}
 8002d1c:	460c      	mov	r4, r1
 8002d1e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8002d22:	f001 fa89 	bl	8004238 <_lseek_r>
 8002d26:	1c43      	adds	r3, r0, #1
 8002d28:	89a3      	ldrh	r3, [r4, #12]
 8002d2a:	bf15      	itete	ne
 8002d2c:	6560      	strne	r0, [r4, #84]	; 0x54
 8002d2e:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8002d32:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8002d36:	81a3      	strheq	r3, [r4, #12]
 8002d38:	bf18      	it	ne
 8002d3a:	81a3      	strhne	r3, [r4, #12]
 8002d3c:	bd10      	pop	{r4, pc}

08002d3e <__sclose>:
 8002d3e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8002d42:	f000 bee3 	b.w	8003b0c <_close_r>

08002d46 <sulp>:
 8002d46:	b570      	push	{r4, r5, r6, lr}
 8002d48:	4604      	mov	r4, r0
 8002d4a:	460d      	mov	r5, r1
 8002d4c:	ec45 4b10 	vmov	d0, r4, r5
 8002d50:	4616      	mov	r6, r2
 8002d52:	f001 fe1b 	bl	800498c <__ulp>
 8002d56:	ec51 0b10 	vmov	r0, r1, d0
 8002d5a:	b17e      	cbz	r6, 8002d7c <sulp+0x36>
 8002d5c:	f3c5 530a 	ubfx	r3, r5, #20, #11
 8002d60:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 8002d64:	2b00      	cmp	r3, #0
 8002d66:	dd09      	ble.n	8002d7c <sulp+0x36>
 8002d68:	051b      	lsls	r3, r3, #20
 8002d6a:	f103 557f 	add.w	r5, r3, #1069547520	; 0x3fc00000
 8002d6e:	2400      	movs	r4, #0
 8002d70:	f505 1540 	add.w	r5, r5, #3145728	; 0x300000
 8002d74:	4622      	mov	r2, r4
 8002d76:	462b      	mov	r3, r5
 8002d78:	f7fd fc46 	bl	8000608 <__aeabi_dmul>
 8002d7c:	bd70      	pop	{r4, r5, r6, pc}
	...

08002d80 <_strtod_l>:
 8002d80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002d84:	b0a3      	sub	sp, #140	; 0x8c
 8002d86:	461f      	mov	r7, r3
 8002d88:	2300      	movs	r3, #0
 8002d8a:	931e      	str	r3, [sp, #120]	; 0x78
 8002d8c:	4ba4      	ldr	r3, [pc, #656]	; (8003020 <_strtod_l+0x2a0>)
 8002d8e:	9219      	str	r2, [sp, #100]	; 0x64
 8002d90:	681b      	ldr	r3, [r3, #0]
 8002d92:	9307      	str	r3, [sp, #28]
 8002d94:	4604      	mov	r4, r0
 8002d96:	4618      	mov	r0, r3
 8002d98:	4688      	mov	r8, r1
 8002d9a:	f7fd fa21 	bl	80001e0 <strlen>
 8002d9e:	f04f 0a00 	mov.w	sl, #0
 8002da2:	4605      	mov	r5, r0
 8002da4:	f04f 0b00 	mov.w	fp, #0
 8002da8:	f8cd 8074 	str.w	r8, [sp, #116]	; 0x74
 8002dac:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8002dae:	781a      	ldrb	r2, [r3, #0]
 8002db0:	2a2b      	cmp	r2, #43	; 0x2b
 8002db2:	d04c      	beq.n	8002e4e <_strtod_l+0xce>
 8002db4:	d839      	bhi.n	8002e2a <_strtod_l+0xaa>
 8002db6:	2a0d      	cmp	r2, #13
 8002db8:	d832      	bhi.n	8002e20 <_strtod_l+0xa0>
 8002dba:	2a08      	cmp	r2, #8
 8002dbc:	d832      	bhi.n	8002e24 <_strtod_l+0xa4>
 8002dbe:	2a00      	cmp	r2, #0
 8002dc0:	d03c      	beq.n	8002e3c <_strtod_l+0xbc>
 8002dc2:	2300      	movs	r3, #0
 8002dc4:	930e      	str	r3, [sp, #56]	; 0x38
 8002dc6:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 8002dc8:	7833      	ldrb	r3, [r6, #0]
 8002dca:	2b30      	cmp	r3, #48	; 0x30
 8002dcc:	f040 80b4 	bne.w	8002f38 <_strtod_l+0x1b8>
 8002dd0:	7873      	ldrb	r3, [r6, #1]
 8002dd2:	f003 03df 	and.w	r3, r3, #223	; 0xdf
 8002dd6:	2b58      	cmp	r3, #88	; 0x58
 8002dd8:	d16c      	bne.n	8002eb4 <_strtod_l+0x134>
 8002dda:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8002ddc:	9301      	str	r3, [sp, #4]
 8002dde:	ab1e      	add	r3, sp, #120	; 0x78
 8002de0:	9702      	str	r7, [sp, #8]
 8002de2:	9300      	str	r3, [sp, #0]
 8002de4:	4a8f      	ldr	r2, [pc, #572]	; (8003024 <_strtod_l+0x2a4>)
 8002de6:	ab1f      	add	r3, sp, #124	; 0x7c
 8002de8:	a91d      	add	r1, sp, #116	; 0x74
 8002dea:	4620      	mov	r0, r4
 8002dec:	f000 ff18 	bl	8003c20 <__gethex>
 8002df0:	f010 0707 	ands.w	r7, r0, #7
 8002df4:	4605      	mov	r5, r0
 8002df6:	d005      	beq.n	8002e04 <_strtod_l+0x84>
 8002df8:	2f06      	cmp	r7, #6
 8002dfa:	d12a      	bne.n	8002e52 <_strtod_l+0xd2>
 8002dfc:	3601      	adds	r6, #1
 8002dfe:	2300      	movs	r3, #0
 8002e00:	961d      	str	r6, [sp, #116]	; 0x74
 8002e02:	930e      	str	r3, [sp, #56]	; 0x38
 8002e04:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8002e06:	2b00      	cmp	r3, #0
 8002e08:	f040 8596 	bne.w	8003938 <_strtod_l+0xbb8>
 8002e0c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8002e0e:	b1db      	cbz	r3, 8002e48 <_strtod_l+0xc8>
 8002e10:	4652      	mov	r2, sl
 8002e12:	f10b 4300 	add.w	r3, fp, #2147483648	; 0x80000000
 8002e16:	ec43 2b10 	vmov	d0, r2, r3
 8002e1a:	b023      	add	sp, #140	; 0x8c
 8002e1c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002e20:	2a20      	cmp	r2, #32
 8002e22:	d1ce      	bne.n	8002dc2 <_strtod_l+0x42>
 8002e24:	3301      	adds	r3, #1
 8002e26:	931d      	str	r3, [sp, #116]	; 0x74
 8002e28:	e7c0      	b.n	8002dac <_strtod_l+0x2c>
 8002e2a:	2a2d      	cmp	r2, #45	; 0x2d
 8002e2c:	d1c9      	bne.n	8002dc2 <_strtod_l+0x42>
 8002e2e:	2201      	movs	r2, #1
 8002e30:	920e      	str	r2, [sp, #56]	; 0x38
 8002e32:	1c5a      	adds	r2, r3, #1
 8002e34:	921d      	str	r2, [sp, #116]	; 0x74
 8002e36:	785b      	ldrb	r3, [r3, #1]
 8002e38:	2b00      	cmp	r3, #0
 8002e3a:	d1c4      	bne.n	8002dc6 <_strtod_l+0x46>
 8002e3c:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8002e3e:	f8cd 8074 	str.w	r8, [sp, #116]	; 0x74
 8002e42:	2b00      	cmp	r3, #0
 8002e44:	f040 8576 	bne.w	8003934 <_strtod_l+0xbb4>
 8002e48:	4652      	mov	r2, sl
 8002e4a:	465b      	mov	r3, fp
 8002e4c:	e7e3      	b.n	8002e16 <_strtod_l+0x96>
 8002e4e:	2200      	movs	r2, #0
 8002e50:	e7ee      	b.n	8002e30 <_strtod_l+0xb0>
 8002e52:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8002e54:	b13a      	cbz	r2, 8002e66 <_strtod_l+0xe6>
 8002e56:	2135      	movs	r1, #53	; 0x35
 8002e58:	a820      	add	r0, sp, #128	; 0x80
 8002e5a:	f001 fea2 	bl	8004ba2 <__copybits>
 8002e5e:	991e      	ldr	r1, [sp, #120]	; 0x78
 8002e60:	4620      	mov	r0, r4
 8002e62:	f001 fa67 	bl	8004334 <_Bfree>
 8002e66:	3f01      	subs	r7, #1
 8002e68:	2f05      	cmp	r7, #5
 8002e6a:	d807      	bhi.n	8002e7c <_strtod_l+0xfc>
 8002e6c:	e8df f007 	tbb	[pc, r7]
 8002e70:	1d180b0e 	.word	0x1d180b0e
 8002e74:	030e      	.short	0x030e
 8002e76:	f04f 0b00 	mov.w	fp, #0
 8002e7a:	46da      	mov	sl, fp
 8002e7c:	0728      	lsls	r0, r5, #28
 8002e7e:	d5c1      	bpl.n	8002e04 <_strtod_l+0x84>
 8002e80:	f04b 4b00 	orr.w	fp, fp, #2147483648	; 0x80000000
 8002e84:	e7be      	b.n	8002e04 <_strtod_l+0x84>
 8002e86:	e9dd ab20 	ldrd	sl, fp, [sp, #128]	; 0x80
 8002e8a:	e7f7      	b.n	8002e7c <_strtod_l+0xfc>
 8002e8c:	e9dd a320 	ldrd	sl, r3, [sp, #128]	; 0x80
 8002e90:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 8002e92:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 8002e96:	f202 4233 	addw	r2, r2, #1075	; 0x433
 8002e9a:	ea43 5b02 	orr.w	fp, r3, r2, lsl #20
 8002e9e:	e7ed      	b.n	8002e7c <_strtod_l+0xfc>
 8002ea0:	f8df b184 	ldr.w	fp, [pc, #388]	; 8003028 <_strtod_l+0x2a8>
 8002ea4:	f04f 0a00 	mov.w	sl, #0
 8002ea8:	e7e8      	b.n	8002e7c <_strtod_l+0xfc>
 8002eaa:	f06f 4b00 	mvn.w	fp, #2147483648	; 0x80000000
 8002eae:	f04f 3aff 	mov.w	sl, #4294967295
 8002eb2:	e7e3      	b.n	8002e7c <_strtod_l+0xfc>
 8002eb4:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8002eb6:	1c5a      	adds	r2, r3, #1
 8002eb8:	921d      	str	r2, [sp, #116]	; 0x74
 8002eba:	785b      	ldrb	r3, [r3, #1]
 8002ebc:	2b30      	cmp	r3, #48	; 0x30
 8002ebe:	d0f9      	beq.n	8002eb4 <_strtod_l+0x134>
 8002ec0:	2b00      	cmp	r3, #0
 8002ec2:	d09f      	beq.n	8002e04 <_strtod_l+0x84>
 8002ec4:	2301      	movs	r3, #1
 8002ec6:	f04f 0900 	mov.w	r9, #0
 8002eca:	9304      	str	r3, [sp, #16]
 8002ecc:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8002ece:	930a      	str	r3, [sp, #40]	; 0x28
 8002ed0:	f8cd 9024 	str.w	r9, [sp, #36]	; 0x24
 8002ed4:	464f      	mov	r7, r9
 8002ed6:	220a      	movs	r2, #10
 8002ed8:	981d      	ldr	r0, [sp, #116]	; 0x74
 8002eda:	7806      	ldrb	r6, [r0, #0]
 8002edc:	f1a6 0330 	sub.w	r3, r6, #48	; 0x30
 8002ee0:	b2d9      	uxtb	r1, r3
 8002ee2:	2909      	cmp	r1, #9
 8002ee4:	d92a      	bls.n	8002f3c <_strtod_l+0x1bc>
 8002ee6:	9907      	ldr	r1, [sp, #28]
 8002ee8:	462a      	mov	r2, r5
 8002eea:	f002 fe6b 	bl	8005bc4 <strncmp>
 8002eee:	b398      	cbz	r0, 8002f58 <_strtod_l+0x1d8>
 8002ef0:	2000      	movs	r0, #0
 8002ef2:	4633      	mov	r3, r6
 8002ef4:	463d      	mov	r5, r7
 8002ef6:	9007      	str	r0, [sp, #28]
 8002ef8:	4602      	mov	r2, r0
 8002efa:	2b65      	cmp	r3, #101	; 0x65
 8002efc:	d001      	beq.n	8002f02 <_strtod_l+0x182>
 8002efe:	2b45      	cmp	r3, #69	; 0x45
 8002f00:	d118      	bne.n	8002f34 <_strtod_l+0x1b4>
 8002f02:	b91d      	cbnz	r5, 8002f0c <_strtod_l+0x18c>
 8002f04:	9b04      	ldr	r3, [sp, #16]
 8002f06:	4303      	orrs	r3, r0
 8002f08:	d098      	beq.n	8002e3c <_strtod_l+0xbc>
 8002f0a:	2500      	movs	r5, #0
 8002f0c:	f8dd 8074 	ldr.w	r8, [sp, #116]	; 0x74
 8002f10:	f108 0301 	add.w	r3, r8, #1
 8002f14:	931d      	str	r3, [sp, #116]	; 0x74
 8002f16:	f898 3001 	ldrb.w	r3, [r8, #1]
 8002f1a:	2b2b      	cmp	r3, #43	; 0x2b
 8002f1c:	d075      	beq.n	800300a <_strtod_l+0x28a>
 8002f1e:	2b2d      	cmp	r3, #45	; 0x2d
 8002f20:	d07b      	beq.n	800301a <_strtod_l+0x29a>
 8002f22:	f04f 0c00 	mov.w	ip, #0
 8002f26:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
 8002f2a:	2909      	cmp	r1, #9
 8002f2c:	f240 8082 	bls.w	8003034 <_strtod_l+0x2b4>
 8002f30:	f8cd 8074 	str.w	r8, [sp, #116]	; 0x74
 8002f34:	2600      	movs	r6, #0
 8002f36:	e09d      	b.n	8003074 <_strtod_l+0x2f4>
 8002f38:	2300      	movs	r3, #0
 8002f3a:	e7c4      	b.n	8002ec6 <_strtod_l+0x146>
 8002f3c:	2f08      	cmp	r7, #8
 8002f3e:	bfd8      	it	le
 8002f40:	9909      	ldrle	r1, [sp, #36]	; 0x24
 8002f42:	f100 0001 	add.w	r0, r0, #1
 8002f46:	bfda      	itte	le
 8002f48:	fb02 3301 	mlale	r3, r2, r1, r3
 8002f4c:	9309      	strle	r3, [sp, #36]	; 0x24
 8002f4e:	fb02 3909 	mlagt	r9, r2, r9, r3
 8002f52:	3701      	adds	r7, #1
 8002f54:	901d      	str	r0, [sp, #116]	; 0x74
 8002f56:	e7bf      	b.n	8002ed8 <_strtod_l+0x158>
 8002f58:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8002f5a:	195a      	adds	r2, r3, r5
 8002f5c:	921d      	str	r2, [sp, #116]	; 0x74
 8002f5e:	5d5b      	ldrb	r3, [r3, r5]
 8002f60:	2f00      	cmp	r7, #0
 8002f62:	d037      	beq.n	8002fd4 <_strtod_l+0x254>
 8002f64:	9007      	str	r0, [sp, #28]
 8002f66:	463d      	mov	r5, r7
 8002f68:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
 8002f6c:	2a09      	cmp	r2, #9
 8002f6e:	d912      	bls.n	8002f96 <_strtod_l+0x216>
 8002f70:	2201      	movs	r2, #1
 8002f72:	e7c2      	b.n	8002efa <_strtod_l+0x17a>
 8002f74:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8002f76:	1c5a      	adds	r2, r3, #1
 8002f78:	921d      	str	r2, [sp, #116]	; 0x74
 8002f7a:	785b      	ldrb	r3, [r3, #1]
 8002f7c:	3001      	adds	r0, #1
 8002f7e:	2b30      	cmp	r3, #48	; 0x30
 8002f80:	d0f8      	beq.n	8002f74 <_strtod_l+0x1f4>
 8002f82:	f1a3 0231 	sub.w	r2, r3, #49	; 0x31
 8002f86:	2a08      	cmp	r2, #8
 8002f88:	f200 84db 	bhi.w	8003942 <_strtod_l+0xbc2>
 8002f8c:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8002f8e:	9007      	str	r0, [sp, #28]
 8002f90:	2000      	movs	r0, #0
 8002f92:	920a      	str	r2, [sp, #40]	; 0x28
 8002f94:	4605      	mov	r5, r0
 8002f96:	3b30      	subs	r3, #48	; 0x30
 8002f98:	f100 0201 	add.w	r2, r0, #1
 8002f9c:	d014      	beq.n	8002fc8 <_strtod_l+0x248>
 8002f9e:	9907      	ldr	r1, [sp, #28]
 8002fa0:	4411      	add	r1, r2
 8002fa2:	9107      	str	r1, [sp, #28]
 8002fa4:	462a      	mov	r2, r5
 8002fa6:	eb00 0e05 	add.w	lr, r0, r5
 8002faa:	210a      	movs	r1, #10
 8002fac:	4572      	cmp	r2, lr
 8002fae:	d113      	bne.n	8002fd8 <_strtod_l+0x258>
 8002fb0:	182a      	adds	r2, r5, r0
 8002fb2:	2a08      	cmp	r2, #8
 8002fb4:	f105 0501 	add.w	r5, r5, #1
 8002fb8:	4405      	add	r5, r0
 8002fba:	dc1c      	bgt.n	8002ff6 <_strtod_l+0x276>
 8002fbc:	9909      	ldr	r1, [sp, #36]	; 0x24
 8002fbe:	220a      	movs	r2, #10
 8002fc0:	fb02 3301 	mla	r3, r2, r1, r3
 8002fc4:	9309      	str	r3, [sp, #36]	; 0x24
 8002fc6:	2200      	movs	r2, #0
 8002fc8:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8002fca:	1c59      	adds	r1, r3, #1
 8002fcc:	911d      	str	r1, [sp, #116]	; 0x74
 8002fce:	785b      	ldrb	r3, [r3, #1]
 8002fd0:	4610      	mov	r0, r2
 8002fd2:	e7c9      	b.n	8002f68 <_strtod_l+0x1e8>
 8002fd4:	4638      	mov	r0, r7
 8002fd6:	e7d2      	b.n	8002f7e <_strtod_l+0x1fe>
 8002fd8:	2a08      	cmp	r2, #8
 8002fda:	dc04      	bgt.n	8002fe6 <_strtod_l+0x266>
 8002fdc:	9e09      	ldr	r6, [sp, #36]	; 0x24
 8002fde:	434e      	muls	r6, r1
 8002fe0:	9609      	str	r6, [sp, #36]	; 0x24
 8002fe2:	3201      	adds	r2, #1
 8002fe4:	e7e2      	b.n	8002fac <_strtod_l+0x22c>
 8002fe6:	f102 0c01 	add.w	ip, r2, #1
 8002fea:	f1bc 0f10 	cmp.w	ip, #16
 8002fee:	bfd8      	it	le
 8002ff0:	fb01 f909 	mulle.w	r9, r1, r9
 8002ff4:	e7f5      	b.n	8002fe2 <_strtod_l+0x262>
 8002ff6:	2d10      	cmp	r5, #16
 8002ff8:	bfdc      	itt	le
 8002ffa:	220a      	movle	r2, #10
 8002ffc:	fb02 3909 	mlale	r9, r2, r9, r3
 8003000:	e7e1      	b.n	8002fc6 <_strtod_l+0x246>
 8003002:	2300      	movs	r3, #0
 8003004:	9307      	str	r3, [sp, #28]
 8003006:	2201      	movs	r2, #1
 8003008:	e77c      	b.n	8002f04 <_strtod_l+0x184>
 800300a:	f04f 0c00 	mov.w	ip, #0
 800300e:	f108 0302 	add.w	r3, r8, #2
 8003012:	931d      	str	r3, [sp, #116]	; 0x74
 8003014:	f898 3002 	ldrb.w	r3, [r8, #2]
 8003018:	e785      	b.n	8002f26 <_strtod_l+0x1a6>
 800301a:	f04f 0c01 	mov.w	ip, #1
 800301e:	e7f6      	b.n	800300e <_strtod_l+0x28e>
 8003020:	08007fe8 	.word	0x08007fe8
 8003024:	08007ddc 	.word	0x08007ddc
 8003028:	7ff00000 	.word	0x7ff00000
 800302c:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 800302e:	1c59      	adds	r1, r3, #1
 8003030:	911d      	str	r1, [sp, #116]	; 0x74
 8003032:	785b      	ldrb	r3, [r3, #1]
 8003034:	2b30      	cmp	r3, #48	; 0x30
 8003036:	d0f9      	beq.n	800302c <_strtod_l+0x2ac>
 8003038:	f1a3 0131 	sub.w	r1, r3, #49	; 0x31
 800303c:	2908      	cmp	r1, #8
 800303e:	f63f af79 	bhi.w	8002f34 <_strtod_l+0x1b4>
 8003042:	f1a3 0e30 	sub.w	lr, r3, #48	; 0x30
 8003046:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8003048:	9308      	str	r3, [sp, #32]
 800304a:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 800304c:	1c59      	adds	r1, r3, #1
 800304e:	911d      	str	r1, [sp, #116]	; 0x74
 8003050:	785b      	ldrb	r3, [r3, #1]
 8003052:	f1a3 0630 	sub.w	r6, r3, #48	; 0x30
 8003056:	2e09      	cmp	r6, #9
 8003058:	d937      	bls.n	80030ca <_strtod_l+0x34a>
 800305a:	9e08      	ldr	r6, [sp, #32]
 800305c:	1b89      	subs	r1, r1, r6
 800305e:	2908      	cmp	r1, #8
 8003060:	f644 661f 	movw	r6, #19999	; 0x4e1f
 8003064:	dc02      	bgt.n	800306c <_strtod_l+0x2ec>
 8003066:	4576      	cmp	r6, lr
 8003068:	bfa8      	it	ge
 800306a:	4676      	movge	r6, lr
 800306c:	f1bc 0f00 	cmp.w	ip, #0
 8003070:	d000      	beq.n	8003074 <_strtod_l+0x2f4>
 8003072:	4276      	negs	r6, r6
 8003074:	2d00      	cmp	r5, #0
 8003076:	d14f      	bne.n	8003118 <_strtod_l+0x398>
 8003078:	9904      	ldr	r1, [sp, #16]
 800307a:	4301      	orrs	r1, r0
 800307c:	f47f aec2 	bne.w	8002e04 <_strtod_l+0x84>
 8003080:	2a00      	cmp	r2, #0
 8003082:	f47f aedb 	bne.w	8002e3c <_strtod_l+0xbc>
 8003086:	2b69      	cmp	r3, #105	; 0x69
 8003088:	d027      	beq.n	80030da <_strtod_l+0x35a>
 800308a:	dc24      	bgt.n	80030d6 <_strtod_l+0x356>
 800308c:	2b49      	cmp	r3, #73	; 0x49
 800308e:	d024      	beq.n	80030da <_strtod_l+0x35a>
 8003090:	2b4e      	cmp	r3, #78	; 0x4e
 8003092:	f47f aed3 	bne.w	8002e3c <_strtod_l+0xbc>
 8003096:	499e      	ldr	r1, [pc, #632]	; (8003310 <_strtod_l+0x590>)
 8003098:	a81d      	add	r0, sp, #116	; 0x74
 800309a:	f001 f819 	bl	80040d0 <__match>
 800309e:	2800      	cmp	r0, #0
 80030a0:	f43f aecc 	beq.w	8002e3c <_strtod_l+0xbc>
 80030a4:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80030a6:	781b      	ldrb	r3, [r3, #0]
 80030a8:	2b28      	cmp	r3, #40	; 0x28
 80030aa:	d12d      	bne.n	8003108 <_strtod_l+0x388>
 80030ac:	4999      	ldr	r1, [pc, #612]	; (8003314 <_strtod_l+0x594>)
 80030ae:	aa20      	add	r2, sp, #128	; 0x80
 80030b0:	a81d      	add	r0, sp, #116	; 0x74
 80030b2:	f001 f821 	bl	80040f8 <__hexnan>
 80030b6:	2805      	cmp	r0, #5
 80030b8:	d126      	bne.n	8003108 <_strtod_l+0x388>
 80030ba:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80030bc:	f8dd a080 	ldr.w	sl, [sp, #128]	; 0x80
 80030c0:	f043 4bff 	orr.w	fp, r3, #2139095040	; 0x7f800000
 80030c4:	f44b 0be0 	orr.w	fp, fp, #7340032	; 0x700000
 80030c8:	e69c      	b.n	8002e04 <_strtod_l+0x84>
 80030ca:	210a      	movs	r1, #10
 80030cc:	fb01 3e0e 	mla	lr, r1, lr, r3
 80030d0:	f1ae 0e30 	sub.w	lr, lr, #48	; 0x30
 80030d4:	e7b9      	b.n	800304a <_strtod_l+0x2ca>
 80030d6:	2b6e      	cmp	r3, #110	; 0x6e
 80030d8:	e7db      	b.n	8003092 <_strtod_l+0x312>
 80030da:	498f      	ldr	r1, [pc, #572]	; (8003318 <_strtod_l+0x598>)
 80030dc:	a81d      	add	r0, sp, #116	; 0x74
 80030de:	f000 fff7 	bl	80040d0 <__match>
 80030e2:	2800      	cmp	r0, #0
 80030e4:	f43f aeaa 	beq.w	8002e3c <_strtod_l+0xbc>
 80030e8:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80030ea:	498c      	ldr	r1, [pc, #560]	; (800331c <_strtod_l+0x59c>)
 80030ec:	3b01      	subs	r3, #1
 80030ee:	a81d      	add	r0, sp, #116	; 0x74
 80030f0:	931d      	str	r3, [sp, #116]	; 0x74
 80030f2:	f000 ffed 	bl	80040d0 <__match>
 80030f6:	b910      	cbnz	r0, 80030fe <_strtod_l+0x37e>
 80030f8:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80030fa:	3301      	adds	r3, #1
 80030fc:	931d      	str	r3, [sp, #116]	; 0x74
 80030fe:	f8df b22c 	ldr.w	fp, [pc, #556]	; 800332c <_strtod_l+0x5ac>
 8003102:	f04f 0a00 	mov.w	sl, #0
 8003106:	e67d      	b.n	8002e04 <_strtod_l+0x84>
 8003108:	4885      	ldr	r0, [pc, #532]	; (8003320 <_strtod_l+0x5a0>)
 800310a:	f002 fd19 	bl	8005b40 <nan>
 800310e:	ed8d 0b04 	vstr	d0, [sp, #16]
 8003112:	e9dd ab04 	ldrd	sl, fp, [sp, #16]
 8003116:	e675      	b.n	8002e04 <_strtod_l+0x84>
 8003118:	9b07      	ldr	r3, [sp, #28]
 800311a:	9809      	ldr	r0, [sp, #36]	; 0x24
 800311c:	1af3      	subs	r3, r6, r3
 800311e:	2f00      	cmp	r7, #0
 8003120:	bf08      	it	eq
 8003122:	462f      	moveq	r7, r5
 8003124:	2d10      	cmp	r5, #16
 8003126:	9308      	str	r3, [sp, #32]
 8003128:	46a8      	mov	r8, r5
 800312a:	bfa8      	it	ge
 800312c:	f04f 0810 	movge.w	r8, #16
 8003130:	f7fd f9f0 	bl	8000514 <__aeabi_ui2d>
 8003134:	2d09      	cmp	r5, #9
 8003136:	4682      	mov	sl, r0
 8003138:	468b      	mov	fp, r1
 800313a:	dd13      	ble.n	8003164 <_strtod_l+0x3e4>
 800313c:	4b79      	ldr	r3, [pc, #484]	; (8003324 <_strtod_l+0x5a4>)
 800313e:	eb03 03c8 	add.w	r3, r3, r8, lsl #3
 8003142:	e953 2312 	ldrd	r2, r3, [r3, #-72]	; 0x48
 8003146:	f7fd fa5f 	bl	8000608 <__aeabi_dmul>
 800314a:	4682      	mov	sl, r0
 800314c:	4648      	mov	r0, r9
 800314e:	468b      	mov	fp, r1
 8003150:	f7fd f9e0 	bl	8000514 <__aeabi_ui2d>
 8003154:	4602      	mov	r2, r0
 8003156:	460b      	mov	r3, r1
 8003158:	4650      	mov	r0, sl
 800315a:	4659      	mov	r1, fp
 800315c:	f7fd f89e 	bl	800029c <__adddf3>
 8003160:	4682      	mov	sl, r0
 8003162:	468b      	mov	fp, r1
 8003164:	2d0f      	cmp	r5, #15
 8003166:	dc38      	bgt.n	80031da <_strtod_l+0x45a>
 8003168:	9b08      	ldr	r3, [sp, #32]
 800316a:	2b00      	cmp	r3, #0
 800316c:	f43f ae4a 	beq.w	8002e04 <_strtod_l+0x84>
 8003170:	dd24      	ble.n	80031bc <_strtod_l+0x43c>
 8003172:	2b16      	cmp	r3, #22
 8003174:	dc0b      	bgt.n	800318e <_strtod_l+0x40e>
 8003176:	4d6b      	ldr	r5, [pc, #428]	; (8003324 <_strtod_l+0x5a4>)
 8003178:	eb05 05c3 	add.w	r5, r5, r3, lsl #3
 800317c:	e9d5 0100 	ldrd	r0, r1, [r5]
 8003180:	4652      	mov	r2, sl
 8003182:	465b      	mov	r3, fp
 8003184:	f7fd fa40 	bl	8000608 <__aeabi_dmul>
 8003188:	4682      	mov	sl, r0
 800318a:	468b      	mov	fp, r1
 800318c:	e63a      	b.n	8002e04 <_strtod_l+0x84>
 800318e:	9a08      	ldr	r2, [sp, #32]
 8003190:	f1c5 0325 	rsb	r3, r5, #37	; 0x25
 8003194:	4293      	cmp	r3, r2
 8003196:	db20      	blt.n	80031da <_strtod_l+0x45a>
 8003198:	4c62      	ldr	r4, [pc, #392]	; (8003324 <_strtod_l+0x5a4>)
 800319a:	f1c5 050f 	rsb	r5, r5, #15
 800319e:	eb04 01c5 	add.w	r1, r4, r5, lsl #3
 80031a2:	4652      	mov	r2, sl
 80031a4:	465b      	mov	r3, fp
 80031a6:	e9d1 0100 	ldrd	r0, r1, [r1]
 80031aa:	f7fd fa2d 	bl	8000608 <__aeabi_dmul>
 80031ae:	9b08      	ldr	r3, [sp, #32]
 80031b0:	1b5d      	subs	r5, r3, r5
 80031b2:	eb04 04c5 	add.w	r4, r4, r5, lsl #3
 80031b6:	e9d4 2300 	ldrd	r2, r3, [r4]
 80031ba:	e7e3      	b.n	8003184 <_strtod_l+0x404>
 80031bc:	9b08      	ldr	r3, [sp, #32]
 80031be:	3316      	adds	r3, #22
 80031c0:	db0b      	blt.n	80031da <_strtod_l+0x45a>
 80031c2:	9b07      	ldr	r3, [sp, #28]
 80031c4:	4a57      	ldr	r2, [pc, #348]	; (8003324 <_strtod_l+0x5a4>)
 80031c6:	1b9e      	subs	r6, r3, r6
 80031c8:	eb02 06c6 	add.w	r6, r2, r6, lsl #3
 80031cc:	e9d6 2300 	ldrd	r2, r3, [r6]
 80031d0:	4650      	mov	r0, sl
 80031d2:	4659      	mov	r1, fp
 80031d4:	f7fd fb42 	bl	800085c <__aeabi_ddiv>
 80031d8:	e7d6      	b.n	8003188 <_strtod_l+0x408>
 80031da:	9b08      	ldr	r3, [sp, #32]
 80031dc:	eba5 0808 	sub.w	r8, r5, r8
 80031e0:	4498      	add	r8, r3
 80031e2:	f1b8 0f00 	cmp.w	r8, #0
 80031e6:	dd71      	ble.n	80032cc <_strtod_l+0x54c>
 80031e8:	f018 030f 	ands.w	r3, r8, #15
 80031ec:	d00a      	beq.n	8003204 <_strtod_l+0x484>
 80031ee:	494d      	ldr	r1, [pc, #308]	; (8003324 <_strtod_l+0x5a4>)
 80031f0:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 80031f4:	4652      	mov	r2, sl
 80031f6:	465b      	mov	r3, fp
 80031f8:	e9d1 0100 	ldrd	r0, r1, [r1]
 80031fc:	f7fd fa04 	bl	8000608 <__aeabi_dmul>
 8003200:	4682      	mov	sl, r0
 8003202:	468b      	mov	fp, r1
 8003204:	f038 080f 	bics.w	r8, r8, #15
 8003208:	d04d      	beq.n	80032a6 <_strtod_l+0x526>
 800320a:	f5b8 7f9a 	cmp.w	r8, #308	; 0x134
 800320e:	dd22      	ble.n	8003256 <_strtod_l+0x4d6>
 8003210:	2500      	movs	r5, #0
 8003212:	462e      	mov	r6, r5
 8003214:	9509      	str	r5, [sp, #36]	; 0x24
 8003216:	9507      	str	r5, [sp, #28]
 8003218:	2322      	movs	r3, #34	; 0x22
 800321a:	f8df b110 	ldr.w	fp, [pc, #272]	; 800332c <_strtod_l+0x5ac>
 800321e:	6023      	str	r3, [r4, #0]
 8003220:	f04f 0a00 	mov.w	sl, #0
 8003224:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003226:	2b00      	cmp	r3, #0
 8003228:	f43f adec 	beq.w	8002e04 <_strtod_l+0x84>
 800322c:	991e      	ldr	r1, [sp, #120]	; 0x78
 800322e:	4620      	mov	r0, r4
 8003230:	f001 f880 	bl	8004334 <_Bfree>
 8003234:	9907      	ldr	r1, [sp, #28]
 8003236:	4620      	mov	r0, r4
 8003238:	f001 f87c 	bl	8004334 <_Bfree>
 800323c:	4631      	mov	r1, r6
 800323e:	4620      	mov	r0, r4
 8003240:	f001 f878 	bl	8004334 <_Bfree>
 8003244:	9909      	ldr	r1, [sp, #36]	; 0x24
 8003246:	4620      	mov	r0, r4
 8003248:	f001 f874 	bl	8004334 <_Bfree>
 800324c:	4629      	mov	r1, r5
 800324e:	4620      	mov	r0, r4
 8003250:	f001 f870 	bl	8004334 <_Bfree>
 8003254:	e5d6      	b.n	8002e04 <_strtod_l+0x84>
 8003256:	2300      	movs	r3, #0
 8003258:	ea4f 1828 	mov.w	r8, r8, asr #4
 800325c:	4650      	mov	r0, sl
 800325e:	4659      	mov	r1, fp
 8003260:	4699      	mov	r9, r3
 8003262:	f1b8 0f01 	cmp.w	r8, #1
 8003266:	dc21      	bgt.n	80032ac <_strtod_l+0x52c>
 8003268:	b10b      	cbz	r3, 800326e <_strtod_l+0x4ee>
 800326a:	4682      	mov	sl, r0
 800326c:	468b      	mov	fp, r1
 800326e:	4b2e      	ldr	r3, [pc, #184]	; (8003328 <_strtod_l+0x5a8>)
 8003270:	f1ab 7b54 	sub.w	fp, fp, #55574528	; 0x3500000
 8003274:	eb03 09c9 	add.w	r9, r3, r9, lsl #3
 8003278:	4652      	mov	r2, sl
 800327a:	465b      	mov	r3, fp
 800327c:	e9d9 0100 	ldrd	r0, r1, [r9]
 8003280:	f7fd f9c2 	bl	8000608 <__aeabi_dmul>
 8003284:	4b29      	ldr	r3, [pc, #164]	; (800332c <_strtod_l+0x5ac>)
 8003286:	460a      	mov	r2, r1
 8003288:	400b      	ands	r3, r1
 800328a:	4929      	ldr	r1, [pc, #164]	; (8003330 <_strtod_l+0x5b0>)
 800328c:	428b      	cmp	r3, r1
 800328e:	4682      	mov	sl, r0
 8003290:	d8be      	bhi.n	8003210 <_strtod_l+0x490>
 8003292:	f5a1 1180 	sub.w	r1, r1, #1048576	; 0x100000
 8003296:	428b      	cmp	r3, r1
 8003298:	bf86      	itte	hi
 800329a:	f8df b098 	ldrhi.w	fp, [pc, #152]	; 8003334 <_strtod_l+0x5b4>
 800329e:	f04f 3aff 	movhi.w	sl, #4294967295
 80032a2:	f102 7b54 	addls.w	fp, r2, #55574528	; 0x3500000
 80032a6:	2300      	movs	r3, #0
 80032a8:	9304      	str	r3, [sp, #16]
 80032aa:	e081      	b.n	80033b0 <_strtod_l+0x630>
 80032ac:	f018 0f01 	tst.w	r8, #1
 80032b0:	d007      	beq.n	80032c2 <_strtod_l+0x542>
 80032b2:	4b1d      	ldr	r3, [pc, #116]	; (8003328 <_strtod_l+0x5a8>)
 80032b4:	eb03 03c9 	add.w	r3, r3, r9, lsl #3
 80032b8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80032bc:	f7fd f9a4 	bl	8000608 <__aeabi_dmul>
 80032c0:	2301      	movs	r3, #1
 80032c2:	f109 0901 	add.w	r9, r9, #1
 80032c6:	ea4f 0868 	mov.w	r8, r8, asr #1
 80032ca:	e7ca      	b.n	8003262 <_strtod_l+0x4e2>
 80032cc:	d0eb      	beq.n	80032a6 <_strtod_l+0x526>
 80032ce:	f1c8 0800 	rsb	r8, r8, #0
 80032d2:	f018 020f 	ands.w	r2, r8, #15
 80032d6:	d00a      	beq.n	80032ee <_strtod_l+0x56e>
 80032d8:	4b12      	ldr	r3, [pc, #72]	; (8003324 <_strtod_l+0x5a4>)
 80032da:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 80032de:	4650      	mov	r0, sl
 80032e0:	4659      	mov	r1, fp
 80032e2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80032e6:	f7fd fab9 	bl	800085c <__aeabi_ddiv>
 80032ea:	4682      	mov	sl, r0
 80032ec:	468b      	mov	fp, r1
 80032ee:	ea5f 1828 	movs.w	r8, r8, asr #4
 80032f2:	d0d8      	beq.n	80032a6 <_strtod_l+0x526>
 80032f4:	f1b8 0f1f 	cmp.w	r8, #31
 80032f8:	dd1e      	ble.n	8003338 <_strtod_l+0x5b8>
 80032fa:	2500      	movs	r5, #0
 80032fc:	462e      	mov	r6, r5
 80032fe:	9509      	str	r5, [sp, #36]	; 0x24
 8003300:	9507      	str	r5, [sp, #28]
 8003302:	2322      	movs	r3, #34	; 0x22
 8003304:	f04f 0a00 	mov.w	sl, #0
 8003308:	f04f 0b00 	mov.w	fp, #0
 800330c:	6023      	str	r3, [r4, #0]
 800330e:	e789      	b.n	8003224 <_strtod_l+0x4a4>
 8003310:	08007dd6 	.word	0x08007dd6
 8003314:	08007df0 	.word	0x08007df0
 8003318:	08007dcd 	.word	0x08007dcd
 800331c:	08007dd0 	.word	0x08007dd0
 8003320:	08007e6b 	.word	0x08007e6b
 8003324:	080080a0 	.word	0x080080a0
 8003328:	08008078 	.word	0x08008078
 800332c:	7ff00000 	.word	0x7ff00000
 8003330:	7ca00000 	.word	0x7ca00000
 8003334:	7fefffff 	.word	0x7fefffff
 8003338:	f018 0310 	ands.w	r3, r8, #16
 800333c:	bf18      	it	ne
 800333e:	236a      	movne	r3, #106	; 0x6a
 8003340:	f8df 93b4 	ldr.w	r9, [pc, #948]	; 80036f8 <_strtod_l+0x978>
 8003344:	9304      	str	r3, [sp, #16]
 8003346:	4650      	mov	r0, sl
 8003348:	4659      	mov	r1, fp
 800334a:	2300      	movs	r3, #0
 800334c:	f018 0f01 	tst.w	r8, #1
 8003350:	d004      	beq.n	800335c <_strtod_l+0x5dc>
 8003352:	e9d9 2300 	ldrd	r2, r3, [r9]
 8003356:	f7fd f957 	bl	8000608 <__aeabi_dmul>
 800335a:	2301      	movs	r3, #1
 800335c:	ea5f 0868 	movs.w	r8, r8, asr #1
 8003360:	f109 0908 	add.w	r9, r9, #8
 8003364:	d1f2      	bne.n	800334c <_strtod_l+0x5cc>
 8003366:	b10b      	cbz	r3, 800336c <_strtod_l+0x5ec>
 8003368:	4682      	mov	sl, r0
 800336a:	468b      	mov	fp, r1
 800336c:	9b04      	ldr	r3, [sp, #16]
 800336e:	b1bb      	cbz	r3, 80033a0 <_strtod_l+0x620>
 8003370:	f3cb 530a 	ubfx	r3, fp, #20, #11
 8003374:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 8003378:	2b00      	cmp	r3, #0
 800337a:	4659      	mov	r1, fp
 800337c:	dd10      	ble.n	80033a0 <_strtod_l+0x620>
 800337e:	2b1f      	cmp	r3, #31
 8003380:	f340 8128 	ble.w	80035d4 <_strtod_l+0x854>
 8003384:	2b34      	cmp	r3, #52	; 0x34
 8003386:	bfde      	ittt	le
 8003388:	3b20      	suble	r3, #32
 800338a:	f04f 32ff 	movle.w	r2, #4294967295
 800338e:	fa02 f303 	lslle.w	r3, r2, r3
 8003392:	f04f 0a00 	mov.w	sl, #0
 8003396:	bfcc      	ite	gt
 8003398:	f04f 7b5c 	movgt.w	fp, #57671680	; 0x3700000
 800339c:	ea03 0b01 	andle.w	fp, r3, r1
 80033a0:	2200      	movs	r2, #0
 80033a2:	2300      	movs	r3, #0
 80033a4:	4650      	mov	r0, sl
 80033a6:	4659      	mov	r1, fp
 80033a8:	f7fd fb96 	bl	8000ad8 <__aeabi_dcmpeq>
 80033ac:	2800      	cmp	r0, #0
 80033ae:	d1a4      	bne.n	80032fa <_strtod_l+0x57a>
 80033b0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80033b2:	9300      	str	r3, [sp, #0]
 80033b4:	990a      	ldr	r1, [sp, #40]	; 0x28
 80033b6:	462b      	mov	r3, r5
 80033b8:	463a      	mov	r2, r7
 80033ba:	4620      	mov	r0, r4
 80033bc:	f001 f826 	bl	800440c <__s2b>
 80033c0:	9009      	str	r0, [sp, #36]	; 0x24
 80033c2:	2800      	cmp	r0, #0
 80033c4:	f43f af24 	beq.w	8003210 <_strtod_l+0x490>
 80033c8:	9b07      	ldr	r3, [sp, #28]
 80033ca:	1b9e      	subs	r6, r3, r6
 80033cc:	9b08      	ldr	r3, [sp, #32]
 80033ce:	2b00      	cmp	r3, #0
 80033d0:	bfb4      	ite	lt
 80033d2:	4633      	movlt	r3, r6
 80033d4:	2300      	movge	r3, #0
 80033d6:	9310      	str	r3, [sp, #64]	; 0x40
 80033d8:	9b08      	ldr	r3, [sp, #32]
 80033da:	2500      	movs	r5, #0
 80033dc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80033e0:	9318      	str	r3, [sp, #96]	; 0x60
 80033e2:	462e      	mov	r6, r5
 80033e4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80033e6:	4620      	mov	r0, r4
 80033e8:	6859      	ldr	r1, [r3, #4]
 80033ea:	f000 ff63 	bl	80042b4 <_Balloc>
 80033ee:	9007      	str	r0, [sp, #28]
 80033f0:	2800      	cmp	r0, #0
 80033f2:	f43f af11 	beq.w	8003218 <_strtod_l+0x498>
 80033f6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80033f8:	691a      	ldr	r2, [r3, #16]
 80033fa:	3202      	adds	r2, #2
 80033fc:	f103 010c 	add.w	r1, r3, #12
 8003400:	0092      	lsls	r2, r2, #2
 8003402:	300c      	adds	r0, #12
 8003404:	f000 ff3c 	bl	8004280 <memcpy>
 8003408:	ec4b ab10 	vmov	d0, sl, fp
 800340c:	aa20      	add	r2, sp, #128	; 0x80
 800340e:	a91f      	add	r1, sp, #124	; 0x7c
 8003410:	4620      	mov	r0, r4
 8003412:	e9cd ab0a 	strd	sl, fp, [sp, #40]	; 0x28
 8003416:	f001 fb35 	bl	8004a84 <__d2b>
 800341a:	901e      	str	r0, [sp, #120]	; 0x78
 800341c:	2800      	cmp	r0, #0
 800341e:	f43f aefb 	beq.w	8003218 <_strtod_l+0x498>
 8003422:	2101      	movs	r1, #1
 8003424:	4620      	mov	r0, r4
 8003426:	f001 f88b 	bl	8004540 <__i2b>
 800342a:	4606      	mov	r6, r0
 800342c:	2800      	cmp	r0, #0
 800342e:	f43f aef3 	beq.w	8003218 <_strtod_l+0x498>
 8003432:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8003434:	9904      	ldr	r1, [sp, #16]
 8003436:	2b00      	cmp	r3, #0
 8003438:	bfab      	itete	ge
 800343a:	9a10      	ldrge	r2, [sp, #64]	; 0x40
 800343c:	9a18      	ldrlt	r2, [sp, #96]	; 0x60
 800343e:	9f18      	ldrge	r7, [sp, #96]	; 0x60
 8003440:	f8dd 9040 	ldrlt.w	r9, [sp, #64]	; 0x40
 8003444:	bfac      	ite	ge
 8003446:	eb03 0902 	addge.w	r9, r3, r2
 800344a:	1ad7      	sublt	r7, r2, r3
 800344c:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800344e:	eba3 0801 	sub.w	r8, r3, r1
 8003452:	4490      	add	r8, r2
 8003454:	4ba3      	ldr	r3, [pc, #652]	; (80036e4 <_strtod_l+0x964>)
 8003456:	f108 38ff 	add.w	r8, r8, #4294967295
 800345a:	4598      	cmp	r8, r3
 800345c:	f1c2 0236 	rsb	r2, r2, #54	; 0x36
 8003460:	f280 80cc 	bge.w	80035fc <_strtod_l+0x87c>
 8003464:	eba3 0308 	sub.w	r3, r3, r8
 8003468:	2b1f      	cmp	r3, #31
 800346a:	eba2 0203 	sub.w	r2, r2, r3
 800346e:	f04f 0101 	mov.w	r1, #1
 8003472:	f300 80b6 	bgt.w	80035e2 <_strtod_l+0x862>
 8003476:	fa01 f303 	lsl.w	r3, r1, r3
 800347a:	9311      	str	r3, [sp, #68]	; 0x44
 800347c:	2300      	movs	r3, #0
 800347e:	930c      	str	r3, [sp, #48]	; 0x30
 8003480:	eb09 0802 	add.w	r8, r9, r2
 8003484:	9b04      	ldr	r3, [sp, #16]
 8003486:	45c1      	cmp	r9, r8
 8003488:	4417      	add	r7, r2
 800348a:	441f      	add	r7, r3
 800348c:	464b      	mov	r3, r9
 800348e:	bfa8      	it	ge
 8003490:	4643      	movge	r3, r8
 8003492:	42bb      	cmp	r3, r7
 8003494:	bfa8      	it	ge
 8003496:	463b      	movge	r3, r7
 8003498:	2b00      	cmp	r3, #0
 800349a:	bfc2      	ittt	gt
 800349c:	eba8 0803 	subgt.w	r8, r8, r3
 80034a0:	1aff      	subgt	r7, r7, r3
 80034a2:	eba9 0903 	subgt.w	r9, r9, r3
 80034a6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80034a8:	2b00      	cmp	r3, #0
 80034aa:	dd17      	ble.n	80034dc <_strtod_l+0x75c>
 80034ac:	4631      	mov	r1, r6
 80034ae:	461a      	mov	r2, r3
 80034b0:	4620      	mov	r0, r4
 80034b2:	f001 f901 	bl	80046b8 <__pow5mult>
 80034b6:	4606      	mov	r6, r0
 80034b8:	2800      	cmp	r0, #0
 80034ba:	f43f aead 	beq.w	8003218 <_strtod_l+0x498>
 80034be:	4601      	mov	r1, r0
 80034c0:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 80034c2:	4620      	mov	r0, r4
 80034c4:	f001 f852 	bl	800456c <__multiply>
 80034c8:	900f      	str	r0, [sp, #60]	; 0x3c
 80034ca:	2800      	cmp	r0, #0
 80034cc:	f43f aea4 	beq.w	8003218 <_strtod_l+0x498>
 80034d0:	991e      	ldr	r1, [sp, #120]	; 0x78
 80034d2:	4620      	mov	r0, r4
 80034d4:	f000 ff2e 	bl	8004334 <_Bfree>
 80034d8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80034da:	931e      	str	r3, [sp, #120]	; 0x78
 80034dc:	f1b8 0f00 	cmp.w	r8, #0
 80034e0:	f300 8091 	bgt.w	8003606 <_strtod_l+0x886>
 80034e4:	9b08      	ldr	r3, [sp, #32]
 80034e6:	2b00      	cmp	r3, #0
 80034e8:	dd08      	ble.n	80034fc <_strtod_l+0x77c>
 80034ea:	9a18      	ldr	r2, [sp, #96]	; 0x60
 80034ec:	9907      	ldr	r1, [sp, #28]
 80034ee:	4620      	mov	r0, r4
 80034f0:	f001 f8e2 	bl	80046b8 <__pow5mult>
 80034f4:	9007      	str	r0, [sp, #28]
 80034f6:	2800      	cmp	r0, #0
 80034f8:	f43f ae8e 	beq.w	8003218 <_strtod_l+0x498>
 80034fc:	2f00      	cmp	r7, #0
 80034fe:	dd08      	ble.n	8003512 <_strtod_l+0x792>
 8003500:	9907      	ldr	r1, [sp, #28]
 8003502:	463a      	mov	r2, r7
 8003504:	4620      	mov	r0, r4
 8003506:	f001 f931 	bl	800476c <__lshift>
 800350a:	9007      	str	r0, [sp, #28]
 800350c:	2800      	cmp	r0, #0
 800350e:	f43f ae83 	beq.w	8003218 <_strtod_l+0x498>
 8003512:	f1b9 0f00 	cmp.w	r9, #0
 8003516:	dd08      	ble.n	800352a <_strtod_l+0x7aa>
 8003518:	4631      	mov	r1, r6
 800351a:	464a      	mov	r2, r9
 800351c:	4620      	mov	r0, r4
 800351e:	f001 f925 	bl	800476c <__lshift>
 8003522:	4606      	mov	r6, r0
 8003524:	2800      	cmp	r0, #0
 8003526:	f43f ae77 	beq.w	8003218 <_strtod_l+0x498>
 800352a:	9a07      	ldr	r2, [sp, #28]
 800352c:	991e      	ldr	r1, [sp, #120]	; 0x78
 800352e:	4620      	mov	r0, r4
 8003530:	f001 f9a4 	bl	800487c <__mdiff>
 8003534:	4605      	mov	r5, r0
 8003536:	2800      	cmp	r0, #0
 8003538:	f43f ae6e 	beq.w	8003218 <_strtod_l+0x498>
 800353c:	68c3      	ldr	r3, [r0, #12]
 800353e:	930f      	str	r3, [sp, #60]	; 0x3c
 8003540:	2300      	movs	r3, #0
 8003542:	60c3      	str	r3, [r0, #12]
 8003544:	4631      	mov	r1, r6
 8003546:	f001 f97d 	bl	8004844 <__mcmp>
 800354a:	2800      	cmp	r0, #0
 800354c:	da65      	bge.n	800361a <_strtod_l+0x89a>
 800354e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8003550:	ea53 030a 	orrs.w	r3, r3, sl
 8003554:	f040 8087 	bne.w	8003666 <_strtod_l+0x8e6>
 8003558:	f3cb 0313 	ubfx	r3, fp, #0, #20
 800355c:	2b00      	cmp	r3, #0
 800355e:	f040 8082 	bne.w	8003666 <_strtod_l+0x8e6>
 8003562:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
 8003566:	0d1b      	lsrs	r3, r3, #20
 8003568:	051b      	lsls	r3, r3, #20
 800356a:	f1b3 6fd6 	cmp.w	r3, #112197632	; 0x6b00000
 800356e:	d97a      	bls.n	8003666 <_strtod_l+0x8e6>
 8003570:	696b      	ldr	r3, [r5, #20]
 8003572:	b913      	cbnz	r3, 800357a <_strtod_l+0x7fa>
 8003574:	692b      	ldr	r3, [r5, #16]
 8003576:	2b01      	cmp	r3, #1
 8003578:	dd75      	ble.n	8003666 <_strtod_l+0x8e6>
 800357a:	4629      	mov	r1, r5
 800357c:	2201      	movs	r2, #1
 800357e:	4620      	mov	r0, r4
 8003580:	f001 f8f4 	bl	800476c <__lshift>
 8003584:	4631      	mov	r1, r6
 8003586:	4605      	mov	r5, r0
 8003588:	f001 f95c 	bl	8004844 <__mcmp>
 800358c:	2800      	cmp	r0, #0
 800358e:	dd6a      	ble.n	8003666 <_strtod_l+0x8e6>
 8003590:	9904      	ldr	r1, [sp, #16]
 8003592:	4a55      	ldr	r2, [pc, #340]	; (80036e8 <_strtod_l+0x968>)
 8003594:	465b      	mov	r3, fp
 8003596:	2900      	cmp	r1, #0
 8003598:	f000 8085 	beq.w	80036a6 <_strtod_l+0x926>
 800359c:	ea02 010b 	and.w	r1, r2, fp
 80035a0:	f1b1 6fd6 	cmp.w	r1, #112197632	; 0x6b00000
 80035a4:	dc7f      	bgt.n	80036a6 <_strtod_l+0x926>
 80035a6:	f1b1 7f5c 	cmp.w	r1, #57671680	; 0x3700000
 80035aa:	f77f aeaa 	ble.w	8003302 <_strtod_l+0x582>
 80035ae:	4a4f      	ldr	r2, [pc, #316]	; (80036ec <_strtod_l+0x96c>)
 80035b0:	2300      	movs	r3, #0
 80035b2:	e9cd 3216 	strd	r3, r2, [sp, #88]	; 0x58
 80035b6:	4650      	mov	r0, sl
 80035b8:	e9dd 2316 	ldrd	r2, r3, [sp, #88]	; 0x58
 80035bc:	4659      	mov	r1, fp
 80035be:	f7fd f823 	bl	8000608 <__aeabi_dmul>
 80035c2:	460b      	mov	r3, r1
 80035c4:	4303      	orrs	r3, r0
 80035c6:	bf08      	it	eq
 80035c8:	2322      	moveq	r3, #34	; 0x22
 80035ca:	4682      	mov	sl, r0
 80035cc:	468b      	mov	fp, r1
 80035ce:	bf08      	it	eq
 80035d0:	6023      	streq	r3, [r4, #0]
 80035d2:	e62b      	b.n	800322c <_strtod_l+0x4ac>
 80035d4:	f04f 32ff 	mov.w	r2, #4294967295
 80035d8:	fa02 f303 	lsl.w	r3, r2, r3
 80035dc:	ea03 0a0a 	and.w	sl, r3, sl
 80035e0:	e6de      	b.n	80033a0 <_strtod_l+0x620>
 80035e2:	f1c8 487f 	rsb	r8, r8, #4278190080	; 0xff000000
 80035e6:	f508 087f 	add.w	r8, r8, #16711680	; 0xff0000
 80035ea:	f508 487b 	add.w	r8, r8, #64256	; 0xfb00
 80035ee:	f108 08e2 	add.w	r8, r8, #226	; 0xe2
 80035f2:	fa01 f308 	lsl.w	r3, r1, r8
 80035f6:	930c      	str	r3, [sp, #48]	; 0x30
 80035f8:	9111      	str	r1, [sp, #68]	; 0x44
 80035fa:	e741      	b.n	8003480 <_strtod_l+0x700>
 80035fc:	2300      	movs	r3, #0
 80035fe:	930c      	str	r3, [sp, #48]	; 0x30
 8003600:	2301      	movs	r3, #1
 8003602:	9311      	str	r3, [sp, #68]	; 0x44
 8003604:	e73c      	b.n	8003480 <_strtod_l+0x700>
 8003606:	991e      	ldr	r1, [sp, #120]	; 0x78
 8003608:	4642      	mov	r2, r8
 800360a:	4620      	mov	r0, r4
 800360c:	f001 f8ae 	bl	800476c <__lshift>
 8003610:	901e      	str	r0, [sp, #120]	; 0x78
 8003612:	2800      	cmp	r0, #0
 8003614:	f47f af66 	bne.w	80034e4 <_strtod_l+0x764>
 8003618:	e5fe      	b.n	8003218 <_strtod_l+0x498>
 800361a:	465f      	mov	r7, fp
 800361c:	d16e      	bne.n	80036fc <_strtod_l+0x97c>
 800361e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8003620:	f3cb 0313 	ubfx	r3, fp, #0, #20
 8003624:	b342      	cbz	r2, 8003678 <_strtod_l+0x8f8>
 8003626:	4a32      	ldr	r2, [pc, #200]	; (80036f0 <_strtod_l+0x970>)
 8003628:	4293      	cmp	r3, r2
 800362a:	d128      	bne.n	800367e <_strtod_l+0x8fe>
 800362c:	9b04      	ldr	r3, [sp, #16]
 800362e:	4650      	mov	r0, sl
 8003630:	b1eb      	cbz	r3, 800366e <_strtod_l+0x8ee>
 8003632:	4a2d      	ldr	r2, [pc, #180]	; (80036e8 <_strtod_l+0x968>)
 8003634:	403a      	ands	r2, r7
 8003636:	f1b2 6fd4 	cmp.w	r2, #111149056	; 0x6a00000
 800363a:	f04f 31ff 	mov.w	r1, #4294967295
 800363e:	d819      	bhi.n	8003674 <_strtod_l+0x8f4>
 8003640:	0d12      	lsrs	r2, r2, #20
 8003642:	f1c2 036b 	rsb	r3, r2, #107	; 0x6b
 8003646:	fa01 f303 	lsl.w	r3, r1, r3
 800364a:	4298      	cmp	r0, r3
 800364c:	d117      	bne.n	800367e <_strtod_l+0x8fe>
 800364e:	4b29      	ldr	r3, [pc, #164]	; (80036f4 <_strtod_l+0x974>)
 8003650:	429f      	cmp	r7, r3
 8003652:	d102      	bne.n	800365a <_strtod_l+0x8da>
 8003654:	3001      	adds	r0, #1
 8003656:	f43f addf 	beq.w	8003218 <_strtod_l+0x498>
 800365a:	4b23      	ldr	r3, [pc, #140]	; (80036e8 <_strtod_l+0x968>)
 800365c:	403b      	ands	r3, r7
 800365e:	f503 1b80 	add.w	fp, r3, #1048576	; 0x100000
 8003662:	f04f 0a00 	mov.w	sl, #0
 8003666:	9b04      	ldr	r3, [sp, #16]
 8003668:	2b00      	cmp	r3, #0
 800366a:	d1a0      	bne.n	80035ae <_strtod_l+0x82e>
 800366c:	e5de      	b.n	800322c <_strtod_l+0x4ac>
 800366e:	f04f 33ff 	mov.w	r3, #4294967295
 8003672:	e7ea      	b.n	800364a <_strtod_l+0x8ca>
 8003674:	460b      	mov	r3, r1
 8003676:	e7e8      	b.n	800364a <_strtod_l+0x8ca>
 8003678:	ea53 030a 	orrs.w	r3, r3, sl
 800367c:	d088      	beq.n	8003590 <_strtod_l+0x810>
 800367e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8003680:	b1db      	cbz	r3, 80036ba <_strtod_l+0x93a>
 8003682:	423b      	tst	r3, r7
 8003684:	d0ef      	beq.n	8003666 <_strtod_l+0x8e6>
 8003686:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8003688:	9a04      	ldr	r2, [sp, #16]
 800368a:	4650      	mov	r0, sl
 800368c:	4659      	mov	r1, fp
 800368e:	b1c3      	cbz	r3, 80036c2 <_strtod_l+0x942>
 8003690:	f7ff fb59 	bl	8002d46 <sulp>
 8003694:	4602      	mov	r2, r0
 8003696:	460b      	mov	r3, r1
 8003698:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 800369c:	f7fc fdfe 	bl	800029c <__adddf3>
 80036a0:	4682      	mov	sl, r0
 80036a2:	468b      	mov	fp, r1
 80036a4:	e7df      	b.n	8003666 <_strtod_l+0x8e6>
 80036a6:	4013      	ands	r3, r2
 80036a8:	f5a3 1380 	sub.w	r3, r3, #1048576	; 0x100000
 80036ac:	ea6f 5b13 	mvn.w	fp, r3, lsr #20
 80036b0:	ea6f 5b0b 	mvn.w	fp, fp, lsl #20
 80036b4:	f04f 3aff 	mov.w	sl, #4294967295
 80036b8:	e7d5      	b.n	8003666 <_strtod_l+0x8e6>
 80036ba:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80036bc:	ea13 0f0a 	tst.w	r3, sl
 80036c0:	e7e0      	b.n	8003684 <_strtod_l+0x904>
 80036c2:	f7ff fb40 	bl	8002d46 <sulp>
 80036c6:	4602      	mov	r2, r0
 80036c8:	460b      	mov	r3, r1
 80036ca:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 80036ce:	f7fc fde3 	bl	8000298 <__aeabi_dsub>
 80036d2:	2200      	movs	r2, #0
 80036d4:	2300      	movs	r3, #0
 80036d6:	4682      	mov	sl, r0
 80036d8:	468b      	mov	fp, r1
 80036da:	f7fd f9fd 	bl	8000ad8 <__aeabi_dcmpeq>
 80036de:	2800      	cmp	r0, #0
 80036e0:	d0c1      	beq.n	8003666 <_strtod_l+0x8e6>
 80036e2:	e60e      	b.n	8003302 <_strtod_l+0x582>
 80036e4:	fffffc02 	.word	0xfffffc02
 80036e8:	7ff00000 	.word	0x7ff00000
 80036ec:	39500000 	.word	0x39500000
 80036f0:	000fffff 	.word	0x000fffff
 80036f4:	7fefffff 	.word	0x7fefffff
 80036f8:	08007e08 	.word	0x08007e08
 80036fc:	4631      	mov	r1, r6
 80036fe:	4628      	mov	r0, r5
 8003700:	f001 fa1c 	bl	8004b3c <__ratio>
 8003704:	ec59 8b10 	vmov	r8, r9, d0
 8003708:	ee10 0a10 	vmov	r0, s0
 800370c:	2200      	movs	r2, #0
 800370e:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8003712:	4649      	mov	r1, r9
 8003714:	f7fd f9f4 	bl	8000b00 <__aeabi_dcmple>
 8003718:	2800      	cmp	r0, #0
 800371a:	d07c      	beq.n	8003816 <_strtod_l+0xa96>
 800371c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800371e:	2b00      	cmp	r3, #0
 8003720:	d04c      	beq.n	80037bc <_strtod_l+0xa3c>
 8003722:	4b95      	ldr	r3, [pc, #596]	; (8003978 <_strtod_l+0xbf8>)
 8003724:	2200      	movs	r2, #0
 8003726:	e9cd 230c 	strd	r2, r3, [sp, #48]	; 0x30
 800372a:	f8df 924c 	ldr.w	r9, [pc, #588]	; 8003978 <_strtod_l+0xbf8>
 800372e:	f04f 0800 	mov.w	r8, #0
 8003732:	4b92      	ldr	r3, [pc, #584]	; (800397c <_strtod_l+0xbfc>)
 8003734:	403b      	ands	r3, r7
 8003736:	9311      	str	r3, [sp, #68]	; 0x44
 8003738:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800373a:	4b91      	ldr	r3, [pc, #580]	; (8003980 <_strtod_l+0xc00>)
 800373c:	429a      	cmp	r2, r3
 800373e:	f040 80b2 	bne.w	80038a6 <_strtod_l+0xb26>
 8003742:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8003746:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 800374a:	f1a7 7b54 	sub.w	fp, r7, #55574528	; 0x3500000
 800374e:	ec4b ab10 	vmov	d0, sl, fp
 8003752:	e9cd 2316 	strd	r2, r3, [sp, #88]	; 0x58
 8003756:	e9cd 010c 	strd	r0, r1, [sp, #48]	; 0x30
 800375a:	f001 f917 	bl	800498c <__ulp>
 800375e:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 8003762:	ec53 2b10 	vmov	r2, r3, d0
 8003766:	f7fc ff4f 	bl	8000608 <__aeabi_dmul>
 800376a:	4652      	mov	r2, sl
 800376c:	465b      	mov	r3, fp
 800376e:	f7fc fd95 	bl	800029c <__adddf3>
 8003772:	460b      	mov	r3, r1
 8003774:	4981      	ldr	r1, [pc, #516]	; (800397c <_strtod_l+0xbfc>)
 8003776:	4a83      	ldr	r2, [pc, #524]	; (8003984 <_strtod_l+0xc04>)
 8003778:	4019      	ands	r1, r3
 800377a:	4291      	cmp	r1, r2
 800377c:	4682      	mov	sl, r0
 800377e:	d95e      	bls.n	800383e <_strtod_l+0xabe>
 8003780:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8003782:	f102 7254 	add.w	r2, r2, #55574528	; 0x3500000
 8003786:	4293      	cmp	r3, r2
 8003788:	d103      	bne.n	8003792 <_strtod_l+0xa12>
 800378a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800378c:	3301      	adds	r3, #1
 800378e:	f43f ad43 	beq.w	8003218 <_strtod_l+0x498>
 8003792:	f8df b1fc 	ldr.w	fp, [pc, #508]	; 8003990 <_strtod_l+0xc10>
 8003796:	f04f 3aff 	mov.w	sl, #4294967295
 800379a:	991e      	ldr	r1, [sp, #120]	; 0x78
 800379c:	4620      	mov	r0, r4
 800379e:	f000 fdc9 	bl	8004334 <_Bfree>
 80037a2:	9907      	ldr	r1, [sp, #28]
 80037a4:	4620      	mov	r0, r4
 80037a6:	f000 fdc5 	bl	8004334 <_Bfree>
 80037aa:	4631      	mov	r1, r6
 80037ac:	4620      	mov	r0, r4
 80037ae:	f000 fdc1 	bl	8004334 <_Bfree>
 80037b2:	4629      	mov	r1, r5
 80037b4:	4620      	mov	r0, r4
 80037b6:	f000 fdbd 	bl	8004334 <_Bfree>
 80037ba:	e613      	b.n	80033e4 <_strtod_l+0x664>
 80037bc:	f1ba 0f00 	cmp.w	sl, #0
 80037c0:	d11b      	bne.n	80037fa <_strtod_l+0xa7a>
 80037c2:	f3cb 0313 	ubfx	r3, fp, #0, #20
 80037c6:	b9f3      	cbnz	r3, 8003806 <_strtod_l+0xa86>
 80037c8:	4b6b      	ldr	r3, [pc, #428]	; (8003978 <_strtod_l+0xbf8>)
 80037ca:	2200      	movs	r2, #0
 80037cc:	4640      	mov	r0, r8
 80037ce:	4649      	mov	r1, r9
 80037d0:	f7fd f98c 	bl	8000aec <__aeabi_dcmplt>
 80037d4:	b9d0      	cbnz	r0, 800380c <_strtod_l+0xa8c>
 80037d6:	4640      	mov	r0, r8
 80037d8:	4649      	mov	r1, r9
 80037da:	4b6b      	ldr	r3, [pc, #428]	; (8003988 <_strtod_l+0xc08>)
 80037dc:	2200      	movs	r2, #0
 80037de:	f7fc ff13 	bl	8000608 <__aeabi_dmul>
 80037e2:	4680      	mov	r8, r0
 80037e4:	4689      	mov	r9, r1
 80037e6:	f109 4300 	add.w	r3, r9, #2147483648	; 0x80000000
 80037ea:	f8cd 8068 	str.w	r8, [sp, #104]	; 0x68
 80037ee:	931b      	str	r3, [sp, #108]	; 0x6c
 80037f0:	e9dd 231a 	ldrd	r2, r3, [sp, #104]	; 0x68
 80037f4:	e9cd 230c 	strd	r2, r3, [sp, #48]	; 0x30
 80037f8:	e79b      	b.n	8003732 <_strtod_l+0x9b2>
 80037fa:	f1ba 0f01 	cmp.w	sl, #1
 80037fe:	d102      	bne.n	8003806 <_strtod_l+0xa86>
 8003800:	2f00      	cmp	r7, #0
 8003802:	f43f ad7e 	beq.w	8003302 <_strtod_l+0x582>
 8003806:	4b61      	ldr	r3, [pc, #388]	; (800398c <_strtod_l+0xc0c>)
 8003808:	2200      	movs	r2, #0
 800380a:	e78c      	b.n	8003726 <_strtod_l+0x9a6>
 800380c:	f8df 9178 	ldr.w	r9, [pc, #376]	; 8003988 <_strtod_l+0xc08>
 8003810:	f04f 0800 	mov.w	r8, #0
 8003814:	e7e7      	b.n	80037e6 <_strtod_l+0xa66>
 8003816:	4b5c      	ldr	r3, [pc, #368]	; (8003988 <_strtod_l+0xc08>)
 8003818:	4640      	mov	r0, r8
 800381a:	4649      	mov	r1, r9
 800381c:	2200      	movs	r2, #0
 800381e:	f7fc fef3 	bl	8000608 <__aeabi_dmul>
 8003822:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8003824:	4680      	mov	r8, r0
 8003826:	4689      	mov	r9, r1
 8003828:	b933      	cbnz	r3, 8003838 <_strtod_l+0xab8>
 800382a:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 800382e:	9012      	str	r0, [sp, #72]	; 0x48
 8003830:	9313      	str	r3, [sp, #76]	; 0x4c
 8003832:	e9dd 2312 	ldrd	r2, r3, [sp, #72]	; 0x48
 8003836:	e7dd      	b.n	80037f4 <_strtod_l+0xa74>
 8003838:	e9cd 8912 	strd	r8, r9, [sp, #72]	; 0x48
 800383c:	e7f9      	b.n	8003832 <_strtod_l+0xab2>
 800383e:	f103 7b54 	add.w	fp, r3, #55574528	; 0x3500000
 8003842:	9b04      	ldr	r3, [sp, #16]
 8003844:	2b00      	cmp	r3, #0
 8003846:	d1a8      	bne.n	800379a <_strtod_l+0xa1a>
 8003848:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
 800384c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800384e:	0d1b      	lsrs	r3, r3, #20
 8003850:	051b      	lsls	r3, r3, #20
 8003852:	429a      	cmp	r2, r3
 8003854:	d1a1      	bne.n	800379a <_strtod_l+0xa1a>
 8003856:	4640      	mov	r0, r8
 8003858:	4649      	mov	r1, r9
 800385a:	f7fd fa1d 	bl	8000c98 <__aeabi_d2lz>
 800385e:	f7fc fea5 	bl	80005ac <__aeabi_l2d>
 8003862:	4602      	mov	r2, r0
 8003864:	460b      	mov	r3, r1
 8003866:	4640      	mov	r0, r8
 8003868:	4649      	mov	r1, r9
 800386a:	f7fc fd15 	bl	8000298 <__aeabi_dsub>
 800386e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8003870:	f3cb 0313 	ubfx	r3, fp, #0, #20
 8003874:	ea43 030a 	orr.w	r3, r3, sl
 8003878:	4313      	orrs	r3, r2
 800387a:	4680      	mov	r8, r0
 800387c:	4689      	mov	r9, r1
 800387e:	d053      	beq.n	8003928 <_strtod_l+0xba8>
 8003880:	a335      	add	r3, pc, #212	; (adr r3, 8003958 <_strtod_l+0xbd8>)
 8003882:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003886:	f7fd f931 	bl	8000aec <__aeabi_dcmplt>
 800388a:	2800      	cmp	r0, #0
 800388c:	f47f acce 	bne.w	800322c <_strtod_l+0x4ac>
 8003890:	a333      	add	r3, pc, #204	; (adr r3, 8003960 <_strtod_l+0xbe0>)
 8003892:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003896:	4640      	mov	r0, r8
 8003898:	4649      	mov	r1, r9
 800389a:	f7fd f945 	bl	8000b28 <__aeabi_dcmpgt>
 800389e:	2800      	cmp	r0, #0
 80038a0:	f43f af7b 	beq.w	800379a <_strtod_l+0xa1a>
 80038a4:	e4c2      	b.n	800322c <_strtod_l+0x4ac>
 80038a6:	9b04      	ldr	r3, [sp, #16]
 80038a8:	b333      	cbz	r3, 80038f8 <_strtod_l+0xb78>
 80038aa:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80038ac:	f1b3 6fd4 	cmp.w	r3, #111149056	; 0x6a00000
 80038b0:	d822      	bhi.n	80038f8 <_strtod_l+0xb78>
 80038b2:	a32d      	add	r3, pc, #180	; (adr r3, 8003968 <_strtod_l+0xbe8>)
 80038b4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80038b8:	4640      	mov	r0, r8
 80038ba:	4649      	mov	r1, r9
 80038bc:	f7fd f920 	bl	8000b00 <__aeabi_dcmple>
 80038c0:	b1a0      	cbz	r0, 80038ec <_strtod_l+0xb6c>
 80038c2:	4649      	mov	r1, r9
 80038c4:	4640      	mov	r0, r8
 80038c6:	f7fd f977 	bl	8000bb8 <__aeabi_d2uiz>
 80038ca:	2801      	cmp	r0, #1
 80038cc:	bf38      	it	cc
 80038ce:	2001      	movcc	r0, #1
 80038d0:	f7fc fe20 	bl	8000514 <__aeabi_ui2d>
 80038d4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80038d6:	4680      	mov	r8, r0
 80038d8:	4689      	mov	r9, r1
 80038da:	bb13      	cbnz	r3, 8003922 <_strtod_l+0xba2>
 80038dc:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 80038e0:	9014      	str	r0, [sp, #80]	; 0x50
 80038e2:	9315      	str	r3, [sp, #84]	; 0x54
 80038e4:	e9dd 2314 	ldrd	r2, r3, [sp, #80]	; 0x50
 80038e8:	e9cd 230c 	strd	r2, r3, [sp, #48]	; 0x30
 80038ec:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80038ee:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80038f0:	f103 63d6 	add.w	r3, r3, #112197632	; 0x6b00000
 80038f4:	1a9b      	subs	r3, r3, r2
 80038f6:	930d      	str	r3, [sp, #52]	; 0x34
 80038f8:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 80038fc:	ed9d 0b0a 	vldr	d0, [sp, #40]	; 0x28
 8003900:	e9cd 010c 	strd	r0, r1, [sp, #48]	; 0x30
 8003904:	f001 f842 	bl	800498c <__ulp>
 8003908:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 800390c:	ec53 2b10 	vmov	r2, r3, d0
 8003910:	f7fc fe7a 	bl	8000608 <__aeabi_dmul>
 8003914:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8003918:	f7fc fcc0 	bl	800029c <__adddf3>
 800391c:	4682      	mov	sl, r0
 800391e:	468b      	mov	fp, r1
 8003920:	e78f      	b.n	8003842 <_strtod_l+0xac2>
 8003922:	e9cd 8914 	strd	r8, r9, [sp, #80]	; 0x50
 8003926:	e7dd      	b.n	80038e4 <_strtod_l+0xb64>
 8003928:	a311      	add	r3, pc, #68	; (adr r3, 8003970 <_strtod_l+0xbf0>)
 800392a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800392e:	f7fd f8dd 	bl	8000aec <__aeabi_dcmplt>
 8003932:	e7b4      	b.n	800389e <_strtod_l+0xb1e>
 8003934:	2300      	movs	r3, #0
 8003936:	930e      	str	r3, [sp, #56]	; 0x38
 8003938:	9a19      	ldr	r2, [sp, #100]	; 0x64
 800393a:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 800393c:	6013      	str	r3, [r2, #0]
 800393e:	f7ff ba65 	b.w	8002e0c <_strtod_l+0x8c>
 8003942:	2b65      	cmp	r3, #101	; 0x65
 8003944:	f43f ab5d 	beq.w	8003002 <_strtod_l+0x282>
 8003948:	2b45      	cmp	r3, #69	; 0x45
 800394a:	f43f ab5a 	beq.w	8003002 <_strtod_l+0x282>
 800394e:	2201      	movs	r2, #1
 8003950:	f7ff bb92 	b.w	8003078 <_strtod_l+0x2f8>
 8003954:	f3af 8000 	nop.w
 8003958:	94a03595 	.word	0x94a03595
 800395c:	3fdfffff 	.word	0x3fdfffff
 8003960:	35afe535 	.word	0x35afe535
 8003964:	3fe00000 	.word	0x3fe00000
 8003968:	ffc00000 	.word	0xffc00000
 800396c:	41dfffff 	.word	0x41dfffff
 8003970:	94a03595 	.word	0x94a03595
 8003974:	3fcfffff 	.word	0x3fcfffff
 8003978:	3ff00000 	.word	0x3ff00000
 800397c:	7ff00000 	.word	0x7ff00000
 8003980:	7fe00000 	.word	0x7fe00000
 8003984:	7c9fffff 	.word	0x7c9fffff
 8003988:	3fe00000 	.word	0x3fe00000
 800398c:	bff00000 	.word	0xbff00000
 8003990:	7fefffff 	.word	0x7fefffff

08003994 <_strtod_r>:
 8003994:	4b01      	ldr	r3, [pc, #4]	; (800399c <_strtod_r+0x8>)
 8003996:	f7ff b9f3 	b.w	8002d80 <_strtod_l>
 800399a:	bf00      	nop
 800399c:	20000070 	.word	0x20000070

080039a0 <_strtol_l.isra.0>:
 80039a0:	2b01      	cmp	r3, #1
 80039a2:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80039a6:	d001      	beq.n	80039ac <_strtol_l.isra.0+0xc>
 80039a8:	2b24      	cmp	r3, #36	; 0x24
 80039aa:	d906      	bls.n	80039ba <_strtol_l.isra.0+0x1a>
 80039ac:	f7fe fe28 	bl	8002600 <__errno>
 80039b0:	2316      	movs	r3, #22
 80039b2:	6003      	str	r3, [r0, #0]
 80039b4:	2000      	movs	r0, #0
 80039b6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80039ba:	4f3a      	ldr	r7, [pc, #232]	; (8003aa4 <_strtol_l.isra.0+0x104>)
 80039bc:	468e      	mov	lr, r1
 80039be:	4676      	mov	r6, lr
 80039c0:	f81e 4b01 	ldrb.w	r4, [lr], #1
 80039c4:	5de5      	ldrb	r5, [r4, r7]
 80039c6:	f015 0508 	ands.w	r5, r5, #8
 80039ca:	d1f8      	bne.n	80039be <_strtol_l.isra.0+0x1e>
 80039cc:	2c2d      	cmp	r4, #45	; 0x2d
 80039ce:	d134      	bne.n	8003a3a <_strtol_l.isra.0+0x9a>
 80039d0:	f89e 4000 	ldrb.w	r4, [lr]
 80039d4:	f04f 0801 	mov.w	r8, #1
 80039d8:	f106 0e02 	add.w	lr, r6, #2
 80039dc:	2b00      	cmp	r3, #0
 80039de:	d05c      	beq.n	8003a9a <_strtol_l.isra.0+0xfa>
 80039e0:	2b10      	cmp	r3, #16
 80039e2:	d10c      	bne.n	80039fe <_strtol_l.isra.0+0x5e>
 80039e4:	2c30      	cmp	r4, #48	; 0x30
 80039e6:	d10a      	bne.n	80039fe <_strtol_l.isra.0+0x5e>
 80039e8:	f89e 4000 	ldrb.w	r4, [lr]
 80039ec:	f004 04df 	and.w	r4, r4, #223	; 0xdf
 80039f0:	2c58      	cmp	r4, #88	; 0x58
 80039f2:	d14d      	bne.n	8003a90 <_strtol_l.isra.0+0xf0>
 80039f4:	f89e 4001 	ldrb.w	r4, [lr, #1]
 80039f8:	2310      	movs	r3, #16
 80039fa:	f10e 0e02 	add.w	lr, lr, #2
 80039fe:	f108 4c00 	add.w	ip, r8, #2147483648	; 0x80000000
 8003a02:	f10c 3cff 	add.w	ip, ip, #4294967295
 8003a06:	2600      	movs	r6, #0
 8003a08:	fbbc f9f3 	udiv	r9, ip, r3
 8003a0c:	4635      	mov	r5, r6
 8003a0e:	fb03 ca19 	mls	sl, r3, r9, ip
 8003a12:	f1a4 0730 	sub.w	r7, r4, #48	; 0x30
 8003a16:	2f09      	cmp	r7, #9
 8003a18:	d818      	bhi.n	8003a4c <_strtol_l.isra.0+0xac>
 8003a1a:	463c      	mov	r4, r7
 8003a1c:	42a3      	cmp	r3, r4
 8003a1e:	dd24      	ble.n	8003a6a <_strtol_l.isra.0+0xca>
 8003a20:	2e00      	cmp	r6, #0
 8003a22:	db1f      	blt.n	8003a64 <_strtol_l.isra.0+0xc4>
 8003a24:	45a9      	cmp	r9, r5
 8003a26:	d31d      	bcc.n	8003a64 <_strtol_l.isra.0+0xc4>
 8003a28:	d101      	bne.n	8003a2e <_strtol_l.isra.0+0x8e>
 8003a2a:	45a2      	cmp	sl, r4
 8003a2c:	db1a      	blt.n	8003a64 <_strtol_l.isra.0+0xc4>
 8003a2e:	fb05 4503 	mla	r5, r5, r3, r4
 8003a32:	2601      	movs	r6, #1
 8003a34:	f81e 4b01 	ldrb.w	r4, [lr], #1
 8003a38:	e7eb      	b.n	8003a12 <_strtol_l.isra.0+0x72>
 8003a3a:	2c2b      	cmp	r4, #43	; 0x2b
 8003a3c:	bf08      	it	eq
 8003a3e:	f89e 4000 	ldrbeq.w	r4, [lr]
 8003a42:	46a8      	mov	r8, r5
 8003a44:	bf08      	it	eq
 8003a46:	f106 0e02 	addeq.w	lr, r6, #2
 8003a4a:	e7c7      	b.n	80039dc <_strtol_l.isra.0+0x3c>
 8003a4c:	f1a4 0741 	sub.w	r7, r4, #65	; 0x41
 8003a50:	2f19      	cmp	r7, #25
 8003a52:	d801      	bhi.n	8003a58 <_strtol_l.isra.0+0xb8>
 8003a54:	3c37      	subs	r4, #55	; 0x37
 8003a56:	e7e1      	b.n	8003a1c <_strtol_l.isra.0+0x7c>
 8003a58:	f1a4 0761 	sub.w	r7, r4, #97	; 0x61
 8003a5c:	2f19      	cmp	r7, #25
 8003a5e:	d804      	bhi.n	8003a6a <_strtol_l.isra.0+0xca>
 8003a60:	3c57      	subs	r4, #87	; 0x57
 8003a62:	e7db      	b.n	8003a1c <_strtol_l.isra.0+0x7c>
 8003a64:	f04f 36ff 	mov.w	r6, #4294967295
 8003a68:	e7e4      	b.n	8003a34 <_strtol_l.isra.0+0x94>
 8003a6a:	2e00      	cmp	r6, #0
 8003a6c:	da05      	bge.n	8003a7a <_strtol_l.isra.0+0xda>
 8003a6e:	2322      	movs	r3, #34	; 0x22
 8003a70:	6003      	str	r3, [r0, #0]
 8003a72:	4665      	mov	r5, ip
 8003a74:	b942      	cbnz	r2, 8003a88 <_strtol_l.isra.0+0xe8>
 8003a76:	4628      	mov	r0, r5
 8003a78:	e79d      	b.n	80039b6 <_strtol_l.isra.0+0x16>
 8003a7a:	f1b8 0f00 	cmp.w	r8, #0
 8003a7e:	d000      	beq.n	8003a82 <_strtol_l.isra.0+0xe2>
 8003a80:	426d      	negs	r5, r5
 8003a82:	2a00      	cmp	r2, #0
 8003a84:	d0f7      	beq.n	8003a76 <_strtol_l.isra.0+0xd6>
 8003a86:	b10e      	cbz	r6, 8003a8c <_strtol_l.isra.0+0xec>
 8003a88:	f10e 31ff 	add.w	r1, lr, #4294967295
 8003a8c:	6011      	str	r1, [r2, #0]
 8003a8e:	e7f2      	b.n	8003a76 <_strtol_l.isra.0+0xd6>
 8003a90:	2430      	movs	r4, #48	; 0x30
 8003a92:	2b00      	cmp	r3, #0
 8003a94:	d1b3      	bne.n	80039fe <_strtol_l.isra.0+0x5e>
 8003a96:	2308      	movs	r3, #8
 8003a98:	e7b1      	b.n	80039fe <_strtol_l.isra.0+0x5e>
 8003a9a:	2c30      	cmp	r4, #48	; 0x30
 8003a9c:	d0a4      	beq.n	80039e8 <_strtol_l.isra.0+0x48>
 8003a9e:	230a      	movs	r3, #10
 8003aa0:	e7ad      	b.n	80039fe <_strtol_l.isra.0+0x5e>
 8003aa2:	bf00      	nop
 8003aa4:	08007e6d 	.word	0x08007e6d

08003aa8 <_strtol_r>:
 8003aa8:	f7ff bf7a 	b.w	80039a0 <_strtol_l.isra.0>

08003aac <_write_r>:
 8003aac:	b538      	push	{r3, r4, r5, lr}
 8003aae:	4d07      	ldr	r5, [pc, #28]	; (8003acc <_write_r+0x20>)
 8003ab0:	4604      	mov	r4, r0
 8003ab2:	4608      	mov	r0, r1
 8003ab4:	4611      	mov	r1, r2
 8003ab6:	2200      	movs	r2, #0
 8003ab8:	602a      	str	r2, [r5, #0]
 8003aba:	461a      	mov	r2, r3
 8003abc:	f7fd fcff 	bl	80014be <_write>
 8003ac0:	1c43      	adds	r3, r0, #1
 8003ac2:	d102      	bne.n	8003aca <_write_r+0x1e>
 8003ac4:	682b      	ldr	r3, [r5, #0]
 8003ac6:	b103      	cbz	r3, 8003aca <_write_r+0x1e>
 8003ac8:	6023      	str	r3, [r4, #0]
 8003aca:	bd38      	pop	{r3, r4, r5, pc}
 8003acc:	20000218 	.word	0x20000218

08003ad0 <__assert_func>:
 8003ad0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8003ad2:	4614      	mov	r4, r2
 8003ad4:	461a      	mov	r2, r3
 8003ad6:	4b09      	ldr	r3, [pc, #36]	; (8003afc <__assert_func+0x2c>)
 8003ad8:	681b      	ldr	r3, [r3, #0]
 8003ada:	4605      	mov	r5, r0
 8003adc:	68d8      	ldr	r0, [r3, #12]
 8003ade:	b14c      	cbz	r4, 8003af4 <__assert_func+0x24>
 8003ae0:	4b07      	ldr	r3, [pc, #28]	; (8003b00 <__assert_func+0x30>)
 8003ae2:	9100      	str	r1, [sp, #0]
 8003ae4:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8003ae8:	4906      	ldr	r1, [pc, #24]	; (8003b04 <__assert_func+0x34>)
 8003aea:	462b      	mov	r3, r5
 8003aec:	f000 f81e 	bl	8003b2c <fiprintf>
 8003af0:	f002 fa00 	bl	8005ef4 <abort>
 8003af4:	4b04      	ldr	r3, [pc, #16]	; (8003b08 <__assert_func+0x38>)
 8003af6:	461c      	mov	r4, r3
 8003af8:	e7f3      	b.n	8003ae2 <__assert_func+0x12>
 8003afa:	bf00      	nop
 8003afc:	20000008 	.word	0x20000008
 8003b00:	08007e30 	.word	0x08007e30
 8003b04:	08007e3d 	.word	0x08007e3d
 8003b08:	08007e6b 	.word	0x08007e6b

08003b0c <_close_r>:
 8003b0c:	b538      	push	{r3, r4, r5, lr}
 8003b0e:	4d06      	ldr	r5, [pc, #24]	; (8003b28 <_close_r+0x1c>)
 8003b10:	2300      	movs	r3, #0
 8003b12:	4604      	mov	r4, r0
 8003b14:	4608      	mov	r0, r1
 8003b16:	602b      	str	r3, [r5, #0]
 8003b18:	f7fd fced 	bl	80014f6 <_close>
 8003b1c:	1c43      	adds	r3, r0, #1
 8003b1e:	d102      	bne.n	8003b26 <_close_r+0x1a>
 8003b20:	682b      	ldr	r3, [r5, #0]
 8003b22:	b103      	cbz	r3, 8003b26 <_close_r+0x1a>
 8003b24:	6023      	str	r3, [r4, #0]
 8003b26:	bd38      	pop	{r3, r4, r5, pc}
 8003b28:	20000218 	.word	0x20000218

08003b2c <fiprintf>:
 8003b2c:	b40e      	push	{r1, r2, r3}
 8003b2e:	b503      	push	{r0, r1, lr}
 8003b30:	4601      	mov	r1, r0
 8003b32:	ab03      	add	r3, sp, #12
 8003b34:	4805      	ldr	r0, [pc, #20]	; (8003b4c <fiprintf+0x20>)
 8003b36:	f853 2b04 	ldr.w	r2, [r3], #4
 8003b3a:	6800      	ldr	r0, [r0, #0]
 8003b3c:	9301      	str	r3, [sp, #4]
 8003b3e:	f001 fbdb 	bl	80052f8 <_vfiprintf_r>
 8003b42:	b002      	add	sp, #8
 8003b44:	f85d eb04 	ldr.w	lr, [sp], #4
 8003b48:	b003      	add	sp, #12
 8003b4a:	4770      	bx	lr
 8003b4c:	20000008 	.word	0x20000008

08003b50 <rshift>:
 8003b50:	6903      	ldr	r3, [r0, #16]
 8003b52:	ebb3 1f61 	cmp.w	r3, r1, asr #5
 8003b56:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8003b5a:	ea4f 1261 	mov.w	r2, r1, asr #5
 8003b5e:	f100 0414 	add.w	r4, r0, #20
 8003b62:	dd45      	ble.n	8003bf0 <rshift+0xa0>
 8003b64:	f011 011f 	ands.w	r1, r1, #31
 8003b68:	eb04 0683 	add.w	r6, r4, r3, lsl #2
 8003b6c:	eb04 0582 	add.w	r5, r4, r2, lsl #2
 8003b70:	d10c      	bne.n	8003b8c <rshift+0x3c>
 8003b72:	f100 0710 	add.w	r7, r0, #16
 8003b76:	4629      	mov	r1, r5
 8003b78:	42b1      	cmp	r1, r6
 8003b7a:	d334      	bcc.n	8003be6 <rshift+0x96>
 8003b7c:	1a9b      	subs	r3, r3, r2
 8003b7e:	009b      	lsls	r3, r3, #2
 8003b80:	1eea      	subs	r2, r5, #3
 8003b82:	4296      	cmp	r6, r2
 8003b84:	bf38      	it	cc
 8003b86:	2300      	movcc	r3, #0
 8003b88:	4423      	add	r3, r4
 8003b8a:	e015      	b.n	8003bb8 <rshift+0x68>
 8003b8c:	f854 7022 	ldr.w	r7, [r4, r2, lsl #2]
 8003b90:	f1c1 0820 	rsb	r8, r1, #32
 8003b94:	40cf      	lsrs	r7, r1
 8003b96:	f105 0e04 	add.w	lr, r5, #4
 8003b9a:	46a1      	mov	r9, r4
 8003b9c:	4576      	cmp	r6, lr
 8003b9e:	46f4      	mov	ip, lr
 8003ba0:	d815      	bhi.n	8003bce <rshift+0x7e>
 8003ba2:	1a9b      	subs	r3, r3, r2
 8003ba4:	009a      	lsls	r2, r3, #2
 8003ba6:	3a04      	subs	r2, #4
 8003ba8:	3501      	adds	r5, #1
 8003baa:	42ae      	cmp	r6, r5
 8003bac:	bf38      	it	cc
 8003bae:	2200      	movcc	r2, #0
 8003bb0:	18a3      	adds	r3, r4, r2
 8003bb2:	50a7      	str	r7, [r4, r2]
 8003bb4:	b107      	cbz	r7, 8003bb8 <rshift+0x68>
 8003bb6:	3304      	adds	r3, #4
 8003bb8:	1b1a      	subs	r2, r3, r4
 8003bba:	42a3      	cmp	r3, r4
 8003bbc:	ea4f 02a2 	mov.w	r2, r2, asr #2
 8003bc0:	bf08      	it	eq
 8003bc2:	2300      	moveq	r3, #0
 8003bc4:	6102      	str	r2, [r0, #16]
 8003bc6:	bf08      	it	eq
 8003bc8:	6143      	streq	r3, [r0, #20]
 8003bca:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8003bce:	f8dc c000 	ldr.w	ip, [ip]
 8003bd2:	fa0c fc08 	lsl.w	ip, ip, r8
 8003bd6:	ea4c 0707 	orr.w	r7, ip, r7
 8003bda:	f849 7b04 	str.w	r7, [r9], #4
 8003bde:	f85e 7b04 	ldr.w	r7, [lr], #4
 8003be2:	40cf      	lsrs	r7, r1
 8003be4:	e7da      	b.n	8003b9c <rshift+0x4c>
 8003be6:	f851 cb04 	ldr.w	ip, [r1], #4
 8003bea:	f847 cf04 	str.w	ip, [r7, #4]!
 8003bee:	e7c3      	b.n	8003b78 <rshift+0x28>
 8003bf0:	4623      	mov	r3, r4
 8003bf2:	e7e1      	b.n	8003bb8 <rshift+0x68>

08003bf4 <__hexdig_fun>:
 8003bf4:	f1a0 0330 	sub.w	r3, r0, #48	; 0x30
 8003bf8:	2b09      	cmp	r3, #9
 8003bfa:	d802      	bhi.n	8003c02 <__hexdig_fun+0xe>
 8003bfc:	3820      	subs	r0, #32
 8003bfe:	b2c0      	uxtb	r0, r0
 8003c00:	4770      	bx	lr
 8003c02:	f1a0 0361 	sub.w	r3, r0, #97	; 0x61
 8003c06:	2b05      	cmp	r3, #5
 8003c08:	d801      	bhi.n	8003c0e <__hexdig_fun+0x1a>
 8003c0a:	3847      	subs	r0, #71	; 0x47
 8003c0c:	e7f7      	b.n	8003bfe <__hexdig_fun+0xa>
 8003c0e:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
 8003c12:	2b05      	cmp	r3, #5
 8003c14:	d801      	bhi.n	8003c1a <__hexdig_fun+0x26>
 8003c16:	3827      	subs	r0, #39	; 0x27
 8003c18:	e7f1      	b.n	8003bfe <__hexdig_fun+0xa>
 8003c1a:	2000      	movs	r0, #0
 8003c1c:	4770      	bx	lr
	...

08003c20 <__gethex>:
 8003c20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003c24:	ed2d 8b02 	vpush	{d8}
 8003c28:	b089      	sub	sp, #36	; 0x24
 8003c2a:	ee08 0a10 	vmov	s16, r0
 8003c2e:	9304      	str	r3, [sp, #16]
 8003c30:	4bbc      	ldr	r3, [pc, #752]	; (8003f24 <__gethex+0x304>)
 8003c32:	681b      	ldr	r3, [r3, #0]
 8003c34:	9301      	str	r3, [sp, #4]
 8003c36:	4618      	mov	r0, r3
 8003c38:	468b      	mov	fp, r1
 8003c3a:	4690      	mov	r8, r2
 8003c3c:	f7fc fad0 	bl	80001e0 <strlen>
 8003c40:	9b01      	ldr	r3, [sp, #4]
 8003c42:	f8db 2000 	ldr.w	r2, [fp]
 8003c46:	4403      	add	r3, r0
 8003c48:	4682      	mov	sl, r0
 8003c4a:	f813 3c01 	ldrb.w	r3, [r3, #-1]
 8003c4e:	9305      	str	r3, [sp, #20]
 8003c50:	1c93      	adds	r3, r2, #2
 8003c52:	f1c2 22ff 	rsb	r2, r2, #4278255360	; 0xff00ff00
 8003c56:	f502 027f 	add.w	r2, r2, #16711680	; 0xff0000
 8003c5a:	32fe      	adds	r2, #254	; 0xfe
 8003c5c:	18d1      	adds	r1, r2, r3
 8003c5e:	461f      	mov	r7, r3
 8003c60:	f813 0b01 	ldrb.w	r0, [r3], #1
 8003c64:	9100      	str	r1, [sp, #0]
 8003c66:	2830      	cmp	r0, #48	; 0x30
 8003c68:	d0f8      	beq.n	8003c5c <__gethex+0x3c>
 8003c6a:	f7ff ffc3 	bl	8003bf4 <__hexdig_fun>
 8003c6e:	4604      	mov	r4, r0
 8003c70:	2800      	cmp	r0, #0
 8003c72:	d13a      	bne.n	8003cea <__gethex+0xca>
 8003c74:	9901      	ldr	r1, [sp, #4]
 8003c76:	4652      	mov	r2, sl
 8003c78:	4638      	mov	r0, r7
 8003c7a:	f001 ffa3 	bl	8005bc4 <strncmp>
 8003c7e:	4605      	mov	r5, r0
 8003c80:	2800      	cmp	r0, #0
 8003c82:	d168      	bne.n	8003d56 <__gethex+0x136>
 8003c84:	f817 000a 	ldrb.w	r0, [r7, sl]
 8003c88:	eb07 060a 	add.w	r6, r7, sl
 8003c8c:	f7ff ffb2 	bl	8003bf4 <__hexdig_fun>
 8003c90:	2800      	cmp	r0, #0
 8003c92:	d062      	beq.n	8003d5a <__gethex+0x13a>
 8003c94:	4633      	mov	r3, r6
 8003c96:	7818      	ldrb	r0, [r3, #0]
 8003c98:	2830      	cmp	r0, #48	; 0x30
 8003c9a:	461f      	mov	r7, r3
 8003c9c:	f103 0301 	add.w	r3, r3, #1
 8003ca0:	d0f9      	beq.n	8003c96 <__gethex+0x76>
 8003ca2:	f7ff ffa7 	bl	8003bf4 <__hexdig_fun>
 8003ca6:	2301      	movs	r3, #1
 8003ca8:	fab0 f480 	clz	r4, r0
 8003cac:	0964      	lsrs	r4, r4, #5
 8003cae:	4635      	mov	r5, r6
 8003cb0:	9300      	str	r3, [sp, #0]
 8003cb2:	463a      	mov	r2, r7
 8003cb4:	4616      	mov	r6, r2
 8003cb6:	3201      	adds	r2, #1
 8003cb8:	7830      	ldrb	r0, [r6, #0]
 8003cba:	f7ff ff9b 	bl	8003bf4 <__hexdig_fun>
 8003cbe:	2800      	cmp	r0, #0
 8003cc0:	d1f8      	bne.n	8003cb4 <__gethex+0x94>
 8003cc2:	9901      	ldr	r1, [sp, #4]
 8003cc4:	4652      	mov	r2, sl
 8003cc6:	4630      	mov	r0, r6
 8003cc8:	f001 ff7c 	bl	8005bc4 <strncmp>
 8003ccc:	b980      	cbnz	r0, 8003cf0 <__gethex+0xd0>
 8003cce:	b94d      	cbnz	r5, 8003ce4 <__gethex+0xc4>
 8003cd0:	eb06 050a 	add.w	r5, r6, sl
 8003cd4:	462a      	mov	r2, r5
 8003cd6:	4616      	mov	r6, r2
 8003cd8:	3201      	adds	r2, #1
 8003cda:	7830      	ldrb	r0, [r6, #0]
 8003cdc:	f7ff ff8a 	bl	8003bf4 <__hexdig_fun>
 8003ce0:	2800      	cmp	r0, #0
 8003ce2:	d1f8      	bne.n	8003cd6 <__gethex+0xb6>
 8003ce4:	1bad      	subs	r5, r5, r6
 8003ce6:	00ad      	lsls	r5, r5, #2
 8003ce8:	e004      	b.n	8003cf4 <__gethex+0xd4>
 8003cea:	2400      	movs	r4, #0
 8003cec:	4625      	mov	r5, r4
 8003cee:	e7e0      	b.n	8003cb2 <__gethex+0x92>
 8003cf0:	2d00      	cmp	r5, #0
 8003cf2:	d1f7      	bne.n	8003ce4 <__gethex+0xc4>
 8003cf4:	7833      	ldrb	r3, [r6, #0]
 8003cf6:	f003 03df 	and.w	r3, r3, #223	; 0xdf
 8003cfa:	2b50      	cmp	r3, #80	; 0x50
 8003cfc:	d13b      	bne.n	8003d76 <__gethex+0x156>
 8003cfe:	7873      	ldrb	r3, [r6, #1]
 8003d00:	2b2b      	cmp	r3, #43	; 0x2b
 8003d02:	d02c      	beq.n	8003d5e <__gethex+0x13e>
 8003d04:	2b2d      	cmp	r3, #45	; 0x2d
 8003d06:	d02e      	beq.n	8003d66 <__gethex+0x146>
 8003d08:	1c71      	adds	r1, r6, #1
 8003d0a:	f04f 0900 	mov.w	r9, #0
 8003d0e:	7808      	ldrb	r0, [r1, #0]
 8003d10:	f7ff ff70 	bl	8003bf4 <__hexdig_fun>
 8003d14:	1e43      	subs	r3, r0, #1
 8003d16:	b2db      	uxtb	r3, r3
 8003d18:	2b18      	cmp	r3, #24
 8003d1a:	d82c      	bhi.n	8003d76 <__gethex+0x156>
 8003d1c:	f1a0 0210 	sub.w	r2, r0, #16
 8003d20:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 8003d24:	f7ff ff66 	bl	8003bf4 <__hexdig_fun>
 8003d28:	1e43      	subs	r3, r0, #1
 8003d2a:	b2db      	uxtb	r3, r3
 8003d2c:	2b18      	cmp	r3, #24
 8003d2e:	d91d      	bls.n	8003d6c <__gethex+0x14c>
 8003d30:	f1b9 0f00 	cmp.w	r9, #0
 8003d34:	d000      	beq.n	8003d38 <__gethex+0x118>
 8003d36:	4252      	negs	r2, r2
 8003d38:	4415      	add	r5, r2
 8003d3a:	f8cb 1000 	str.w	r1, [fp]
 8003d3e:	b1e4      	cbz	r4, 8003d7a <__gethex+0x15a>
 8003d40:	9b00      	ldr	r3, [sp, #0]
 8003d42:	2b00      	cmp	r3, #0
 8003d44:	bf14      	ite	ne
 8003d46:	2700      	movne	r7, #0
 8003d48:	2706      	moveq	r7, #6
 8003d4a:	4638      	mov	r0, r7
 8003d4c:	b009      	add	sp, #36	; 0x24
 8003d4e:	ecbd 8b02 	vpop	{d8}
 8003d52:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003d56:	463e      	mov	r6, r7
 8003d58:	4625      	mov	r5, r4
 8003d5a:	2401      	movs	r4, #1
 8003d5c:	e7ca      	b.n	8003cf4 <__gethex+0xd4>
 8003d5e:	f04f 0900 	mov.w	r9, #0
 8003d62:	1cb1      	adds	r1, r6, #2
 8003d64:	e7d3      	b.n	8003d0e <__gethex+0xee>
 8003d66:	f04f 0901 	mov.w	r9, #1
 8003d6a:	e7fa      	b.n	8003d62 <__gethex+0x142>
 8003d6c:	230a      	movs	r3, #10
 8003d6e:	fb03 0202 	mla	r2, r3, r2, r0
 8003d72:	3a10      	subs	r2, #16
 8003d74:	e7d4      	b.n	8003d20 <__gethex+0x100>
 8003d76:	4631      	mov	r1, r6
 8003d78:	e7df      	b.n	8003d3a <__gethex+0x11a>
 8003d7a:	1bf3      	subs	r3, r6, r7
 8003d7c:	3b01      	subs	r3, #1
 8003d7e:	4621      	mov	r1, r4
 8003d80:	2b07      	cmp	r3, #7
 8003d82:	dc0b      	bgt.n	8003d9c <__gethex+0x17c>
 8003d84:	ee18 0a10 	vmov	r0, s16
 8003d88:	f000 fa94 	bl	80042b4 <_Balloc>
 8003d8c:	4604      	mov	r4, r0
 8003d8e:	b940      	cbnz	r0, 8003da2 <__gethex+0x182>
 8003d90:	4b65      	ldr	r3, [pc, #404]	; (8003f28 <__gethex+0x308>)
 8003d92:	4602      	mov	r2, r0
 8003d94:	21de      	movs	r1, #222	; 0xde
 8003d96:	4865      	ldr	r0, [pc, #404]	; (8003f2c <__gethex+0x30c>)
 8003d98:	f7ff fe9a 	bl	8003ad0 <__assert_func>
 8003d9c:	3101      	adds	r1, #1
 8003d9e:	105b      	asrs	r3, r3, #1
 8003da0:	e7ee      	b.n	8003d80 <__gethex+0x160>
 8003da2:	f100 0914 	add.w	r9, r0, #20
 8003da6:	f04f 0b00 	mov.w	fp, #0
 8003daa:	f1ca 0301 	rsb	r3, sl, #1
 8003dae:	f8cd 9008 	str.w	r9, [sp, #8]
 8003db2:	f8cd b000 	str.w	fp, [sp]
 8003db6:	9306      	str	r3, [sp, #24]
 8003db8:	42b7      	cmp	r7, r6
 8003dba:	d340      	bcc.n	8003e3e <__gethex+0x21e>
 8003dbc:	9802      	ldr	r0, [sp, #8]
 8003dbe:	9b00      	ldr	r3, [sp, #0]
 8003dc0:	f840 3b04 	str.w	r3, [r0], #4
 8003dc4:	eba0 0009 	sub.w	r0, r0, r9
 8003dc8:	1080      	asrs	r0, r0, #2
 8003dca:	0146      	lsls	r6, r0, #5
 8003dcc:	6120      	str	r0, [r4, #16]
 8003dce:	4618      	mov	r0, r3
 8003dd0:	f000 fb66 	bl	80044a0 <__hi0bits>
 8003dd4:	1a30      	subs	r0, r6, r0
 8003dd6:	f8d8 6000 	ldr.w	r6, [r8]
 8003dda:	42b0      	cmp	r0, r6
 8003ddc:	dd63      	ble.n	8003ea6 <__gethex+0x286>
 8003dde:	1b87      	subs	r7, r0, r6
 8003de0:	4639      	mov	r1, r7
 8003de2:	4620      	mov	r0, r4
 8003de4:	f000 ff00 	bl	8004be8 <__any_on>
 8003de8:	4682      	mov	sl, r0
 8003dea:	b1a8      	cbz	r0, 8003e18 <__gethex+0x1f8>
 8003dec:	1e7b      	subs	r3, r7, #1
 8003dee:	1159      	asrs	r1, r3, #5
 8003df0:	f003 021f 	and.w	r2, r3, #31
 8003df4:	f859 1021 	ldr.w	r1, [r9, r1, lsl #2]
 8003df8:	f04f 0a01 	mov.w	sl, #1
 8003dfc:	fa0a f202 	lsl.w	r2, sl, r2
 8003e00:	420a      	tst	r2, r1
 8003e02:	d009      	beq.n	8003e18 <__gethex+0x1f8>
 8003e04:	4553      	cmp	r3, sl
 8003e06:	dd05      	ble.n	8003e14 <__gethex+0x1f4>
 8003e08:	1eb9      	subs	r1, r7, #2
 8003e0a:	4620      	mov	r0, r4
 8003e0c:	f000 feec 	bl	8004be8 <__any_on>
 8003e10:	2800      	cmp	r0, #0
 8003e12:	d145      	bne.n	8003ea0 <__gethex+0x280>
 8003e14:	f04f 0a02 	mov.w	sl, #2
 8003e18:	4639      	mov	r1, r7
 8003e1a:	4620      	mov	r0, r4
 8003e1c:	f7ff fe98 	bl	8003b50 <rshift>
 8003e20:	443d      	add	r5, r7
 8003e22:	f8d8 3008 	ldr.w	r3, [r8, #8]
 8003e26:	42ab      	cmp	r3, r5
 8003e28:	da4c      	bge.n	8003ec4 <__gethex+0x2a4>
 8003e2a:	ee18 0a10 	vmov	r0, s16
 8003e2e:	4621      	mov	r1, r4
 8003e30:	f000 fa80 	bl	8004334 <_Bfree>
 8003e34:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8003e36:	2300      	movs	r3, #0
 8003e38:	6013      	str	r3, [r2, #0]
 8003e3a:	27a3      	movs	r7, #163	; 0xa3
 8003e3c:	e785      	b.n	8003d4a <__gethex+0x12a>
 8003e3e:	1e73      	subs	r3, r6, #1
 8003e40:	9a05      	ldr	r2, [sp, #20]
 8003e42:	9303      	str	r3, [sp, #12]
 8003e44:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 8003e48:	4293      	cmp	r3, r2
 8003e4a:	d019      	beq.n	8003e80 <__gethex+0x260>
 8003e4c:	f1bb 0f20 	cmp.w	fp, #32
 8003e50:	d107      	bne.n	8003e62 <__gethex+0x242>
 8003e52:	9b02      	ldr	r3, [sp, #8]
 8003e54:	9a00      	ldr	r2, [sp, #0]
 8003e56:	f843 2b04 	str.w	r2, [r3], #4
 8003e5a:	9302      	str	r3, [sp, #8]
 8003e5c:	2300      	movs	r3, #0
 8003e5e:	9300      	str	r3, [sp, #0]
 8003e60:	469b      	mov	fp, r3
 8003e62:	f816 0c01 	ldrb.w	r0, [r6, #-1]
 8003e66:	f7ff fec5 	bl	8003bf4 <__hexdig_fun>
 8003e6a:	9b00      	ldr	r3, [sp, #0]
 8003e6c:	f000 000f 	and.w	r0, r0, #15
 8003e70:	fa00 f00b 	lsl.w	r0, r0, fp
 8003e74:	4303      	orrs	r3, r0
 8003e76:	9300      	str	r3, [sp, #0]
 8003e78:	f10b 0b04 	add.w	fp, fp, #4
 8003e7c:	9b03      	ldr	r3, [sp, #12]
 8003e7e:	e00d      	b.n	8003e9c <__gethex+0x27c>
 8003e80:	9b03      	ldr	r3, [sp, #12]
 8003e82:	9a06      	ldr	r2, [sp, #24]
 8003e84:	4413      	add	r3, r2
 8003e86:	42bb      	cmp	r3, r7
 8003e88:	d3e0      	bcc.n	8003e4c <__gethex+0x22c>
 8003e8a:	4618      	mov	r0, r3
 8003e8c:	9901      	ldr	r1, [sp, #4]
 8003e8e:	9307      	str	r3, [sp, #28]
 8003e90:	4652      	mov	r2, sl
 8003e92:	f001 fe97 	bl	8005bc4 <strncmp>
 8003e96:	9b07      	ldr	r3, [sp, #28]
 8003e98:	2800      	cmp	r0, #0
 8003e9a:	d1d7      	bne.n	8003e4c <__gethex+0x22c>
 8003e9c:	461e      	mov	r6, r3
 8003e9e:	e78b      	b.n	8003db8 <__gethex+0x198>
 8003ea0:	f04f 0a03 	mov.w	sl, #3
 8003ea4:	e7b8      	b.n	8003e18 <__gethex+0x1f8>
 8003ea6:	da0a      	bge.n	8003ebe <__gethex+0x29e>
 8003ea8:	1a37      	subs	r7, r6, r0
 8003eaa:	4621      	mov	r1, r4
 8003eac:	ee18 0a10 	vmov	r0, s16
 8003eb0:	463a      	mov	r2, r7
 8003eb2:	f000 fc5b 	bl	800476c <__lshift>
 8003eb6:	1bed      	subs	r5, r5, r7
 8003eb8:	4604      	mov	r4, r0
 8003eba:	f100 0914 	add.w	r9, r0, #20
 8003ebe:	f04f 0a00 	mov.w	sl, #0
 8003ec2:	e7ae      	b.n	8003e22 <__gethex+0x202>
 8003ec4:	f8d8 0004 	ldr.w	r0, [r8, #4]
 8003ec8:	42a8      	cmp	r0, r5
 8003eca:	dd72      	ble.n	8003fb2 <__gethex+0x392>
 8003ecc:	1b45      	subs	r5, r0, r5
 8003ece:	42ae      	cmp	r6, r5
 8003ed0:	dc36      	bgt.n	8003f40 <__gethex+0x320>
 8003ed2:	f8d8 300c 	ldr.w	r3, [r8, #12]
 8003ed6:	2b02      	cmp	r3, #2
 8003ed8:	d02a      	beq.n	8003f30 <__gethex+0x310>
 8003eda:	2b03      	cmp	r3, #3
 8003edc:	d02c      	beq.n	8003f38 <__gethex+0x318>
 8003ede:	2b01      	cmp	r3, #1
 8003ee0:	d115      	bne.n	8003f0e <__gethex+0x2ee>
 8003ee2:	42ae      	cmp	r6, r5
 8003ee4:	d113      	bne.n	8003f0e <__gethex+0x2ee>
 8003ee6:	2e01      	cmp	r6, #1
 8003ee8:	d10b      	bne.n	8003f02 <__gethex+0x2e2>
 8003eea:	9a04      	ldr	r2, [sp, #16]
 8003eec:	f8d8 3004 	ldr.w	r3, [r8, #4]
 8003ef0:	6013      	str	r3, [r2, #0]
 8003ef2:	2301      	movs	r3, #1
 8003ef4:	6123      	str	r3, [r4, #16]
 8003ef6:	f8c9 3000 	str.w	r3, [r9]
 8003efa:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8003efc:	2762      	movs	r7, #98	; 0x62
 8003efe:	601c      	str	r4, [r3, #0]
 8003f00:	e723      	b.n	8003d4a <__gethex+0x12a>
 8003f02:	1e71      	subs	r1, r6, #1
 8003f04:	4620      	mov	r0, r4
 8003f06:	f000 fe6f 	bl	8004be8 <__any_on>
 8003f0a:	2800      	cmp	r0, #0
 8003f0c:	d1ed      	bne.n	8003eea <__gethex+0x2ca>
 8003f0e:	ee18 0a10 	vmov	r0, s16
 8003f12:	4621      	mov	r1, r4
 8003f14:	f000 fa0e 	bl	8004334 <_Bfree>
 8003f18:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8003f1a:	2300      	movs	r3, #0
 8003f1c:	6013      	str	r3, [r2, #0]
 8003f1e:	2750      	movs	r7, #80	; 0x50
 8003f20:	e713      	b.n	8003d4a <__gethex+0x12a>
 8003f22:	bf00      	nop
 8003f24:	08007fe8 	.word	0x08007fe8
 8003f28:	08007f6d 	.word	0x08007f6d
 8003f2c:	08007f7e 	.word	0x08007f7e
 8003f30:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8003f32:	2b00      	cmp	r3, #0
 8003f34:	d1eb      	bne.n	8003f0e <__gethex+0x2ee>
 8003f36:	e7d8      	b.n	8003eea <__gethex+0x2ca>
 8003f38:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8003f3a:	2b00      	cmp	r3, #0
 8003f3c:	d1d5      	bne.n	8003eea <__gethex+0x2ca>
 8003f3e:	e7e6      	b.n	8003f0e <__gethex+0x2ee>
 8003f40:	1e6f      	subs	r7, r5, #1
 8003f42:	f1ba 0f00 	cmp.w	sl, #0
 8003f46:	d131      	bne.n	8003fac <__gethex+0x38c>
 8003f48:	b127      	cbz	r7, 8003f54 <__gethex+0x334>
 8003f4a:	4639      	mov	r1, r7
 8003f4c:	4620      	mov	r0, r4
 8003f4e:	f000 fe4b 	bl	8004be8 <__any_on>
 8003f52:	4682      	mov	sl, r0
 8003f54:	117b      	asrs	r3, r7, #5
 8003f56:	2101      	movs	r1, #1
 8003f58:	f859 3023 	ldr.w	r3, [r9, r3, lsl #2]
 8003f5c:	f007 071f 	and.w	r7, r7, #31
 8003f60:	fa01 f707 	lsl.w	r7, r1, r7
 8003f64:	421f      	tst	r7, r3
 8003f66:	4629      	mov	r1, r5
 8003f68:	4620      	mov	r0, r4
 8003f6a:	bf18      	it	ne
 8003f6c:	f04a 0a02 	orrne.w	sl, sl, #2
 8003f70:	1b76      	subs	r6, r6, r5
 8003f72:	f7ff fded 	bl	8003b50 <rshift>
 8003f76:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8003f7a:	2702      	movs	r7, #2
 8003f7c:	f1ba 0f00 	cmp.w	sl, #0
 8003f80:	d048      	beq.n	8004014 <__gethex+0x3f4>
 8003f82:	f8d8 300c 	ldr.w	r3, [r8, #12]
 8003f86:	2b02      	cmp	r3, #2
 8003f88:	d015      	beq.n	8003fb6 <__gethex+0x396>
 8003f8a:	2b03      	cmp	r3, #3
 8003f8c:	d017      	beq.n	8003fbe <__gethex+0x39e>
 8003f8e:	2b01      	cmp	r3, #1
 8003f90:	d109      	bne.n	8003fa6 <__gethex+0x386>
 8003f92:	f01a 0f02 	tst.w	sl, #2
 8003f96:	d006      	beq.n	8003fa6 <__gethex+0x386>
 8003f98:	f8d9 0000 	ldr.w	r0, [r9]
 8003f9c:	ea4a 0a00 	orr.w	sl, sl, r0
 8003fa0:	f01a 0f01 	tst.w	sl, #1
 8003fa4:	d10e      	bne.n	8003fc4 <__gethex+0x3a4>
 8003fa6:	f047 0710 	orr.w	r7, r7, #16
 8003faa:	e033      	b.n	8004014 <__gethex+0x3f4>
 8003fac:	f04f 0a01 	mov.w	sl, #1
 8003fb0:	e7d0      	b.n	8003f54 <__gethex+0x334>
 8003fb2:	2701      	movs	r7, #1
 8003fb4:	e7e2      	b.n	8003f7c <__gethex+0x35c>
 8003fb6:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8003fb8:	f1c3 0301 	rsb	r3, r3, #1
 8003fbc:	9315      	str	r3, [sp, #84]	; 0x54
 8003fbe:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8003fc0:	2b00      	cmp	r3, #0
 8003fc2:	d0f0      	beq.n	8003fa6 <__gethex+0x386>
 8003fc4:	f8d4 b010 	ldr.w	fp, [r4, #16]
 8003fc8:	f104 0314 	add.w	r3, r4, #20
 8003fcc:	ea4f 0a8b 	mov.w	sl, fp, lsl #2
 8003fd0:	eb03 018b 	add.w	r1, r3, fp, lsl #2
 8003fd4:	f04f 0c00 	mov.w	ip, #0
 8003fd8:	4618      	mov	r0, r3
 8003fda:	f853 2b04 	ldr.w	r2, [r3], #4
 8003fde:	f1b2 3fff 	cmp.w	r2, #4294967295
 8003fe2:	d01c      	beq.n	800401e <__gethex+0x3fe>
 8003fe4:	3201      	adds	r2, #1
 8003fe6:	6002      	str	r2, [r0, #0]
 8003fe8:	2f02      	cmp	r7, #2
 8003fea:	f104 0314 	add.w	r3, r4, #20
 8003fee:	d13f      	bne.n	8004070 <__gethex+0x450>
 8003ff0:	f8d8 2000 	ldr.w	r2, [r8]
 8003ff4:	3a01      	subs	r2, #1
 8003ff6:	42b2      	cmp	r2, r6
 8003ff8:	d10a      	bne.n	8004010 <__gethex+0x3f0>
 8003ffa:	1171      	asrs	r1, r6, #5
 8003ffc:	2201      	movs	r2, #1
 8003ffe:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 8004002:	f006 061f 	and.w	r6, r6, #31
 8004006:	fa02 f606 	lsl.w	r6, r2, r6
 800400a:	421e      	tst	r6, r3
 800400c:	bf18      	it	ne
 800400e:	4617      	movne	r7, r2
 8004010:	f047 0720 	orr.w	r7, r7, #32
 8004014:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8004016:	601c      	str	r4, [r3, #0]
 8004018:	9b04      	ldr	r3, [sp, #16]
 800401a:	601d      	str	r5, [r3, #0]
 800401c:	e695      	b.n	8003d4a <__gethex+0x12a>
 800401e:	4299      	cmp	r1, r3
 8004020:	f843 cc04 	str.w	ip, [r3, #-4]
 8004024:	d8d8      	bhi.n	8003fd8 <__gethex+0x3b8>
 8004026:	68a3      	ldr	r3, [r4, #8]
 8004028:	459b      	cmp	fp, r3
 800402a:	db19      	blt.n	8004060 <__gethex+0x440>
 800402c:	6861      	ldr	r1, [r4, #4]
 800402e:	ee18 0a10 	vmov	r0, s16
 8004032:	3101      	adds	r1, #1
 8004034:	f000 f93e 	bl	80042b4 <_Balloc>
 8004038:	4681      	mov	r9, r0
 800403a:	b918      	cbnz	r0, 8004044 <__gethex+0x424>
 800403c:	4b1a      	ldr	r3, [pc, #104]	; (80040a8 <__gethex+0x488>)
 800403e:	4602      	mov	r2, r0
 8004040:	2184      	movs	r1, #132	; 0x84
 8004042:	e6a8      	b.n	8003d96 <__gethex+0x176>
 8004044:	6922      	ldr	r2, [r4, #16]
 8004046:	3202      	adds	r2, #2
 8004048:	f104 010c 	add.w	r1, r4, #12
 800404c:	0092      	lsls	r2, r2, #2
 800404e:	300c      	adds	r0, #12
 8004050:	f000 f916 	bl	8004280 <memcpy>
 8004054:	4621      	mov	r1, r4
 8004056:	ee18 0a10 	vmov	r0, s16
 800405a:	f000 f96b 	bl	8004334 <_Bfree>
 800405e:	464c      	mov	r4, r9
 8004060:	6923      	ldr	r3, [r4, #16]
 8004062:	1c5a      	adds	r2, r3, #1
 8004064:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8004068:	6122      	str	r2, [r4, #16]
 800406a:	2201      	movs	r2, #1
 800406c:	615a      	str	r2, [r3, #20]
 800406e:	e7bb      	b.n	8003fe8 <__gethex+0x3c8>
 8004070:	6922      	ldr	r2, [r4, #16]
 8004072:	455a      	cmp	r2, fp
 8004074:	dd0b      	ble.n	800408e <__gethex+0x46e>
 8004076:	2101      	movs	r1, #1
 8004078:	4620      	mov	r0, r4
 800407a:	f7ff fd69 	bl	8003b50 <rshift>
 800407e:	f8d8 3008 	ldr.w	r3, [r8, #8]
 8004082:	3501      	adds	r5, #1
 8004084:	42ab      	cmp	r3, r5
 8004086:	f6ff aed0 	blt.w	8003e2a <__gethex+0x20a>
 800408a:	2701      	movs	r7, #1
 800408c:	e7c0      	b.n	8004010 <__gethex+0x3f0>
 800408e:	f016 061f 	ands.w	r6, r6, #31
 8004092:	d0fa      	beq.n	800408a <__gethex+0x46a>
 8004094:	449a      	add	sl, r3
 8004096:	f1c6 0620 	rsb	r6, r6, #32
 800409a:	f85a 0c04 	ldr.w	r0, [sl, #-4]
 800409e:	f000 f9ff 	bl	80044a0 <__hi0bits>
 80040a2:	42b0      	cmp	r0, r6
 80040a4:	dbe7      	blt.n	8004076 <__gethex+0x456>
 80040a6:	e7f0      	b.n	800408a <__gethex+0x46a>
 80040a8:	08007f6d 	.word	0x08007f6d

080040ac <L_shift>:
 80040ac:	f1c2 0208 	rsb	r2, r2, #8
 80040b0:	0092      	lsls	r2, r2, #2
 80040b2:	b570      	push	{r4, r5, r6, lr}
 80040b4:	f1c2 0620 	rsb	r6, r2, #32
 80040b8:	6843      	ldr	r3, [r0, #4]
 80040ba:	6804      	ldr	r4, [r0, #0]
 80040bc:	fa03 f506 	lsl.w	r5, r3, r6
 80040c0:	432c      	orrs	r4, r5
 80040c2:	40d3      	lsrs	r3, r2
 80040c4:	6004      	str	r4, [r0, #0]
 80040c6:	f840 3f04 	str.w	r3, [r0, #4]!
 80040ca:	4288      	cmp	r0, r1
 80040cc:	d3f4      	bcc.n	80040b8 <L_shift+0xc>
 80040ce:	bd70      	pop	{r4, r5, r6, pc}

080040d0 <__match>:
 80040d0:	b530      	push	{r4, r5, lr}
 80040d2:	6803      	ldr	r3, [r0, #0]
 80040d4:	3301      	adds	r3, #1
 80040d6:	f811 4b01 	ldrb.w	r4, [r1], #1
 80040da:	b914      	cbnz	r4, 80040e2 <__match+0x12>
 80040dc:	6003      	str	r3, [r0, #0]
 80040de:	2001      	movs	r0, #1
 80040e0:	bd30      	pop	{r4, r5, pc}
 80040e2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80040e6:	f1a2 0541 	sub.w	r5, r2, #65	; 0x41
 80040ea:	2d19      	cmp	r5, #25
 80040ec:	bf98      	it	ls
 80040ee:	3220      	addls	r2, #32
 80040f0:	42a2      	cmp	r2, r4
 80040f2:	d0f0      	beq.n	80040d6 <__match+0x6>
 80040f4:	2000      	movs	r0, #0
 80040f6:	e7f3      	b.n	80040e0 <__match+0x10>

080040f8 <__hexnan>:
 80040f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80040fc:	680b      	ldr	r3, [r1, #0]
 80040fe:	6801      	ldr	r1, [r0, #0]
 8004100:	115e      	asrs	r6, r3, #5
 8004102:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 8004106:	f013 031f 	ands.w	r3, r3, #31
 800410a:	b087      	sub	sp, #28
 800410c:	bf18      	it	ne
 800410e:	3604      	addne	r6, #4
 8004110:	2500      	movs	r5, #0
 8004112:	1f37      	subs	r7, r6, #4
 8004114:	4682      	mov	sl, r0
 8004116:	4690      	mov	r8, r2
 8004118:	9301      	str	r3, [sp, #4]
 800411a:	f846 5c04 	str.w	r5, [r6, #-4]
 800411e:	46b9      	mov	r9, r7
 8004120:	463c      	mov	r4, r7
 8004122:	9502      	str	r5, [sp, #8]
 8004124:	46ab      	mov	fp, r5
 8004126:	784a      	ldrb	r2, [r1, #1]
 8004128:	1c4b      	adds	r3, r1, #1
 800412a:	9303      	str	r3, [sp, #12]
 800412c:	b342      	cbz	r2, 8004180 <__hexnan+0x88>
 800412e:	4610      	mov	r0, r2
 8004130:	9105      	str	r1, [sp, #20]
 8004132:	9204      	str	r2, [sp, #16]
 8004134:	f7ff fd5e 	bl	8003bf4 <__hexdig_fun>
 8004138:	2800      	cmp	r0, #0
 800413a:	d14f      	bne.n	80041dc <__hexnan+0xe4>
 800413c:	9a04      	ldr	r2, [sp, #16]
 800413e:	9905      	ldr	r1, [sp, #20]
 8004140:	2a20      	cmp	r2, #32
 8004142:	d818      	bhi.n	8004176 <__hexnan+0x7e>
 8004144:	9b02      	ldr	r3, [sp, #8]
 8004146:	459b      	cmp	fp, r3
 8004148:	dd13      	ble.n	8004172 <__hexnan+0x7a>
 800414a:	454c      	cmp	r4, r9
 800414c:	d206      	bcs.n	800415c <__hexnan+0x64>
 800414e:	2d07      	cmp	r5, #7
 8004150:	dc04      	bgt.n	800415c <__hexnan+0x64>
 8004152:	462a      	mov	r2, r5
 8004154:	4649      	mov	r1, r9
 8004156:	4620      	mov	r0, r4
 8004158:	f7ff ffa8 	bl	80040ac <L_shift>
 800415c:	4544      	cmp	r4, r8
 800415e:	d950      	bls.n	8004202 <__hexnan+0x10a>
 8004160:	2300      	movs	r3, #0
 8004162:	f1a4 0904 	sub.w	r9, r4, #4
 8004166:	f844 3c04 	str.w	r3, [r4, #-4]
 800416a:	f8cd b008 	str.w	fp, [sp, #8]
 800416e:	464c      	mov	r4, r9
 8004170:	461d      	mov	r5, r3
 8004172:	9903      	ldr	r1, [sp, #12]
 8004174:	e7d7      	b.n	8004126 <__hexnan+0x2e>
 8004176:	2a29      	cmp	r2, #41	; 0x29
 8004178:	d156      	bne.n	8004228 <__hexnan+0x130>
 800417a:	3102      	adds	r1, #2
 800417c:	f8ca 1000 	str.w	r1, [sl]
 8004180:	f1bb 0f00 	cmp.w	fp, #0
 8004184:	d050      	beq.n	8004228 <__hexnan+0x130>
 8004186:	454c      	cmp	r4, r9
 8004188:	d206      	bcs.n	8004198 <__hexnan+0xa0>
 800418a:	2d07      	cmp	r5, #7
 800418c:	dc04      	bgt.n	8004198 <__hexnan+0xa0>
 800418e:	462a      	mov	r2, r5
 8004190:	4649      	mov	r1, r9
 8004192:	4620      	mov	r0, r4
 8004194:	f7ff ff8a 	bl	80040ac <L_shift>
 8004198:	4544      	cmp	r4, r8
 800419a:	d934      	bls.n	8004206 <__hexnan+0x10e>
 800419c:	f1a8 0204 	sub.w	r2, r8, #4
 80041a0:	4623      	mov	r3, r4
 80041a2:	f853 1b04 	ldr.w	r1, [r3], #4
 80041a6:	f842 1f04 	str.w	r1, [r2, #4]!
 80041aa:	429f      	cmp	r7, r3
 80041ac:	d2f9      	bcs.n	80041a2 <__hexnan+0xaa>
 80041ae:	1b3b      	subs	r3, r7, r4
 80041b0:	f023 0303 	bic.w	r3, r3, #3
 80041b4:	3304      	adds	r3, #4
 80041b6:	3401      	adds	r4, #1
 80041b8:	3e03      	subs	r6, #3
 80041ba:	42b4      	cmp	r4, r6
 80041bc:	bf88      	it	hi
 80041be:	2304      	movhi	r3, #4
 80041c0:	4443      	add	r3, r8
 80041c2:	2200      	movs	r2, #0
 80041c4:	f843 2b04 	str.w	r2, [r3], #4
 80041c8:	429f      	cmp	r7, r3
 80041ca:	d2fb      	bcs.n	80041c4 <__hexnan+0xcc>
 80041cc:	683b      	ldr	r3, [r7, #0]
 80041ce:	b91b      	cbnz	r3, 80041d8 <__hexnan+0xe0>
 80041d0:	4547      	cmp	r7, r8
 80041d2:	d127      	bne.n	8004224 <__hexnan+0x12c>
 80041d4:	2301      	movs	r3, #1
 80041d6:	603b      	str	r3, [r7, #0]
 80041d8:	2005      	movs	r0, #5
 80041da:	e026      	b.n	800422a <__hexnan+0x132>
 80041dc:	3501      	adds	r5, #1
 80041de:	2d08      	cmp	r5, #8
 80041e0:	f10b 0b01 	add.w	fp, fp, #1
 80041e4:	dd06      	ble.n	80041f4 <__hexnan+0xfc>
 80041e6:	4544      	cmp	r4, r8
 80041e8:	d9c3      	bls.n	8004172 <__hexnan+0x7a>
 80041ea:	2300      	movs	r3, #0
 80041ec:	f844 3c04 	str.w	r3, [r4, #-4]
 80041f0:	2501      	movs	r5, #1
 80041f2:	3c04      	subs	r4, #4
 80041f4:	6822      	ldr	r2, [r4, #0]
 80041f6:	f000 000f 	and.w	r0, r0, #15
 80041fa:	ea40 1202 	orr.w	r2, r0, r2, lsl #4
 80041fe:	6022      	str	r2, [r4, #0]
 8004200:	e7b7      	b.n	8004172 <__hexnan+0x7a>
 8004202:	2508      	movs	r5, #8
 8004204:	e7b5      	b.n	8004172 <__hexnan+0x7a>
 8004206:	9b01      	ldr	r3, [sp, #4]
 8004208:	2b00      	cmp	r3, #0
 800420a:	d0df      	beq.n	80041cc <__hexnan+0xd4>
 800420c:	f04f 32ff 	mov.w	r2, #4294967295
 8004210:	f1c3 0320 	rsb	r3, r3, #32
 8004214:	fa22 f303 	lsr.w	r3, r2, r3
 8004218:	f856 2c04 	ldr.w	r2, [r6, #-4]
 800421c:	401a      	ands	r2, r3
 800421e:	f846 2c04 	str.w	r2, [r6, #-4]
 8004222:	e7d3      	b.n	80041cc <__hexnan+0xd4>
 8004224:	3f04      	subs	r7, #4
 8004226:	e7d1      	b.n	80041cc <__hexnan+0xd4>
 8004228:	2004      	movs	r0, #4
 800422a:	b007      	add	sp, #28
 800422c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08004230 <__retarget_lock_init_recursive>:
 8004230:	4770      	bx	lr

08004232 <__retarget_lock_acquire_recursive>:
 8004232:	4770      	bx	lr

08004234 <__retarget_lock_release_recursive>:
 8004234:	4770      	bx	lr
	...

08004238 <_lseek_r>:
 8004238:	b538      	push	{r3, r4, r5, lr}
 800423a:	4d07      	ldr	r5, [pc, #28]	; (8004258 <_lseek_r+0x20>)
 800423c:	4604      	mov	r4, r0
 800423e:	4608      	mov	r0, r1
 8004240:	4611      	mov	r1, r2
 8004242:	2200      	movs	r2, #0
 8004244:	602a      	str	r2, [r5, #0]
 8004246:	461a      	mov	r2, r3
 8004248:	f7fd f97c 	bl	8001544 <_lseek>
 800424c:	1c43      	adds	r3, r0, #1
 800424e:	d102      	bne.n	8004256 <_lseek_r+0x1e>
 8004250:	682b      	ldr	r3, [r5, #0]
 8004252:	b103      	cbz	r3, 8004256 <_lseek_r+0x1e>
 8004254:	6023      	str	r3, [r4, #0]
 8004256:	bd38      	pop	{r3, r4, r5, pc}
 8004258:	20000218 	.word	0x20000218

0800425c <__ascii_mbtowc>:
 800425c:	b082      	sub	sp, #8
 800425e:	b901      	cbnz	r1, 8004262 <__ascii_mbtowc+0x6>
 8004260:	a901      	add	r1, sp, #4
 8004262:	b142      	cbz	r2, 8004276 <__ascii_mbtowc+0x1a>
 8004264:	b14b      	cbz	r3, 800427a <__ascii_mbtowc+0x1e>
 8004266:	7813      	ldrb	r3, [r2, #0]
 8004268:	600b      	str	r3, [r1, #0]
 800426a:	7812      	ldrb	r2, [r2, #0]
 800426c:	1e10      	subs	r0, r2, #0
 800426e:	bf18      	it	ne
 8004270:	2001      	movne	r0, #1
 8004272:	b002      	add	sp, #8
 8004274:	4770      	bx	lr
 8004276:	4610      	mov	r0, r2
 8004278:	e7fb      	b.n	8004272 <__ascii_mbtowc+0x16>
 800427a:	f06f 0001 	mvn.w	r0, #1
 800427e:	e7f8      	b.n	8004272 <__ascii_mbtowc+0x16>

08004280 <memcpy>:
 8004280:	440a      	add	r2, r1
 8004282:	4291      	cmp	r1, r2
 8004284:	f100 33ff 	add.w	r3, r0, #4294967295
 8004288:	d100      	bne.n	800428c <memcpy+0xc>
 800428a:	4770      	bx	lr
 800428c:	b510      	push	{r4, lr}
 800428e:	f811 4b01 	ldrb.w	r4, [r1], #1
 8004292:	f803 4f01 	strb.w	r4, [r3, #1]!
 8004296:	4291      	cmp	r1, r2
 8004298:	d1f9      	bne.n	800428e <memcpy+0xe>
 800429a:	bd10      	pop	{r4, pc}

0800429c <__malloc_lock>:
 800429c:	4801      	ldr	r0, [pc, #4]	; (80042a4 <__malloc_lock+0x8>)
 800429e:	f7ff bfc8 	b.w	8004232 <__retarget_lock_acquire_recursive>
 80042a2:	bf00      	nop
 80042a4:	20000210 	.word	0x20000210

080042a8 <__malloc_unlock>:
 80042a8:	4801      	ldr	r0, [pc, #4]	; (80042b0 <__malloc_unlock+0x8>)
 80042aa:	f7ff bfc3 	b.w	8004234 <__retarget_lock_release_recursive>
 80042ae:	bf00      	nop
 80042b0:	20000210 	.word	0x20000210

080042b4 <_Balloc>:
 80042b4:	b570      	push	{r4, r5, r6, lr}
 80042b6:	6a46      	ldr	r6, [r0, #36]	; 0x24
 80042b8:	4604      	mov	r4, r0
 80042ba:	460d      	mov	r5, r1
 80042bc:	b976      	cbnz	r6, 80042dc <_Balloc+0x28>
 80042be:	2010      	movs	r0, #16
 80042c0:	f7fe f9c8 	bl	8002654 <malloc>
 80042c4:	4602      	mov	r2, r0
 80042c6:	6260      	str	r0, [r4, #36]	; 0x24
 80042c8:	b920      	cbnz	r0, 80042d4 <_Balloc+0x20>
 80042ca:	4b18      	ldr	r3, [pc, #96]	; (800432c <_Balloc+0x78>)
 80042cc:	4818      	ldr	r0, [pc, #96]	; (8004330 <_Balloc+0x7c>)
 80042ce:	2166      	movs	r1, #102	; 0x66
 80042d0:	f7ff fbfe 	bl	8003ad0 <__assert_func>
 80042d4:	e9c0 6601 	strd	r6, r6, [r0, #4]
 80042d8:	6006      	str	r6, [r0, #0]
 80042da:	60c6      	str	r6, [r0, #12]
 80042dc:	6a66      	ldr	r6, [r4, #36]	; 0x24
 80042de:	68f3      	ldr	r3, [r6, #12]
 80042e0:	b183      	cbz	r3, 8004304 <_Balloc+0x50>
 80042e2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80042e4:	68db      	ldr	r3, [r3, #12]
 80042e6:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 80042ea:	b9b8      	cbnz	r0, 800431c <_Balloc+0x68>
 80042ec:	2101      	movs	r1, #1
 80042ee:	fa01 f605 	lsl.w	r6, r1, r5
 80042f2:	1d72      	adds	r2, r6, #5
 80042f4:	0092      	lsls	r2, r2, #2
 80042f6:	4620      	mov	r0, r4
 80042f8:	f000 fc97 	bl	8004c2a <_calloc_r>
 80042fc:	b160      	cbz	r0, 8004318 <_Balloc+0x64>
 80042fe:	e9c0 5601 	strd	r5, r6, [r0, #4]
 8004302:	e00e      	b.n	8004322 <_Balloc+0x6e>
 8004304:	2221      	movs	r2, #33	; 0x21
 8004306:	2104      	movs	r1, #4
 8004308:	4620      	mov	r0, r4
 800430a:	f000 fc8e 	bl	8004c2a <_calloc_r>
 800430e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8004310:	60f0      	str	r0, [r6, #12]
 8004312:	68db      	ldr	r3, [r3, #12]
 8004314:	2b00      	cmp	r3, #0
 8004316:	d1e4      	bne.n	80042e2 <_Balloc+0x2e>
 8004318:	2000      	movs	r0, #0
 800431a:	bd70      	pop	{r4, r5, r6, pc}
 800431c:	6802      	ldr	r2, [r0, #0]
 800431e:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 8004322:	2300      	movs	r3, #0
 8004324:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8004328:	e7f7      	b.n	800431a <_Balloc+0x66>
 800432a:	bf00      	nop
 800432c:	08007ffc 	.word	0x08007ffc
 8004330:	08008013 	.word	0x08008013

08004334 <_Bfree>:
 8004334:	b570      	push	{r4, r5, r6, lr}
 8004336:	6a46      	ldr	r6, [r0, #36]	; 0x24
 8004338:	4605      	mov	r5, r0
 800433a:	460c      	mov	r4, r1
 800433c:	b976      	cbnz	r6, 800435c <_Bfree+0x28>
 800433e:	2010      	movs	r0, #16
 8004340:	f7fe f988 	bl	8002654 <malloc>
 8004344:	4602      	mov	r2, r0
 8004346:	6268      	str	r0, [r5, #36]	; 0x24
 8004348:	b920      	cbnz	r0, 8004354 <_Bfree+0x20>
 800434a:	4b09      	ldr	r3, [pc, #36]	; (8004370 <_Bfree+0x3c>)
 800434c:	4809      	ldr	r0, [pc, #36]	; (8004374 <_Bfree+0x40>)
 800434e:	218a      	movs	r1, #138	; 0x8a
 8004350:	f7ff fbbe 	bl	8003ad0 <__assert_func>
 8004354:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8004358:	6006      	str	r6, [r0, #0]
 800435a:	60c6      	str	r6, [r0, #12]
 800435c:	b13c      	cbz	r4, 800436e <_Bfree+0x3a>
 800435e:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 8004360:	6862      	ldr	r2, [r4, #4]
 8004362:	68db      	ldr	r3, [r3, #12]
 8004364:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8004368:	6021      	str	r1, [r4, #0]
 800436a:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 800436e:	bd70      	pop	{r4, r5, r6, pc}
 8004370:	08007ffc 	.word	0x08007ffc
 8004374:	08008013 	.word	0x08008013

08004378 <__multadd>:
 8004378:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800437c:	690e      	ldr	r6, [r1, #16]
 800437e:	4607      	mov	r7, r0
 8004380:	4698      	mov	r8, r3
 8004382:	460c      	mov	r4, r1
 8004384:	f101 0014 	add.w	r0, r1, #20
 8004388:	2300      	movs	r3, #0
 800438a:	6805      	ldr	r5, [r0, #0]
 800438c:	b2a9      	uxth	r1, r5
 800438e:	fb02 8101 	mla	r1, r2, r1, r8
 8004392:	ea4f 4c11 	mov.w	ip, r1, lsr #16
 8004396:	0c2d      	lsrs	r5, r5, #16
 8004398:	fb02 c505 	mla	r5, r2, r5, ip
 800439c:	b289      	uxth	r1, r1
 800439e:	3301      	adds	r3, #1
 80043a0:	eb01 4105 	add.w	r1, r1, r5, lsl #16
 80043a4:	429e      	cmp	r6, r3
 80043a6:	f840 1b04 	str.w	r1, [r0], #4
 80043aa:	ea4f 4815 	mov.w	r8, r5, lsr #16
 80043ae:	dcec      	bgt.n	800438a <__multadd+0x12>
 80043b0:	f1b8 0f00 	cmp.w	r8, #0
 80043b4:	d022      	beq.n	80043fc <__multadd+0x84>
 80043b6:	68a3      	ldr	r3, [r4, #8]
 80043b8:	42b3      	cmp	r3, r6
 80043ba:	dc19      	bgt.n	80043f0 <__multadd+0x78>
 80043bc:	6861      	ldr	r1, [r4, #4]
 80043be:	4638      	mov	r0, r7
 80043c0:	3101      	adds	r1, #1
 80043c2:	f7ff ff77 	bl	80042b4 <_Balloc>
 80043c6:	4605      	mov	r5, r0
 80043c8:	b928      	cbnz	r0, 80043d6 <__multadd+0x5e>
 80043ca:	4602      	mov	r2, r0
 80043cc:	4b0d      	ldr	r3, [pc, #52]	; (8004404 <__multadd+0x8c>)
 80043ce:	480e      	ldr	r0, [pc, #56]	; (8004408 <__multadd+0x90>)
 80043d0:	21b5      	movs	r1, #181	; 0xb5
 80043d2:	f7ff fb7d 	bl	8003ad0 <__assert_func>
 80043d6:	6922      	ldr	r2, [r4, #16]
 80043d8:	3202      	adds	r2, #2
 80043da:	f104 010c 	add.w	r1, r4, #12
 80043de:	0092      	lsls	r2, r2, #2
 80043e0:	300c      	adds	r0, #12
 80043e2:	f7ff ff4d 	bl	8004280 <memcpy>
 80043e6:	4621      	mov	r1, r4
 80043e8:	4638      	mov	r0, r7
 80043ea:	f7ff ffa3 	bl	8004334 <_Bfree>
 80043ee:	462c      	mov	r4, r5
 80043f0:	eb04 0386 	add.w	r3, r4, r6, lsl #2
 80043f4:	3601      	adds	r6, #1
 80043f6:	f8c3 8014 	str.w	r8, [r3, #20]
 80043fa:	6126      	str	r6, [r4, #16]
 80043fc:	4620      	mov	r0, r4
 80043fe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004402:	bf00      	nop
 8004404:	08007f6d 	.word	0x08007f6d
 8004408:	08008013 	.word	0x08008013

0800440c <__s2b>:
 800440c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8004410:	460c      	mov	r4, r1
 8004412:	4615      	mov	r5, r2
 8004414:	461f      	mov	r7, r3
 8004416:	2209      	movs	r2, #9
 8004418:	3308      	adds	r3, #8
 800441a:	4606      	mov	r6, r0
 800441c:	fb93 f3f2 	sdiv	r3, r3, r2
 8004420:	2100      	movs	r1, #0
 8004422:	2201      	movs	r2, #1
 8004424:	429a      	cmp	r2, r3
 8004426:	db09      	blt.n	800443c <__s2b+0x30>
 8004428:	4630      	mov	r0, r6
 800442a:	f7ff ff43 	bl	80042b4 <_Balloc>
 800442e:	b940      	cbnz	r0, 8004442 <__s2b+0x36>
 8004430:	4602      	mov	r2, r0
 8004432:	4b19      	ldr	r3, [pc, #100]	; (8004498 <__s2b+0x8c>)
 8004434:	4819      	ldr	r0, [pc, #100]	; (800449c <__s2b+0x90>)
 8004436:	21ce      	movs	r1, #206	; 0xce
 8004438:	f7ff fb4a 	bl	8003ad0 <__assert_func>
 800443c:	0052      	lsls	r2, r2, #1
 800443e:	3101      	adds	r1, #1
 8004440:	e7f0      	b.n	8004424 <__s2b+0x18>
 8004442:	9b08      	ldr	r3, [sp, #32]
 8004444:	6143      	str	r3, [r0, #20]
 8004446:	2d09      	cmp	r5, #9
 8004448:	f04f 0301 	mov.w	r3, #1
 800444c:	6103      	str	r3, [r0, #16]
 800444e:	dd16      	ble.n	800447e <__s2b+0x72>
 8004450:	f104 0909 	add.w	r9, r4, #9
 8004454:	46c8      	mov	r8, r9
 8004456:	442c      	add	r4, r5
 8004458:	f818 3b01 	ldrb.w	r3, [r8], #1
 800445c:	4601      	mov	r1, r0
 800445e:	3b30      	subs	r3, #48	; 0x30
 8004460:	220a      	movs	r2, #10
 8004462:	4630      	mov	r0, r6
 8004464:	f7ff ff88 	bl	8004378 <__multadd>
 8004468:	45a0      	cmp	r8, r4
 800446a:	d1f5      	bne.n	8004458 <__s2b+0x4c>
 800446c:	f1a5 0408 	sub.w	r4, r5, #8
 8004470:	444c      	add	r4, r9
 8004472:	1b2d      	subs	r5, r5, r4
 8004474:	1963      	adds	r3, r4, r5
 8004476:	42bb      	cmp	r3, r7
 8004478:	db04      	blt.n	8004484 <__s2b+0x78>
 800447a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800447e:	340a      	adds	r4, #10
 8004480:	2509      	movs	r5, #9
 8004482:	e7f6      	b.n	8004472 <__s2b+0x66>
 8004484:	f814 3b01 	ldrb.w	r3, [r4], #1
 8004488:	4601      	mov	r1, r0
 800448a:	3b30      	subs	r3, #48	; 0x30
 800448c:	220a      	movs	r2, #10
 800448e:	4630      	mov	r0, r6
 8004490:	f7ff ff72 	bl	8004378 <__multadd>
 8004494:	e7ee      	b.n	8004474 <__s2b+0x68>
 8004496:	bf00      	nop
 8004498:	08007f6d 	.word	0x08007f6d
 800449c:	08008013 	.word	0x08008013

080044a0 <__hi0bits>:
 80044a0:	0c03      	lsrs	r3, r0, #16
 80044a2:	041b      	lsls	r3, r3, #16
 80044a4:	b9d3      	cbnz	r3, 80044dc <__hi0bits+0x3c>
 80044a6:	0400      	lsls	r0, r0, #16
 80044a8:	2310      	movs	r3, #16
 80044aa:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
 80044ae:	bf04      	itt	eq
 80044b0:	0200      	lsleq	r0, r0, #8
 80044b2:	3308      	addeq	r3, #8
 80044b4:	f010 4f70 	tst.w	r0, #4026531840	; 0xf0000000
 80044b8:	bf04      	itt	eq
 80044ba:	0100      	lsleq	r0, r0, #4
 80044bc:	3304      	addeq	r3, #4
 80044be:	f010 4f40 	tst.w	r0, #3221225472	; 0xc0000000
 80044c2:	bf04      	itt	eq
 80044c4:	0080      	lsleq	r0, r0, #2
 80044c6:	3302      	addeq	r3, #2
 80044c8:	2800      	cmp	r0, #0
 80044ca:	db05      	blt.n	80044d8 <__hi0bits+0x38>
 80044cc:	f010 4f80 	tst.w	r0, #1073741824	; 0x40000000
 80044d0:	f103 0301 	add.w	r3, r3, #1
 80044d4:	bf08      	it	eq
 80044d6:	2320      	moveq	r3, #32
 80044d8:	4618      	mov	r0, r3
 80044da:	4770      	bx	lr
 80044dc:	2300      	movs	r3, #0
 80044de:	e7e4      	b.n	80044aa <__hi0bits+0xa>

080044e0 <__lo0bits>:
 80044e0:	6803      	ldr	r3, [r0, #0]
 80044e2:	f013 0207 	ands.w	r2, r3, #7
 80044e6:	4601      	mov	r1, r0
 80044e8:	d00b      	beq.n	8004502 <__lo0bits+0x22>
 80044ea:	07da      	lsls	r2, r3, #31
 80044ec:	d424      	bmi.n	8004538 <__lo0bits+0x58>
 80044ee:	0798      	lsls	r0, r3, #30
 80044f0:	bf49      	itett	mi
 80044f2:	085b      	lsrmi	r3, r3, #1
 80044f4:	089b      	lsrpl	r3, r3, #2
 80044f6:	2001      	movmi	r0, #1
 80044f8:	600b      	strmi	r3, [r1, #0]
 80044fa:	bf5c      	itt	pl
 80044fc:	600b      	strpl	r3, [r1, #0]
 80044fe:	2002      	movpl	r0, #2
 8004500:	4770      	bx	lr
 8004502:	b298      	uxth	r0, r3
 8004504:	b9b0      	cbnz	r0, 8004534 <__lo0bits+0x54>
 8004506:	0c1b      	lsrs	r3, r3, #16
 8004508:	2010      	movs	r0, #16
 800450a:	f013 0fff 	tst.w	r3, #255	; 0xff
 800450e:	bf04      	itt	eq
 8004510:	0a1b      	lsreq	r3, r3, #8
 8004512:	3008      	addeq	r0, #8
 8004514:	071a      	lsls	r2, r3, #28
 8004516:	bf04      	itt	eq
 8004518:	091b      	lsreq	r3, r3, #4
 800451a:	3004      	addeq	r0, #4
 800451c:	079a      	lsls	r2, r3, #30
 800451e:	bf04      	itt	eq
 8004520:	089b      	lsreq	r3, r3, #2
 8004522:	3002      	addeq	r0, #2
 8004524:	07da      	lsls	r2, r3, #31
 8004526:	d403      	bmi.n	8004530 <__lo0bits+0x50>
 8004528:	085b      	lsrs	r3, r3, #1
 800452a:	f100 0001 	add.w	r0, r0, #1
 800452e:	d005      	beq.n	800453c <__lo0bits+0x5c>
 8004530:	600b      	str	r3, [r1, #0]
 8004532:	4770      	bx	lr
 8004534:	4610      	mov	r0, r2
 8004536:	e7e8      	b.n	800450a <__lo0bits+0x2a>
 8004538:	2000      	movs	r0, #0
 800453a:	4770      	bx	lr
 800453c:	2020      	movs	r0, #32
 800453e:	4770      	bx	lr

08004540 <__i2b>:
 8004540:	b510      	push	{r4, lr}
 8004542:	460c      	mov	r4, r1
 8004544:	2101      	movs	r1, #1
 8004546:	f7ff feb5 	bl	80042b4 <_Balloc>
 800454a:	4602      	mov	r2, r0
 800454c:	b928      	cbnz	r0, 800455a <__i2b+0x1a>
 800454e:	4b05      	ldr	r3, [pc, #20]	; (8004564 <__i2b+0x24>)
 8004550:	4805      	ldr	r0, [pc, #20]	; (8004568 <__i2b+0x28>)
 8004552:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8004556:	f7ff fabb 	bl	8003ad0 <__assert_func>
 800455a:	2301      	movs	r3, #1
 800455c:	6144      	str	r4, [r0, #20]
 800455e:	6103      	str	r3, [r0, #16]
 8004560:	bd10      	pop	{r4, pc}
 8004562:	bf00      	nop
 8004564:	08007f6d 	.word	0x08007f6d
 8004568:	08008013 	.word	0x08008013

0800456c <__multiply>:
 800456c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004570:	4614      	mov	r4, r2
 8004572:	690a      	ldr	r2, [r1, #16]
 8004574:	6923      	ldr	r3, [r4, #16]
 8004576:	429a      	cmp	r2, r3
 8004578:	bfb8      	it	lt
 800457a:	460b      	movlt	r3, r1
 800457c:	460d      	mov	r5, r1
 800457e:	bfbc      	itt	lt
 8004580:	4625      	movlt	r5, r4
 8004582:	461c      	movlt	r4, r3
 8004584:	f8d5 a010 	ldr.w	sl, [r5, #16]
 8004588:	f8d4 9010 	ldr.w	r9, [r4, #16]
 800458c:	68ab      	ldr	r3, [r5, #8]
 800458e:	6869      	ldr	r1, [r5, #4]
 8004590:	eb0a 0709 	add.w	r7, sl, r9
 8004594:	42bb      	cmp	r3, r7
 8004596:	b085      	sub	sp, #20
 8004598:	bfb8      	it	lt
 800459a:	3101      	addlt	r1, #1
 800459c:	f7ff fe8a 	bl	80042b4 <_Balloc>
 80045a0:	b930      	cbnz	r0, 80045b0 <__multiply+0x44>
 80045a2:	4602      	mov	r2, r0
 80045a4:	4b42      	ldr	r3, [pc, #264]	; (80046b0 <__multiply+0x144>)
 80045a6:	4843      	ldr	r0, [pc, #268]	; (80046b4 <__multiply+0x148>)
 80045a8:	f240 115d 	movw	r1, #349	; 0x15d
 80045ac:	f7ff fa90 	bl	8003ad0 <__assert_func>
 80045b0:	f100 0614 	add.w	r6, r0, #20
 80045b4:	eb06 0887 	add.w	r8, r6, r7, lsl #2
 80045b8:	4633      	mov	r3, r6
 80045ba:	2200      	movs	r2, #0
 80045bc:	4543      	cmp	r3, r8
 80045be:	d31e      	bcc.n	80045fe <__multiply+0x92>
 80045c0:	f105 0c14 	add.w	ip, r5, #20
 80045c4:	f104 0314 	add.w	r3, r4, #20
 80045c8:	eb0c 0c8a 	add.w	ip, ip, sl, lsl #2
 80045cc:	eb03 0289 	add.w	r2, r3, r9, lsl #2
 80045d0:	9202      	str	r2, [sp, #8]
 80045d2:	ebac 0205 	sub.w	r2, ip, r5
 80045d6:	3a15      	subs	r2, #21
 80045d8:	f022 0203 	bic.w	r2, r2, #3
 80045dc:	3204      	adds	r2, #4
 80045de:	f105 0115 	add.w	r1, r5, #21
 80045e2:	458c      	cmp	ip, r1
 80045e4:	bf38      	it	cc
 80045e6:	2204      	movcc	r2, #4
 80045e8:	9201      	str	r2, [sp, #4]
 80045ea:	9a02      	ldr	r2, [sp, #8]
 80045ec:	9303      	str	r3, [sp, #12]
 80045ee:	429a      	cmp	r2, r3
 80045f0:	d808      	bhi.n	8004604 <__multiply+0x98>
 80045f2:	2f00      	cmp	r7, #0
 80045f4:	dc55      	bgt.n	80046a2 <__multiply+0x136>
 80045f6:	6107      	str	r7, [r0, #16]
 80045f8:	b005      	add	sp, #20
 80045fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80045fe:	f843 2b04 	str.w	r2, [r3], #4
 8004602:	e7db      	b.n	80045bc <__multiply+0x50>
 8004604:	f8b3 a000 	ldrh.w	sl, [r3]
 8004608:	f1ba 0f00 	cmp.w	sl, #0
 800460c:	d020      	beq.n	8004650 <__multiply+0xe4>
 800460e:	f105 0e14 	add.w	lr, r5, #20
 8004612:	46b1      	mov	r9, r6
 8004614:	2200      	movs	r2, #0
 8004616:	f85e 4b04 	ldr.w	r4, [lr], #4
 800461a:	f8d9 b000 	ldr.w	fp, [r9]
 800461e:	b2a1      	uxth	r1, r4
 8004620:	fa1f fb8b 	uxth.w	fp, fp
 8004624:	fb0a b101 	mla	r1, sl, r1, fp
 8004628:	4411      	add	r1, r2
 800462a:	f8d9 2000 	ldr.w	r2, [r9]
 800462e:	0c24      	lsrs	r4, r4, #16
 8004630:	0c12      	lsrs	r2, r2, #16
 8004632:	fb0a 2404 	mla	r4, sl, r4, r2
 8004636:	eb04 4411 	add.w	r4, r4, r1, lsr #16
 800463a:	b289      	uxth	r1, r1
 800463c:	ea41 4104 	orr.w	r1, r1, r4, lsl #16
 8004640:	45f4      	cmp	ip, lr
 8004642:	f849 1b04 	str.w	r1, [r9], #4
 8004646:	ea4f 4214 	mov.w	r2, r4, lsr #16
 800464a:	d8e4      	bhi.n	8004616 <__multiply+0xaa>
 800464c:	9901      	ldr	r1, [sp, #4]
 800464e:	5072      	str	r2, [r6, r1]
 8004650:	9a03      	ldr	r2, [sp, #12]
 8004652:	f8b2 9002 	ldrh.w	r9, [r2, #2]
 8004656:	3304      	adds	r3, #4
 8004658:	f1b9 0f00 	cmp.w	r9, #0
 800465c:	d01f      	beq.n	800469e <__multiply+0x132>
 800465e:	6834      	ldr	r4, [r6, #0]
 8004660:	f105 0114 	add.w	r1, r5, #20
 8004664:	46b6      	mov	lr, r6
 8004666:	f04f 0a00 	mov.w	sl, #0
 800466a:	880a      	ldrh	r2, [r1, #0]
 800466c:	f8be b002 	ldrh.w	fp, [lr, #2]
 8004670:	fb09 b202 	mla	r2, r9, r2, fp
 8004674:	4492      	add	sl, r2
 8004676:	b2a4      	uxth	r4, r4
 8004678:	ea44 440a 	orr.w	r4, r4, sl, lsl #16
 800467c:	f84e 4b04 	str.w	r4, [lr], #4
 8004680:	f851 4b04 	ldr.w	r4, [r1], #4
 8004684:	f8be 2000 	ldrh.w	r2, [lr]
 8004688:	0c24      	lsrs	r4, r4, #16
 800468a:	fb09 2404 	mla	r4, r9, r4, r2
 800468e:	eb04 441a 	add.w	r4, r4, sl, lsr #16
 8004692:	458c      	cmp	ip, r1
 8004694:	ea4f 4a14 	mov.w	sl, r4, lsr #16
 8004698:	d8e7      	bhi.n	800466a <__multiply+0xfe>
 800469a:	9a01      	ldr	r2, [sp, #4]
 800469c:	50b4      	str	r4, [r6, r2]
 800469e:	3604      	adds	r6, #4
 80046a0:	e7a3      	b.n	80045ea <__multiply+0x7e>
 80046a2:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 80046a6:	2b00      	cmp	r3, #0
 80046a8:	d1a5      	bne.n	80045f6 <__multiply+0x8a>
 80046aa:	3f01      	subs	r7, #1
 80046ac:	e7a1      	b.n	80045f2 <__multiply+0x86>
 80046ae:	bf00      	nop
 80046b0:	08007f6d 	.word	0x08007f6d
 80046b4:	08008013 	.word	0x08008013

080046b8 <__pow5mult>:
 80046b8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80046bc:	4615      	mov	r5, r2
 80046be:	f012 0203 	ands.w	r2, r2, #3
 80046c2:	4606      	mov	r6, r0
 80046c4:	460f      	mov	r7, r1
 80046c6:	d007      	beq.n	80046d8 <__pow5mult+0x20>
 80046c8:	4c25      	ldr	r4, [pc, #148]	; (8004760 <__pow5mult+0xa8>)
 80046ca:	3a01      	subs	r2, #1
 80046cc:	2300      	movs	r3, #0
 80046ce:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 80046d2:	f7ff fe51 	bl	8004378 <__multadd>
 80046d6:	4607      	mov	r7, r0
 80046d8:	10ad      	asrs	r5, r5, #2
 80046da:	d03d      	beq.n	8004758 <__pow5mult+0xa0>
 80046dc:	6a74      	ldr	r4, [r6, #36]	; 0x24
 80046de:	b97c      	cbnz	r4, 8004700 <__pow5mult+0x48>
 80046e0:	2010      	movs	r0, #16
 80046e2:	f7fd ffb7 	bl	8002654 <malloc>
 80046e6:	4602      	mov	r2, r0
 80046e8:	6270      	str	r0, [r6, #36]	; 0x24
 80046ea:	b928      	cbnz	r0, 80046f8 <__pow5mult+0x40>
 80046ec:	4b1d      	ldr	r3, [pc, #116]	; (8004764 <__pow5mult+0xac>)
 80046ee:	481e      	ldr	r0, [pc, #120]	; (8004768 <__pow5mult+0xb0>)
 80046f0:	f44f 71d7 	mov.w	r1, #430	; 0x1ae
 80046f4:	f7ff f9ec 	bl	8003ad0 <__assert_func>
 80046f8:	e9c0 4401 	strd	r4, r4, [r0, #4]
 80046fc:	6004      	str	r4, [r0, #0]
 80046fe:	60c4      	str	r4, [r0, #12]
 8004700:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
 8004704:	f8d8 4008 	ldr.w	r4, [r8, #8]
 8004708:	b94c      	cbnz	r4, 800471e <__pow5mult+0x66>
 800470a:	f240 2171 	movw	r1, #625	; 0x271
 800470e:	4630      	mov	r0, r6
 8004710:	f7ff ff16 	bl	8004540 <__i2b>
 8004714:	2300      	movs	r3, #0
 8004716:	f8c8 0008 	str.w	r0, [r8, #8]
 800471a:	4604      	mov	r4, r0
 800471c:	6003      	str	r3, [r0, #0]
 800471e:	f04f 0900 	mov.w	r9, #0
 8004722:	07eb      	lsls	r3, r5, #31
 8004724:	d50a      	bpl.n	800473c <__pow5mult+0x84>
 8004726:	4639      	mov	r1, r7
 8004728:	4622      	mov	r2, r4
 800472a:	4630      	mov	r0, r6
 800472c:	f7ff ff1e 	bl	800456c <__multiply>
 8004730:	4639      	mov	r1, r7
 8004732:	4680      	mov	r8, r0
 8004734:	4630      	mov	r0, r6
 8004736:	f7ff fdfd 	bl	8004334 <_Bfree>
 800473a:	4647      	mov	r7, r8
 800473c:	106d      	asrs	r5, r5, #1
 800473e:	d00b      	beq.n	8004758 <__pow5mult+0xa0>
 8004740:	6820      	ldr	r0, [r4, #0]
 8004742:	b938      	cbnz	r0, 8004754 <__pow5mult+0x9c>
 8004744:	4622      	mov	r2, r4
 8004746:	4621      	mov	r1, r4
 8004748:	4630      	mov	r0, r6
 800474a:	f7ff ff0f 	bl	800456c <__multiply>
 800474e:	6020      	str	r0, [r4, #0]
 8004750:	f8c0 9000 	str.w	r9, [r0]
 8004754:	4604      	mov	r4, r0
 8004756:	e7e4      	b.n	8004722 <__pow5mult+0x6a>
 8004758:	4638      	mov	r0, r7
 800475a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800475e:	bf00      	nop
 8004760:	08008168 	.word	0x08008168
 8004764:	08007ffc 	.word	0x08007ffc
 8004768:	08008013 	.word	0x08008013

0800476c <__lshift>:
 800476c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004770:	460c      	mov	r4, r1
 8004772:	6849      	ldr	r1, [r1, #4]
 8004774:	6923      	ldr	r3, [r4, #16]
 8004776:	eb03 1862 	add.w	r8, r3, r2, asr #5
 800477a:	68a3      	ldr	r3, [r4, #8]
 800477c:	4607      	mov	r7, r0
 800477e:	4691      	mov	r9, r2
 8004780:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8004784:	f108 0601 	add.w	r6, r8, #1
 8004788:	42b3      	cmp	r3, r6
 800478a:	db0b      	blt.n	80047a4 <__lshift+0x38>
 800478c:	4638      	mov	r0, r7
 800478e:	f7ff fd91 	bl	80042b4 <_Balloc>
 8004792:	4605      	mov	r5, r0
 8004794:	b948      	cbnz	r0, 80047aa <__lshift+0x3e>
 8004796:	4602      	mov	r2, r0
 8004798:	4b28      	ldr	r3, [pc, #160]	; (800483c <__lshift+0xd0>)
 800479a:	4829      	ldr	r0, [pc, #164]	; (8004840 <__lshift+0xd4>)
 800479c:	f240 11d9 	movw	r1, #473	; 0x1d9
 80047a0:	f7ff f996 	bl	8003ad0 <__assert_func>
 80047a4:	3101      	adds	r1, #1
 80047a6:	005b      	lsls	r3, r3, #1
 80047a8:	e7ee      	b.n	8004788 <__lshift+0x1c>
 80047aa:	2300      	movs	r3, #0
 80047ac:	f100 0114 	add.w	r1, r0, #20
 80047b0:	f100 0210 	add.w	r2, r0, #16
 80047b4:	4618      	mov	r0, r3
 80047b6:	4553      	cmp	r3, sl
 80047b8:	db33      	blt.n	8004822 <__lshift+0xb6>
 80047ba:	6920      	ldr	r0, [r4, #16]
 80047bc:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 80047c0:	f104 0314 	add.w	r3, r4, #20
 80047c4:	f019 091f 	ands.w	r9, r9, #31
 80047c8:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 80047cc:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 80047d0:	d02b      	beq.n	800482a <__lshift+0xbe>
 80047d2:	f1c9 0e20 	rsb	lr, r9, #32
 80047d6:	468a      	mov	sl, r1
 80047d8:	2200      	movs	r2, #0
 80047da:	6818      	ldr	r0, [r3, #0]
 80047dc:	fa00 f009 	lsl.w	r0, r0, r9
 80047e0:	4302      	orrs	r2, r0
 80047e2:	f84a 2b04 	str.w	r2, [sl], #4
 80047e6:	f853 2b04 	ldr.w	r2, [r3], #4
 80047ea:	459c      	cmp	ip, r3
 80047ec:	fa22 f20e 	lsr.w	r2, r2, lr
 80047f0:	d8f3      	bhi.n	80047da <__lshift+0x6e>
 80047f2:	ebac 0304 	sub.w	r3, ip, r4
 80047f6:	3b15      	subs	r3, #21
 80047f8:	f023 0303 	bic.w	r3, r3, #3
 80047fc:	3304      	adds	r3, #4
 80047fe:	f104 0015 	add.w	r0, r4, #21
 8004802:	4584      	cmp	ip, r0
 8004804:	bf38      	it	cc
 8004806:	2304      	movcc	r3, #4
 8004808:	50ca      	str	r2, [r1, r3]
 800480a:	b10a      	cbz	r2, 8004810 <__lshift+0xa4>
 800480c:	f108 0602 	add.w	r6, r8, #2
 8004810:	3e01      	subs	r6, #1
 8004812:	4638      	mov	r0, r7
 8004814:	612e      	str	r6, [r5, #16]
 8004816:	4621      	mov	r1, r4
 8004818:	f7ff fd8c 	bl	8004334 <_Bfree>
 800481c:	4628      	mov	r0, r5
 800481e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8004822:	f842 0f04 	str.w	r0, [r2, #4]!
 8004826:	3301      	adds	r3, #1
 8004828:	e7c5      	b.n	80047b6 <__lshift+0x4a>
 800482a:	3904      	subs	r1, #4
 800482c:	f853 2b04 	ldr.w	r2, [r3], #4
 8004830:	f841 2f04 	str.w	r2, [r1, #4]!
 8004834:	459c      	cmp	ip, r3
 8004836:	d8f9      	bhi.n	800482c <__lshift+0xc0>
 8004838:	e7ea      	b.n	8004810 <__lshift+0xa4>
 800483a:	bf00      	nop
 800483c:	08007f6d 	.word	0x08007f6d
 8004840:	08008013 	.word	0x08008013

08004844 <__mcmp>:
 8004844:	b530      	push	{r4, r5, lr}
 8004846:	6902      	ldr	r2, [r0, #16]
 8004848:	690c      	ldr	r4, [r1, #16]
 800484a:	1b12      	subs	r2, r2, r4
 800484c:	d10e      	bne.n	800486c <__mcmp+0x28>
 800484e:	f100 0314 	add.w	r3, r0, #20
 8004852:	3114      	adds	r1, #20
 8004854:	eb03 0084 	add.w	r0, r3, r4, lsl #2
 8004858:	eb01 0184 	add.w	r1, r1, r4, lsl #2
 800485c:	f850 5d04 	ldr.w	r5, [r0, #-4]!
 8004860:	f851 4d04 	ldr.w	r4, [r1, #-4]!
 8004864:	42a5      	cmp	r5, r4
 8004866:	d003      	beq.n	8004870 <__mcmp+0x2c>
 8004868:	d305      	bcc.n	8004876 <__mcmp+0x32>
 800486a:	2201      	movs	r2, #1
 800486c:	4610      	mov	r0, r2
 800486e:	bd30      	pop	{r4, r5, pc}
 8004870:	4283      	cmp	r3, r0
 8004872:	d3f3      	bcc.n	800485c <__mcmp+0x18>
 8004874:	e7fa      	b.n	800486c <__mcmp+0x28>
 8004876:	f04f 32ff 	mov.w	r2, #4294967295
 800487a:	e7f7      	b.n	800486c <__mcmp+0x28>

0800487c <__mdiff>:
 800487c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004880:	460c      	mov	r4, r1
 8004882:	4606      	mov	r6, r0
 8004884:	4611      	mov	r1, r2
 8004886:	4620      	mov	r0, r4
 8004888:	4617      	mov	r7, r2
 800488a:	f7ff ffdb 	bl	8004844 <__mcmp>
 800488e:	1e05      	subs	r5, r0, #0
 8004890:	d110      	bne.n	80048b4 <__mdiff+0x38>
 8004892:	4629      	mov	r1, r5
 8004894:	4630      	mov	r0, r6
 8004896:	f7ff fd0d 	bl	80042b4 <_Balloc>
 800489a:	b930      	cbnz	r0, 80048aa <__mdiff+0x2e>
 800489c:	4b39      	ldr	r3, [pc, #228]	; (8004984 <__mdiff+0x108>)
 800489e:	4602      	mov	r2, r0
 80048a0:	f240 2132 	movw	r1, #562	; 0x232
 80048a4:	4838      	ldr	r0, [pc, #224]	; (8004988 <__mdiff+0x10c>)
 80048a6:	f7ff f913 	bl	8003ad0 <__assert_func>
 80048aa:	2301      	movs	r3, #1
 80048ac:	e9c0 3504 	strd	r3, r5, [r0, #16]
 80048b0:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80048b4:	bfa4      	itt	ge
 80048b6:	463b      	movge	r3, r7
 80048b8:	4627      	movge	r7, r4
 80048ba:	4630      	mov	r0, r6
 80048bc:	6879      	ldr	r1, [r7, #4]
 80048be:	bfa6      	itte	ge
 80048c0:	461c      	movge	r4, r3
 80048c2:	2500      	movge	r5, #0
 80048c4:	2501      	movlt	r5, #1
 80048c6:	f7ff fcf5 	bl	80042b4 <_Balloc>
 80048ca:	b920      	cbnz	r0, 80048d6 <__mdiff+0x5a>
 80048cc:	4b2d      	ldr	r3, [pc, #180]	; (8004984 <__mdiff+0x108>)
 80048ce:	4602      	mov	r2, r0
 80048d0:	f44f 7110 	mov.w	r1, #576	; 0x240
 80048d4:	e7e6      	b.n	80048a4 <__mdiff+0x28>
 80048d6:	693e      	ldr	r6, [r7, #16]
 80048d8:	60c5      	str	r5, [r0, #12]
 80048da:	6925      	ldr	r5, [r4, #16]
 80048dc:	f107 0114 	add.w	r1, r7, #20
 80048e0:	f104 0914 	add.w	r9, r4, #20
 80048e4:	f100 0e14 	add.w	lr, r0, #20
 80048e8:	f107 0210 	add.w	r2, r7, #16
 80048ec:	eb01 0c86 	add.w	ip, r1, r6, lsl #2
 80048f0:	eb09 0585 	add.w	r5, r9, r5, lsl #2
 80048f4:	46f2      	mov	sl, lr
 80048f6:	2700      	movs	r7, #0
 80048f8:	f859 3b04 	ldr.w	r3, [r9], #4
 80048fc:	f852 bf04 	ldr.w	fp, [r2, #4]!
 8004900:	fa1f f883 	uxth.w	r8, r3
 8004904:	fa17 f78b 	uxtah	r7, r7, fp
 8004908:	0c1b      	lsrs	r3, r3, #16
 800490a:	eba7 0808 	sub.w	r8, r7, r8
 800490e:	ebc3 431b 	rsb	r3, r3, fp, lsr #16
 8004912:	eb03 4328 	add.w	r3, r3, r8, asr #16
 8004916:	fa1f f888 	uxth.w	r8, r8
 800491a:	141f      	asrs	r7, r3, #16
 800491c:	454d      	cmp	r5, r9
 800491e:	ea48 4303 	orr.w	r3, r8, r3, lsl #16
 8004922:	f84a 3b04 	str.w	r3, [sl], #4
 8004926:	d8e7      	bhi.n	80048f8 <__mdiff+0x7c>
 8004928:	1b2b      	subs	r3, r5, r4
 800492a:	3b15      	subs	r3, #21
 800492c:	f023 0303 	bic.w	r3, r3, #3
 8004930:	3304      	adds	r3, #4
 8004932:	3415      	adds	r4, #21
 8004934:	42a5      	cmp	r5, r4
 8004936:	bf38      	it	cc
 8004938:	2304      	movcc	r3, #4
 800493a:	4419      	add	r1, r3
 800493c:	4473      	add	r3, lr
 800493e:	469e      	mov	lr, r3
 8004940:	460d      	mov	r5, r1
 8004942:	4565      	cmp	r5, ip
 8004944:	d30e      	bcc.n	8004964 <__mdiff+0xe8>
 8004946:	f10c 0203 	add.w	r2, ip, #3
 800494a:	1a52      	subs	r2, r2, r1
 800494c:	f022 0203 	bic.w	r2, r2, #3
 8004950:	3903      	subs	r1, #3
 8004952:	458c      	cmp	ip, r1
 8004954:	bf38      	it	cc
 8004956:	2200      	movcc	r2, #0
 8004958:	441a      	add	r2, r3
 800495a:	f852 3d04 	ldr.w	r3, [r2, #-4]!
 800495e:	b17b      	cbz	r3, 8004980 <__mdiff+0x104>
 8004960:	6106      	str	r6, [r0, #16]
 8004962:	e7a5      	b.n	80048b0 <__mdiff+0x34>
 8004964:	f855 8b04 	ldr.w	r8, [r5], #4
 8004968:	fa17 f488 	uxtah	r4, r7, r8
 800496c:	1422      	asrs	r2, r4, #16
 800496e:	eb02 4218 	add.w	r2, r2, r8, lsr #16
 8004972:	b2a4      	uxth	r4, r4
 8004974:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8004978:	f84e 4b04 	str.w	r4, [lr], #4
 800497c:	1417      	asrs	r7, r2, #16
 800497e:	e7e0      	b.n	8004942 <__mdiff+0xc6>
 8004980:	3e01      	subs	r6, #1
 8004982:	e7ea      	b.n	800495a <__mdiff+0xde>
 8004984:	08007f6d 	.word	0x08007f6d
 8004988:	08008013 	.word	0x08008013

0800498c <__ulp>:
 800498c:	b082      	sub	sp, #8
 800498e:	ed8d 0b00 	vstr	d0, [sp]
 8004992:	9b01      	ldr	r3, [sp, #4]
 8004994:	4912      	ldr	r1, [pc, #72]	; (80049e0 <__ulp+0x54>)
 8004996:	4019      	ands	r1, r3
 8004998:	f1a1 7150 	sub.w	r1, r1, #54525952	; 0x3400000
 800499c:	2900      	cmp	r1, #0
 800499e:	dd05      	ble.n	80049ac <__ulp+0x20>
 80049a0:	2200      	movs	r2, #0
 80049a2:	460b      	mov	r3, r1
 80049a4:	ec43 2b10 	vmov	d0, r2, r3
 80049a8:	b002      	add	sp, #8
 80049aa:	4770      	bx	lr
 80049ac:	4249      	negs	r1, r1
 80049ae:	f1b1 7fa0 	cmp.w	r1, #20971520	; 0x1400000
 80049b2:	ea4f 5021 	mov.w	r0, r1, asr #20
 80049b6:	f04f 0200 	mov.w	r2, #0
 80049ba:	f04f 0300 	mov.w	r3, #0
 80049be:	da04      	bge.n	80049ca <__ulp+0x3e>
 80049c0:	f44f 2100 	mov.w	r1, #524288	; 0x80000
 80049c4:	fa41 f300 	asr.w	r3, r1, r0
 80049c8:	e7ec      	b.n	80049a4 <__ulp+0x18>
 80049ca:	f1a0 0114 	sub.w	r1, r0, #20
 80049ce:	291e      	cmp	r1, #30
 80049d0:	bfda      	itte	le
 80049d2:	f04f 4000 	movle.w	r0, #2147483648	; 0x80000000
 80049d6:	fa20 f101 	lsrle.w	r1, r0, r1
 80049da:	2101      	movgt	r1, #1
 80049dc:	460a      	mov	r2, r1
 80049de:	e7e1      	b.n	80049a4 <__ulp+0x18>
 80049e0:	7ff00000 	.word	0x7ff00000

080049e4 <__b2d>:
 80049e4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80049e6:	6905      	ldr	r5, [r0, #16]
 80049e8:	f100 0714 	add.w	r7, r0, #20
 80049ec:	eb07 0585 	add.w	r5, r7, r5, lsl #2
 80049f0:	1f2e      	subs	r6, r5, #4
 80049f2:	f855 4c04 	ldr.w	r4, [r5, #-4]
 80049f6:	4620      	mov	r0, r4
 80049f8:	f7ff fd52 	bl	80044a0 <__hi0bits>
 80049fc:	f1c0 0320 	rsb	r3, r0, #32
 8004a00:	280a      	cmp	r0, #10
 8004a02:	f8df c07c 	ldr.w	ip, [pc, #124]	; 8004a80 <__b2d+0x9c>
 8004a06:	600b      	str	r3, [r1, #0]
 8004a08:	dc14      	bgt.n	8004a34 <__b2d+0x50>
 8004a0a:	f1c0 0e0b 	rsb	lr, r0, #11
 8004a0e:	fa24 f10e 	lsr.w	r1, r4, lr
 8004a12:	42b7      	cmp	r7, r6
 8004a14:	ea41 030c 	orr.w	r3, r1, ip
 8004a18:	bf34      	ite	cc
 8004a1a:	f855 1c08 	ldrcc.w	r1, [r5, #-8]
 8004a1e:	2100      	movcs	r1, #0
 8004a20:	3015      	adds	r0, #21
 8004a22:	fa04 f000 	lsl.w	r0, r4, r0
 8004a26:	fa21 f10e 	lsr.w	r1, r1, lr
 8004a2a:	ea40 0201 	orr.w	r2, r0, r1
 8004a2e:	ec43 2b10 	vmov	d0, r2, r3
 8004a32:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004a34:	42b7      	cmp	r7, r6
 8004a36:	bf3a      	itte	cc
 8004a38:	f855 1c08 	ldrcc.w	r1, [r5, #-8]
 8004a3c:	f1a5 0608 	subcc.w	r6, r5, #8
 8004a40:	2100      	movcs	r1, #0
 8004a42:	380b      	subs	r0, #11
 8004a44:	d017      	beq.n	8004a76 <__b2d+0x92>
 8004a46:	f1c0 0c20 	rsb	ip, r0, #32
 8004a4a:	fa04 f500 	lsl.w	r5, r4, r0
 8004a4e:	42be      	cmp	r6, r7
 8004a50:	fa21 f40c 	lsr.w	r4, r1, ip
 8004a54:	ea45 0504 	orr.w	r5, r5, r4
 8004a58:	bf8c      	ite	hi
 8004a5a:	f856 4c04 	ldrhi.w	r4, [r6, #-4]
 8004a5e:	2400      	movls	r4, #0
 8004a60:	f045 537f 	orr.w	r3, r5, #1069547520	; 0x3fc00000
 8004a64:	fa01 f000 	lsl.w	r0, r1, r0
 8004a68:	fa24 f40c 	lsr.w	r4, r4, ip
 8004a6c:	f443 1340 	orr.w	r3, r3, #3145728	; 0x300000
 8004a70:	ea40 0204 	orr.w	r2, r0, r4
 8004a74:	e7db      	b.n	8004a2e <__b2d+0x4a>
 8004a76:	ea44 030c 	orr.w	r3, r4, ip
 8004a7a:	460a      	mov	r2, r1
 8004a7c:	e7d7      	b.n	8004a2e <__b2d+0x4a>
 8004a7e:	bf00      	nop
 8004a80:	3ff00000 	.word	0x3ff00000

08004a84 <__d2b>:
 8004a84:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8004a88:	4689      	mov	r9, r1
 8004a8a:	2101      	movs	r1, #1
 8004a8c:	ec57 6b10 	vmov	r6, r7, d0
 8004a90:	4690      	mov	r8, r2
 8004a92:	f7ff fc0f 	bl	80042b4 <_Balloc>
 8004a96:	4604      	mov	r4, r0
 8004a98:	b930      	cbnz	r0, 8004aa8 <__d2b+0x24>
 8004a9a:	4602      	mov	r2, r0
 8004a9c:	4b25      	ldr	r3, [pc, #148]	; (8004b34 <__d2b+0xb0>)
 8004a9e:	4826      	ldr	r0, [pc, #152]	; (8004b38 <__d2b+0xb4>)
 8004aa0:	f240 310a 	movw	r1, #778	; 0x30a
 8004aa4:	f7ff f814 	bl	8003ad0 <__assert_func>
 8004aa8:	f3c7 550a 	ubfx	r5, r7, #20, #11
 8004aac:	f3c7 0313 	ubfx	r3, r7, #0, #20
 8004ab0:	bb35      	cbnz	r5, 8004b00 <__d2b+0x7c>
 8004ab2:	2e00      	cmp	r6, #0
 8004ab4:	9301      	str	r3, [sp, #4]
 8004ab6:	d028      	beq.n	8004b0a <__d2b+0x86>
 8004ab8:	4668      	mov	r0, sp
 8004aba:	9600      	str	r6, [sp, #0]
 8004abc:	f7ff fd10 	bl	80044e0 <__lo0bits>
 8004ac0:	9900      	ldr	r1, [sp, #0]
 8004ac2:	b300      	cbz	r0, 8004b06 <__d2b+0x82>
 8004ac4:	9a01      	ldr	r2, [sp, #4]
 8004ac6:	f1c0 0320 	rsb	r3, r0, #32
 8004aca:	fa02 f303 	lsl.w	r3, r2, r3
 8004ace:	430b      	orrs	r3, r1
 8004ad0:	40c2      	lsrs	r2, r0
 8004ad2:	6163      	str	r3, [r4, #20]
 8004ad4:	9201      	str	r2, [sp, #4]
 8004ad6:	9b01      	ldr	r3, [sp, #4]
 8004ad8:	61a3      	str	r3, [r4, #24]
 8004ada:	2b00      	cmp	r3, #0
 8004adc:	bf14      	ite	ne
 8004ade:	2202      	movne	r2, #2
 8004ae0:	2201      	moveq	r2, #1
 8004ae2:	6122      	str	r2, [r4, #16]
 8004ae4:	b1d5      	cbz	r5, 8004b1c <__d2b+0x98>
 8004ae6:	f2a5 4533 	subw	r5, r5, #1075	; 0x433
 8004aea:	4405      	add	r5, r0
 8004aec:	f8c9 5000 	str.w	r5, [r9]
 8004af0:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 8004af4:	f8c8 0000 	str.w	r0, [r8]
 8004af8:	4620      	mov	r0, r4
 8004afa:	b003      	add	sp, #12
 8004afc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8004b00:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8004b04:	e7d5      	b.n	8004ab2 <__d2b+0x2e>
 8004b06:	6161      	str	r1, [r4, #20]
 8004b08:	e7e5      	b.n	8004ad6 <__d2b+0x52>
 8004b0a:	a801      	add	r0, sp, #4
 8004b0c:	f7ff fce8 	bl	80044e0 <__lo0bits>
 8004b10:	9b01      	ldr	r3, [sp, #4]
 8004b12:	6163      	str	r3, [r4, #20]
 8004b14:	2201      	movs	r2, #1
 8004b16:	6122      	str	r2, [r4, #16]
 8004b18:	3020      	adds	r0, #32
 8004b1a:	e7e3      	b.n	8004ae4 <__d2b+0x60>
 8004b1c:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8004b20:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 8004b24:	f8c9 0000 	str.w	r0, [r9]
 8004b28:	6918      	ldr	r0, [r3, #16]
 8004b2a:	f7ff fcb9 	bl	80044a0 <__hi0bits>
 8004b2e:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 8004b32:	e7df      	b.n	8004af4 <__d2b+0x70>
 8004b34:	08007f6d 	.word	0x08007f6d
 8004b38:	08008013 	.word	0x08008013

08004b3c <__ratio>:
 8004b3c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004b40:	4688      	mov	r8, r1
 8004b42:	4669      	mov	r1, sp
 8004b44:	4681      	mov	r9, r0
 8004b46:	f7ff ff4d 	bl	80049e4 <__b2d>
 8004b4a:	a901      	add	r1, sp, #4
 8004b4c:	4640      	mov	r0, r8
 8004b4e:	ec55 4b10 	vmov	r4, r5, d0
 8004b52:	f7ff ff47 	bl	80049e4 <__b2d>
 8004b56:	f8d9 3010 	ldr.w	r3, [r9, #16]
 8004b5a:	f8d8 2010 	ldr.w	r2, [r8, #16]
 8004b5e:	eba3 0c02 	sub.w	ip, r3, r2
 8004b62:	e9dd 3200 	ldrd	r3, r2, [sp]
 8004b66:	1a9b      	subs	r3, r3, r2
 8004b68:	eb03 134c 	add.w	r3, r3, ip, lsl #5
 8004b6c:	ec51 0b10 	vmov	r0, r1, d0
 8004b70:	2b00      	cmp	r3, #0
 8004b72:	bfd6      	itet	le
 8004b74:	460a      	movle	r2, r1
 8004b76:	462a      	movgt	r2, r5
 8004b78:	ebc3 3303 	rsble	r3, r3, r3, lsl #12
 8004b7c:	468b      	mov	fp, r1
 8004b7e:	462f      	mov	r7, r5
 8004b80:	bfd4      	ite	le
 8004b82:	eb02 5b03 	addle.w	fp, r2, r3, lsl #20
 8004b86:	eb02 5703 	addgt.w	r7, r2, r3, lsl #20
 8004b8a:	4620      	mov	r0, r4
 8004b8c:	ee10 2a10 	vmov	r2, s0
 8004b90:	465b      	mov	r3, fp
 8004b92:	4639      	mov	r1, r7
 8004b94:	f7fb fe62 	bl	800085c <__aeabi_ddiv>
 8004b98:	ec41 0b10 	vmov	d0, r0, r1
 8004b9c:	b003      	add	sp, #12
 8004b9e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08004ba2 <__copybits>:
 8004ba2:	3901      	subs	r1, #1
 8004ba4:	b570      	push	{r4, r5, r6, lr}
 8004ba6:	1149      	asrs	r1, r1, #5
 8004ba8:	6914      	ldr	r4, [r2, #16]
 8004baa:	3101      	adds	r1, #1
 8004bac:	f102 0314 	add.w	r3, r2, #20
 8004bb0:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 8004bb4:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 8004bb8:	1f05      	subs	r5, r0, #4
 8004bba:	42a3      	cmp	r3, r4
 8004bbc:	d30c      	bcc.n	8004bd8 <__copybits+0x36>
 8004bbe:	1aa3      	subs	r3, r4, r2
 8004bc0:	3b11      	subs	r3, #17
 8004bc2:	f023 0303 	bic.w	r3, r3, #3
 8004bc6:	3211      	adds	r2, #17
 8004bc8:	42a2      	cmp	r2, r4
 8004bca:	bf88      	it	hi
 8004bcc:	2300      	movhi	r3, #0
 8004bce:	4418      	add	r0, r3
 8004bd0:	2300      	movs	r3, #0
 8004bd2:	4288      	cmp	r0, r1
 8004bd4:	d305      	bcc.n	8004be2 <__copybits+0x40>
 8004bd6:	bd70      	pop	{r4, r5, r6, pc}
 8004bd8:	f853 6b04 	ldr.w	r6, [r3], #4
 8004bdc:	f845 6f04 	str.w	r6, [r5, #4]!
 8004be0:	e7eb      	b.n	8004bba <__copybits+0x18>
 8004be2:	f840 3b04 	str.w	r3, [r0], #4
 8004be6:	e7f4      	b.n	8004bd2 <__copybits+0x30>

08004be8 <__any_on>:
 8004be8:	f100 0214 	add.w	r2, r0, #20
 8004bec:	6900      	ldr	r0, [r0, #16]
 8004bee:	114b      	asrs	r3, r1, #5
 8004bf0:	4298      	cmp	r0, r3
 8004bf2:	b510      	push	{r4, lr}
 8004bf4:	db11      	blt.n	8004c1a <__any_on+0x32>
 8004bf6:	dd0a      	ble.n	8004c0e <__any_on+0x26>
 8004bf8:	f011 011f 	ands.w	r1, r1, #31
 8004bfc:	d007      	beq.n	8004c0e <__any_on+0x26>
 8004bfe:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
 8004c02:	fa24 f001 	lsr.w	r0, r4, r1
 8004c06:	fa00 f101 	lsl.w	r1, r0, r1
 8004c0a:	428c      	cmp	r4, r1
 8004c0c:	d10b      	bne.n	8004c26 <__any_on+0x3e>
 8004c0e:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8004c12:	4293      	cmp	r3, r2
 8004c14:	d803      	bhi.n	8004c1e <__any_on+0x36>
 8004c16:	2000      	movs	r0, #0
 8004c18:	bd10      	pop	{r4, pc}
 8004c1a:	4603      	mov	r3, r0
 8004c1c:	e7f7      	b.n	8004c0e <__any_on+0x26>
 8004c1e:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 8004c22:	2900      	cmp	r1, #0
 8004c24:	d0f5      	beq.n	8004c12 <__any_on+0x2a>
 8004c26:	2001      	movs	r0, #1
 8004c28:	e7f6      	b.n	8004c18 <__any_on+0x30>

08004c2a <_calloc_r>:
 8004c2a:	b513      	push	{r0, r1, r4, lr}
 8004c2c:	434a      	muls	r2, r1
 8004c2e:	4611      	mov	r1, r2
 8004c30:	9201      	str	r2, [sp, #4]
 8004c32:	f7fd fd77 	bl	8002724 <_malloc_r>
 8004c36:	4604      	mov	r4, r0
 8004c38:	b118      	cbz	r0, 8004c42 <_calloc_r+0x18>
 8004c3a:	9a01      	ldr	r2, [sp, #4]
 8004c3c:	2100      	movs	r1, #0
 8004c3e:	f7fd fd19 	bl	8002674 <memset>
 8004c42:	4620      	mov	r0, r4
 8004c44:	b002      	add	sp, #8
 8004c46:	bd10      	pop	{r4, pc}

08004c48 <__ssputs_r>:
 8004c48:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004c4c:	688e      	ldr	r6, [r1, #8]
 8004c4e:	429e      	cmp	r6, r3
 8004c50:	4682      	mov	sl, r0
 8004c52:	460c      	mov	r4, r1
 8004c54:	4690      	mov	r8, r2
 8004c56:	461f      	mov	r7, r3
 8004c58:	d838      	bhi.n	8004ccc <__ssputs_r+0x84>
 8004c5a:	898a      	ldrh	r2, [r1, #12]
 8004c5c:	f412 6f90 	tst.w	r2, #1152	; 0x480
 8004c60:	d032      	beq.n	8004cc8 <__ssputs_r+0x80>
 8004c62:	6825      	ldr	r5, [r4, #0]
 8004c64:	6909      	ldr	r1, [r1, #16]
 8004c66:	eba5 0901 	sub.w	r9, r5, r1
 8004c6a:	6965      	ldr	r5, [r4, #20]
 8004c6c:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8004c70:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8004c74:	3301      	adds	r3, #1
 8004c76:	444b      	add	r3, r9
 8004c78:	106d      	asrs	r5, r5, #1
 8004c7a:	429d      	cmp	r5, r3
 8004c7c:	bf38      	it	cc
 8004c7e:	461d      	movcc	r5, r3
 8004c80:	0553      	lsls	r3, r2, #21
 8004c82:	d531      	bpl.n	8004ce8 <__ssputs_r+0xa0>
 8004c84:	4629      	mov	r1, r5
 8004c86:	f7fd fd4d 	bl	8002724 <_malloc_r>
 8004c8a:	4606      	mov	r6, r0
 8004c8c:	b950      	cbnz	r0, 8004ca4 <__ssputs_r+0x5c>
 8004c8e:	230c      	movs	r3, #12
 8004c90:	f8ca 3000 	str.w	r3, [sl]
 8004c94:	89a3      	ldrh	r3, [r4, #12]
 8004c96:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8004c9a:	81a3      	strh	r3, [r4, #12]
 8004c9c:	f04f 30ff 	mov.w	r0, #4294967295
 8004ca0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8004ca4:	6921      	ldr	r1, [r4, #16]
 8004ca6:	464a      	mov	r2, r9
 8004ca8:	f7ff faea 	bl	8004280 <memcpy>
 8004cac:	89a3      	ldrh	r3, [r4, #12]
 8004cae:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 8004cb2:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8004cb6:	81a3      	strh	r3, [r4, #12]
 8004cb8:	6126      	str	r6, [r4, #16]
 8004cba:	6165      	str	r5, [r4, #20]
 8004cbc:	444e      	add	r6, r9
 8004cbe:	eba5 0509 	sub.w	r5, r5, r9
 8004cc2:	6026      	str	r6, [r4, #0]
 8004cc4:	60a5      	str	r5, [r4, #8]
 8004cc6:	463e      	mov	r6, r7
 8004cc8:	42be      	cmp	r6, r7
 8004cca:	d900      	bls.n	8004cce <__ssputs_r+0x86>
 8004ccc:	463e      	mov	r6, r7
 8004cce:	4632      	mov	r2, r6
 8004cd0:	6820      	ldr	r0, [r4, #0]
 8004cd2:	4641      	mov	r1, r8
 8004cd4:	f001 fb32 	bl	800633c <memmove>
 8004cd8:	68a3      	ldr	r3, [r4, #8]
 8004cda:	6822      	ldr	r2, [r4, #0]
 8004cdc:	1b9b      	subs	r3, r3, r6
 8004cde:	4432      	add	r2, r6
 8004ce0:	60a3      	str	r3, [r4, #8]
 8004ce2:	6022      	str	r2, [r4, #0]
 8004ce4:	2000      	movs	r0, #0
 8004ce6:	e7db      	b.n	8004ca0 <__ssputs_r+0x58>
 8004ce8:	462a      	mov	r2, r5
 8004cea:	f001 fb41 	bl	8006370 <_realloc_r>
 8004cee:	4606      	mov	r6, r0
 8004cf0:	2800      	cmp	r0, #0
 8004cf2:	d1e1      	bne.n	8004cb8 <__ssputs_r+0x70>
 8004cf4:	6921      	ldr	r1, [r4, #16]
 8004cf6:	4650      	mov	r0, sl
 8004cf8:	f7fd fcc4 	bl	8002684 <_free_r>
 8004cfc:	e7c7      	b.n	8004c8e <__ssputs_r+0x46>
	...

08004d00 <_svfiprintf_r>:
 8004d00:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004d04:	4698      	mov	r8, r3
 8004d06:	898b      	ldrh	r3, [r1, #12]
 8004d08:	061b      	lsls	r3, r3, #24
 8004d0a:	b09d      	sub	sp, #116	; 0x74
 8004d0c:	4607      	mov	r7, r0
 8004d0e:	460d      	mov	r5, r1
 8004d10:	4614      	mov	r4, r2
 8004d12:	d50e      	bpl.n	8004d32 <_svfiprintf_r+0x32>
 8004d14:	690b      	ldr	r3, [r1, #16]
 8004d16:	b963      	cbnz	r3, 8004d32 <_svfiprintf_r+0x32>
 8004d18:	2140      	movs	r1, #64	; 0x40
 8004d1a:	f7fd fd03 	bl	8002724 <_malloc_r>
 8004d1e:	6028      	str	r0, [r5, #0]
 8004d20:	6128      	str	r0, [r5, #16]
 8004d22:	b920      	cbnz	r0, 8004d2e <_svfiprintf_r+0x2e>
 8004d24:	230c      	movs	r3, #12
 8004d26:	603b      	str	r3, [r7, #0]
 8004d28:	f04f 30ff 	mov.w	r0, #4294967295
 8004d2c:	e0d1      	b.n	8004ed2 <_svfiprintf_r+0x1d2>
 8004d2e:	2340      	movs	r3, #64	; 0x40
 8004d30:	616b      	str	r3, [r5, #20]
 8004d32:	2300      	movs	r3, #0
 8004d34:	9309      	str	r3, [sp, #36]	; 0x24
 8004d36:	2320      	movs	r3, #32
 8004d38:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8004d3c:	f8cd 800c 	str.w	r8, [sp, #12]
 8004d40:	2330      	movs	r3, #48	; 0x30
 8004d42:	f8df 81a8 	ldr.w	r8, [pc, #424]	; 8004eec <_svfiprintf_r+0x1ec>
 8004d46:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8004d4a:	f04f 0901 	mov.w	r9, #1
 8004d4e:	4623      	mov	r3, r4
 8004d50:	469a      	mov	sl, r3
 8004d52:	f813 2b01 	ldrb.w	r2, [r3], #1
 8004d56:	b10a      	cbz	r2, 8004d5c <_svfiprintf_r+0x5c>
 8004d58:	2a25      	cmp	r2, #37	; 0x25
 8004d5a:	d1f9      	bne.n	8004d50 <_svfiprintf_r+0x50>
 8004d5c:	ebba 0b04 	subs.w	fp, sl, r4
 8004d60:	d00b      	beq.n	8004d7a <_svfiprintf_r+0x7a>
 8004d62:	465b      	mov	r3, fp
 8004d64:	4622      	mov	r2, r4
 8004d66:	4629      	mov	r1, r5
 8004d68:	4638      	mov	r0, r7
 8004d6a:	f7ff ff6d 	bl	8004c48 <__ssputs_r>
 8004d6e:	3001      	adds	r0, #1
 8004d70:	f000 80aa 	beq.w	8004ec8 <_svfiprintf_r+0x1c8>
 8004d74:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8004d76:	445a      	add	r2, fp
 8004d78:	9209      	str	r2, [sp, #36]	; 0x24
 8004d7a:	f89a 3000 	ldrb.w	r3, [sl]
 8004d7e:	2b00      	cmp	r3, #0
 8004d80:	f000 80a2 	beq.w	8004ec8 <_svfiprintf_r+0x1c8>
 8004d84:	2300      	movs	r3, #0
 8004d86:	f04f 32ff 	mov.w	r2, #4294967295
 8004d8a:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8004d8e:	f10a 0a01 	add.w	sl, sl, #1
 8004d92:	9304      	str	r3, [sp, #16]
 8004d94:	9307      	str	r3, [sp, #28]
 8004d96:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8004d9a:	931a      	str	r3, [sp, #104]	; 0x68
 8004d9c:	4654      	mov	r4, sl
 8004d9e:	2205      	movs	r2, #5
 8004da0:	f814 1b01 	ldrb.w	r1, [r4], #1
 8004da4:	4851      	ldr	r0, [pc, #324]	; (8004eec <_svfiprintf_r+0x1ec>)
 8004da6:	f7fb fa23 	bl	80001f0 <memchr>
 8004daa:	9a04      	ldr	r2, [sp, #16]
 8004dac:	b9d8      	cbnz	r0, 8004de6 <_svfiprintf_r+0xe6>
 8004dae:	06d0      	lsls	r0, r2, #27
 8004db0:	bf44      	itt	mi
 8004db2:	2320      	movmi	r3, #32
 8004db4:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8004db8:	0711      	lsls	r1, r2, #28
 8004dba:	bf44      	itt	mi
 8004dbc:	232b      	movmi	r3, #43	; 0x2b
 8004dbe:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8004dc2:	f89a 3000 	ldrb.w	r3, [sl]
 8004dc6:	2b2a      	cmp	r3, #42	; 0x2a
 8004dc8:	d015      	beq.n	8004df6 <_svfiprintf_r+0xf6>
 8004dca:	9a07      	ldr	r2, [sp, #28]
 8004dcc:	4654      	mov	r4, sl
 8004dce:	2000      	movs	r0, #0
 8004dd0:	f04f 0c0a 	mov.w	ip, #10
 8004dd4:	4621      	mov	r1, r4
 8004dd6:	f811 3b01 	ldrb.w	r3, [r1], #1
 8004dda:	3b30      	subs	r3, #48	; 0x30
 8004ddc:	2b09      	cmp	r3, #9
 8004dde:	d94e      	bls.n	8004e7e <_svfiprintf_r+0x17e>
 8004de0:	b1b0      	cbz	r0, 8004e10 <_svfiprintf_r+0x110>
 8004de2:	9207      	str	r2, [sp, #28]
 8004de4:	e014      	b.n	8004e10 <_svfiprintf_r+0x110>
 8004de6:	eba0 0308 	sub.w	r3, r0, r8
 8004dea:	fa09 f303 	lsl.w	r3, r9, r3
 8004dee:	4313      	orrs	r3, r2
 8004df0:	9304      	str	r3, [sp, #16]
 8004df2:	46a2      	mov	sl, r4
 8004df4:	e7d2      	b.n	8004d9c <_svfiprintf_r+0x9c>
 8004df6:	9b03      	ldr	r3, [sp, #12]
 8004df8:	1d19      	adds	r1, r3, #4
 8004dfa:	681b      	ldr	r3, [r3, #0]
 8004dfc:	9103      	str	r1, [sp, #12]
 8004dfe:	2b00      	cmp	r3, #0
 8004e00:	bfbb      	ittet	lt
 8004e02:	425b      	neglt	r3, r3
 8004e04:	f042 0202 	orrlt.w	r2, r2, #2
 8004e08:	9307      	strge	r3, [sp, #28]
 8004e0a:	9307      	strlt	r3, [sp, #28]
 8004e0c:	bfb8      	it	lt
 8004e0e:	9204      	strlt	r2, [sp, #16]
 8004e10:	7823      	ldrb	r3, [r4, #0]
 8004e12:	2b2e      	cmp	r3, #46	; 0x2e
 8004e14:	d10c      	bne.n	8004e30 <_svfiprintf_r+0x130>
 8004e16:	7863      	ldrb	r3, [r4, #1]
 8004e18:	2b2a      	cmp	r3, #42	; 0x2a
 8004e1a:	d135      	bne.n	8004e88 <_svfiprintf_r+0x188>
 8004e1c:	9b03      	ldr	r3, [sp, #12]
 8004e1e:	1d1a      	adds	r2, r3, #4
 8004e20:	681b      	ldr	r3, [r3, #0]
 8004e22:	9203      	str	r2, [sp, #12]
 8004e24:	2b00      	cmp	r3, #0
 8004e26:	bfb8      	it	lt
 8004e28:	f04f 33ff 	movlt.w	r3, #4294967295
 8004e2c:	3402      	adds	r4, #2
 8004e2e:	9305      	str	r3, [sp, #20]
 8004e30:	f8df a0c8 	ldr.w	sl, [pc, #200]	; 8004efc <_svfiprintf_r+0x1fc>
 8004e34:	7821      	ldrb	r1, [r4, #0]
 8004e36:	2203      	movs	r2, #3
 8004e38:	4650      	mov	r0, sl
 8004e3a:	f7fb f9d9 	bl	80001f0 <memchr>
 8004e3e:	b140      	cbz	r0, 8004e52 <_svfiprintf_r+0x152>
 8004e40:	2340      	movs	r3, #64	; 0x40
 8004e42:	eba0 000a 	sub.w	r0, r0, sl
 8004e46:	fa03 f000 	lsl.w	r0, r3, r0
 8004e4a:	9b04      	ldr	r3, [sp, #16]
 8004e4c:	4303      	orrs	r3, r0
 8004e4e:	3401      	adds	r4, #1
 8004e50:	9304      	str	r3, [sp, #16]
 8004e52:	f814 1b01 	ldrb.w	r1, [r4], #1
 8004e56:	4826      	ldr	r0, [pc, #152]	; (8004ef0 <_svfiprintf_r+0x1f0>)
 8004e58:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8004e5c:	2206      	movs	r2, #6
 8004e5e:	f7fb f9c7 	bl	80001f0 <memchr>
 8004e62:	2800      	cmp	r0, #0
 8004e64:	d038      	beq.n	8004ed8 <_svfiprintf_r+0x1d8>
 8004e66:	4b23      	ldr	r3, [pc, #140]	; (8004ef4 <_svfiprintf_r+0x1f4>)
 8004e68:	bb1b      	cbnz	r3, 8004eb2 <_svfiprintf_r+0x1b2>
 8004e6a:	9b03      	ldr	r3, [sp, #12]
 8004e6c:	3307      	adds	r3, #7
 8004e6e:	f023 0307 	bic.w	r3, r3, #7
 8004e72:	3308      	adds	r3, #8
 8004e74:	9303      	str	r3, [sp, #12]
 8004e76:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004e78:	4433      	add	r3, r6
 8004e7a:	9309      	str	r3, [sp, #36]	; 0x24
 8004e7c:	e767      	b.n	8004d4e <_svfiprintf_r+0x4e>
 8004e7e:	fb0c 3202 	mla	r2, ip, r2, r3
 8004e82:	460c      	mov	r4, r1
 8004e84:	2001      	movs	r0, #1
 8004e86:	e7a5      	b.n	8004dd4 <_svfiprintf_r+0xd4>
 8004e88:	2300      	movs	r3, #0
 8004e8a:	3401      	adds	r4, #1
 8004e8c:	9305      	str	r3, [sp, #20]
 8004e8e:	4619      	mov	r1, r3
 8004e90:	f04f 0c0a 	mov.w	ip, #10
 8004e94:	4620      	mov	r0, r4
 8004e96:	f810 2b01 	ldrb.w	r2, [r0], #1
 8004e9a:	3a30      	subs	r2, #48	; 0x30
 8004e9c:	2a09      	cmp	r2, #9
 8004e9e:	d903      	bls.n	8004ea8 <_svfiprintf_r+0x1a8>
 8004ea0:	2b00      	cmp	r3, #0
 8004ea2:	d0c5      	beq.n	8004e30 <_svfiprintf_r+0x130>
 8004ea4:	9105      	str	r1, [sp, #20]
 8004ea6:	e7c3      	b.n	8004e30 <_svfiprintf_r+0x130>
 8004ea8:	fb0c 2101 	mla	r1, ip, r1, r2
 8004eac:	4604      	mov	r4, r0
 8004eae:	2301      	movs	r3, #1
 8004eb0:	e7f0      	b.n	8004e94 <_svfiprintf_r+0x194>
 8004eb2:	ab03      	add	r3, sp, #12
 8004eb4:	9300      	str	r3, [sp, #0]
 8004eb6:	462a      	mov	r2, r5
 8004eb8:	4b0f      	ldr	r3, [pc, #60]	; (8004ef8 <_svfiprintf_r+0x1f8>)
 8004eba:	a904      	add	r1, sp, #16
 8004ebc:	4638      	mov	r0, r7
 8004ebe:	f3af 8000 	nop.w
 8004ec2:	1c42      	adds	r2, r0, #1
 8004ec4:	4606      	mov	r6, r0
 8004ec6:	d1d6      	bne.n	8004e76 <_svfiprintf_r+0x176>
 8004ec8:	89ab      	ldrh	r3, [r5, #12]
 8004eca:	065b      	lsls	r3, r3, #25
 8004ecc:	f53f af2c 	bmi.w	8004d28 <_svfiprintf_r+0x28>
 8004ed0:	9809      	ldr	r0, [sp, #36]	; 0x24
 8004ed2:	b01d      	add	sp, #116	; 0x74
 8004ed4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004ed8:	ab03      	add	r3, sp, #12
 8004eda:	9300      	str	r3, [sp, #0]
 8004edc:	462a      	mov	r2, r5
 8004ede:	4b06      	ldr	r3, [pc, #24]	; (8004ef8 <_svfiprintf_r+0x1f8>)
 8004ee0:	a904      	add	r1, sp, #16
 8004ee2:	4638      	mov	r0, r7
 8004ee4:	f000 fba6 	bl	8005634 <_printf_i>
 8004ee8:	e7eb      	b.n	8004ec2 <_svfiprintf_r+0x1c2>
 8004eea:	bf00      	nop
 8004eec:	08008174 	.word	0x08008174
 8004ef0:	0800817e 	.word	0x0800817e
 8004ef4:	00000000 	.word	0x00000000
 8004ef8:	08004c49 	.word	0x08004c49
 8004efc:	0800817a 	.word	0x0800817a

08004f00 <_sungetc_r>:
 8004f00:	b538      	push	{r3, r4, r5, lr}
 8004f02:	1c4b      	adds	r3, r1, #1
 8004f04:	4614      	mov	r4, r2
 8004f06:	d103      	bne.n	8004f10 <_sungetc_r+0x10>
 8004f08:	f04f 35ff 	mov.w	r5, #4294967295
 8004f0c:	4628      	mov	r0, r5
 8004f0e:	bd38      	pop	{r3, r4, r5, pc}
 8004f10:	8993      	ldrh	r3, [r2, #12]
 8004f12:	f023 0320 	bic.w	r3, r3, #32
 8004f16:	8193      	strh	r3, [r2, #12]
 8004f18:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8004f1a:	6852      	ldr	r2, [r2, #4]
 8004f1c:	b2cd      	uxtb	r5, r1
 8004f1e:	b18b      	cbz	r3, 8004f44 <_sungetc_r+0x44>
 8004f20:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8004f22:	4293      	cmp	r3, r2
 8004f24:	dd08      	ble.n	8004f38 <_sungetc_r+0x38>
 8004f26:	6823      	ldr	r3, [r4, #0]
 8004f28:	1e5a      	subs	r2, r3, #1
 8004f2a:	6022      	str	r2, [r4, #0]
 8004f2c:	f803 5c01 	strb.w	r5, [r3, #-1]
 8004f30:	6863      	ldr	r3, [r4, #4]
 8004f32:	3301      	adds	r3, #1
 8004f34:	6063      	str	r3, [r4, #4]
 8004f36:	e7e9      	b.n	8004f0c <_sungetc_r+0xc>
 8004f38:	4621      	mov	r1, r4
 8004f3a:	f000 fed3 	bl	8005ce4 <__submore>
 8004f3e:	2800      	cmp	r0, #0
 8004f40:	d0f1      	beq.n	8004f26 <_sungetc_r+0x26>
 8004f42:	e7e1      	b.n	8004f08 <_sungetc_r+0x8>
 8004f44:	6921      	ldr	r1, [r4, #16]
 8004f46:	6823      	ldr	r3, [r4, #0]
 8004f48:	b151      	cbz	r1, 8004f60 <_sungetc_r+0x60>
 8004f4a:	4299      	cmp	r1, r3
 8004f4c:	d208      	bcs.n	8004f60 <_sungetc_r+0x60>
 8004f4e:	f813 1c01 	ldrb.w	r1, [r3, #-1]
 8004f52:	42a9      	cmp	r1, r5
 8004f54:	d104      	bne.n	8004f60 <_sungetc_r+0x60>
 8004f56:	3b01      	subs	r3, #1
 8004f58:	3201      	adds	r2, #1
 8004f5a:	6023      	str	r3, [r4, #0]
 8004f5c:	6062      	str	r2, [r4, #4]
 8004f5e:	e7d5      	b.n	8004f0c <_sungetc_r+0xc>
 8004f60:	e9c4 320f 	strd	r3, r2, [r4, #60]	; 0x3c
 8004f64:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8004f68:	6363      	str	r3, [r4, #52]	; 0x34
 8004f6a:	2303      	movs	r3, #3
 8004f6c:	63a3      	str	r3, [r4, #56]	; 0x38
 8004f6e:	4623      	mov	r3, r4
 8004f70:	f803 5f46 	strb.w	r5, [r3, #70]!
 8004f74:	6023      	str	r3, [r4, #0]
 8004f76:	2301      	movs	r3, #1
 8004f78:	e7dc      	b.n	8004f34 <_sungetc_r+0x34>

08004f7a <__ssrefill_r>:
 8004f7a:	b510      	push	{r4, lr}
 8004f7c:	460c      	mov	r4, r1
 8004f7e:	6b49      	ldr	r1, [r1, #52]	; 0x34
 8004f80:	b169      	cbz	r1, 8004f9e <__ssrefill_r+0x24>
 8004f82:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8004f86:	4299      	cmp	r1, r3
 8004f88:	d001      	beq.n	8004f8e <__ssrefill_r+0x14>
 8004f8a:	f7fd fb7b 	bl	8002684 <_free_r>
 8004f8e:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8004f90:	6063      	str	r3, [r4, #4]
 8004f92:	2000      	movs	r0, #0
 8004f94:	6360      	str	r0, [r4, #52]	; 0x34
 8004f96:	b113      	cbz	r3, 8004f9e <__ssrefill_r+0x24>
 8004f98:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8004f9a:	6023      	str	r3, [r4, #0]
 8004f9c:	bd10      	pop	{r4, pc}
 8004f9e:	6923      	ldr	r3, [r4, #16]
 8004fa0:	6023      	str	r3, [r4, #0]
 8004fa2:	2300      	movs	r3, #0
 8004fa4:	6063      	str	r3, [r4, #4]
 8004fa6:	89a3      	ldrh	r3, [r4, #12]
 8004fa8:	f043 0320 	orr.w	r3, r3, #32
 8004fac:	81a3      	strh	r3, [r4, #12]
 8004fae:	f04f 30ff 	mov.w	r0, #4294967295
 8004fb2:	e7f3      	b.n	8004f9c <__ssrefill_r+0x22>

08004fb4 <__ssvfiscanf_r>:
 8004fb4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004fb8:	460c      	mov	r4, r1
 8004fba:	f5ad 7d23 	sub.w	sp, sp, #652	; 0x28c
 8004fbe:	2100      	movs	r1, #0
 8004fc0:	e9cd 1144 	strd	r1, r1, [sp, #272]	; 0x110
 8004fc4:	49b2      	ldr	r1, [pc, #712]	; (8005290 <__ssvfiscanf_r+0x2dc>)
 8004fc6:	91a0      	str	r1, [sp, #640]	; 0x280
 8004fc8:	f10d 0804 	add.w	r8, sp, #4
 8004fcc:	49b1      	ldr	r1, [pc, #708]	; (8005294 <__ssvfiscanf_r+0x2e0>)
 8004fce:	4fb2      	ldr	r7, [pc, #712]	; (8005298 <__ssvfiscanf_r+0x2e4>)
 8004fd0:	f8df 92c8 	ldr.w	r9, [pc, #712]	; 800529c <__ssvfiscanf_r+0x2e8>
 8004fd4:	f8cd 8118 	str.w	r8, [sp, #280]	; 0x118
 8004fd8:	4606      	mov	r6, r0
 8004fda:	91a1      	str	r1, [sp, #644]	; 0x284
 8004fdc:	9300      	str	r3, [sp, #0]
 8004fde:	f892 a000 	ldrb.w	sl, [r2]
 8004fe2:	f1ba 0f00 	cmp.w	sl, #0
 8004fe6:	f000 8151 	beq.w	800528c <__ssvfiscanf_r+0x2d8>
 8004fea:	f81a 3007 	ldrb.w	r3, [sl, r7]
 8004fee:	f013 0308 	ands.w	r3, r3, #8
 8004ff2:	f102 0501 	add.w	r5, r2, #1
 8004ff6:	d019      	beq.n	800502c <__ssvfiscanf_r+0x78>
 8004ff8:	6863      	ldr	r3, [r4, #4]
 8004ffa:	2b00      	cmp	r3, #0
 8004ffc:	dd0f      	ble.n	800501e <__ssvfiscanf_r+0x6a>
 8004ffe:	6823      	ldr	r3, [r4, #0]
 8005000:	781a      	ldrb	r2, [r3, #0]
 8005002:	5cba      	ldrb	r2, [r7, r2]
 8005004:	0712      	lsls	r2, r2, #28
 8005006:	d401      	bmi.n	800500c <__ssvfiscanf_r+0x58>
 8005008:	462a      	mov	r2, r5
 800500a:	e7e8      	b.n	8004fde <__ssvfiscanf_r+0x2a>
 800500c:	9a45      	ldr	r2, [sp, #276]	; 0x114
 800500e:	3201      	adds	r2, #1
 8005010:	9245      	str	r2, [sp, #276]	; 0x114
 8005012:	6862      	ldr	r2, [r4, #4]
 8005014:	3301      	adds	r3, #1
 8005016:	3a01      	subs	r2, #1
 8005018:	6062      	str	r2, [r4, #4]
 800501a:	6023      	str	r3, [r4, #0]
 800501c:	e7ec      	b.n	8004ff8 <__ssvfiscanf_r+0x44>
 800501e:	9ba1      	ldr	r3, [sp, #644]	; 0x284
 8005020:	4621      	mov	r1, r4
 8005022:	4630      	mov	r0, r6
 8005024:	4798      	blx	r3
 8005026:	2800      	cmp	r0, #0
 8005028:	d0e9      	beq.n	8004ffe <__ssvfiscanf_r+0x4a>
 800502a:	e7ed      	b.n	8005008 <__ssvfiscanf_r+0x54>
 800502c:	f1ba 0f25 	cmp.w	sl, #37	; 0x25
 8005030:	f040 8083 	bne.w	800513a <__ssvfiscanf_r+0x186>
 8005034:	9341      	str	r3, [sp, #260]	; 0x104
 8005036:	9343      	str	r3, [sp, #268]	; 0x10c
 8005038:	7853      	ldrb	r3, [r2, #1]
 800503a:	2b2a      	cmp	r3, #42	; 0x2a
 800503c:	bf02      	ittt	eq
 800503e:	2310      	moveq	r3, #16
 8005040:	1c95      	addeq	r5, r2, #2
 8005042:	9341      	streq	r3, [sp, #260]	; 0x104
 8005044:	220a      	movs	r2, #10
 8005046:	46ab      	mov	fp, r5
 8005048:	f81b 1b01 	ldrb.w	r1, [fp], #1
 800504c:	f1a1 0330 	sub.w	r3, r1, #48	; 0x30
 8005050:	2b09      	cmp	r3, #9
 8005052:	d91d      	bls.n	8005090 <__ssvfiscanf_r+0xdc>
 8005054:	4891      	ldr	r0, [pc, #580]	; (800529c <__ssvfiscanf_r+0x2e8>)
 8005056:	2203      	movs	r2, #3
 8005058:	f7fb f8ca 	bl	80001f0 <memchr>
 800505c:	b140      	cbz	r0, 8005070 <__ssvfiscanf_r+0xbc>
 800505e:	2301      	movs	r3, #1
 8005060:	eba0 0009 	sub.w	r0, r0, r9
 8005064:	fa03 f000 	lsl.w	r0, r3, r0
 8005068:	9b41      	ldr	r3, [sp, #260]	; 0x104
 800506a:	4318      	orrs	r0, r3
 800506c:	9041      	str	r0, [sp, #260]	; 0x104
 800506e:	465d      	mov	r5, fp
 8005070:	f815 3b01 	ldrb.w	r3, [r5], #1
 8005074:	2b78      	cmp	r3, #120	; 0x78
 8005076:	d806      	bhi.n	8005086 <__ssvfiscanf_r+0xd2>
 8005078:	2b57      	cmp	r3, #87	; 0x57
 800507a:	d810      	bhi.n	800509e <__ssvfiscanf_r+0xea>
 800507c:	2b25      	cmp	r3, #37	; 0x25
 800507e:	d05c      	beq.n	800513a <__ssvfiscanf_r+0x186>
 8005080:	d856      	bhi.n	8005130 <__ssvfiscanf_r+0x17c>
 8005082:	2b00      	cmp	r3, #0
 8005084:	d074      	beq.n	8005170 <__ssvfiscanf_r+0x1bc>
 8005086:	2303      	movs	r3, #3
 8005088:	9347      	str	r3, [sp, #284]	; 0x11c
 800508a:	230a      	movs	r3, #10
 800508c:	9342      	str	r3, [sp, #264]	; 0x108
 800508e:	e081      	b.n	8005194 <__ssvfiscanf_r+0x1e0>
 8005090:	9b43      	ldr	r3, [sp, #268]	; 0x10c
 8005092:	fb02 1303 	mla	r3, r2, r3, r1
 8005096:	3b30      	subs	r3, #48	; 0x30
 8005098:	9343      	str	r3, [sp, #268]	; 0x10c
 800509a:	465d      	mov	r5, fp
 800509c:	e7d3      	b.n	8005046 <__ssvfiscanf_r+0x92>
 800509e:	f1a3 0258 	sub.w	r2, r3, #88	; 0x58
 80050a2:	2a20      	cmp	r2, #32
 80050a4:	d8ef      	bhi.n	8005086 <__ssvfiscanf_r+0xd2>
 80050a6:	a101      	add	r1, pc, #4	; (adr r1, 80050ac <__ssvfiscanf_r+0xf8>)
 80050a8:	f851 f022 	ldr.w	pc, [r1, r2, lsl #2]
 80050ac:	0800517f 	.word	0x0800517f
 80050b0:	08005087 	.word	0x08005087
 80050b4:	08005087 	.word	0x08005087
 80050b8:	080051dd 	.word	0x080051dd
 80050bc:	08005087 	.word	0x08005087
 80050c0:	08005087 	.word	0x08005087
 80050c4:	08005087 	.word	0x08005087
 80050c8:	08005087 	.word	0x08005087
 80050cc:	08005087 	.word	0x08005087
 80050d0:	08005087 	.word	0x08005087
 80050d4:	08005087 	.word	0x08005087
 80050d8:	080051f3 	.word	0x080051f3
 80050dc:	080051c9 	.word	0x080051c9
 80050e0:	08005137 	.word	0x08005137
 80050e4:	08005137 	.word	0x08005137
 80050e8:	08005137 	.word	0x08005137
 80050ec:	08005087 	.word	0x08005087
 80050f0:	080051cd 	.word	0x080051cd
 80050f4:	08005087 	.word	0x08005087
 80050f8:	08005087 	.word	0x08005087
 80050fc:	08005087 	.word	0x08005087
 8005100:	08005087 	.word	0x08005087
 8005104:	08005203 	.word	0x08005203
 8005108:	080051d5 	.word	0x080051d5
 800510c:	08005177 	.word	0x08005177
 8005110:	08005087 	.word	0x08005087
 8005114:	08005087 	.word	0x08005087
 8005118:	080051ff 	.word	0x080051ff
 800511c:	08005087 	.word	0x08005087
 8005120:	080051c9 	.word	0x080051c9
 8005124:	08005087 	.word	0x08005087
 8005128:	08005087 	.word	0x08005087
 800512c:	0800517f 	.word	0x0800517f
 8005130:	3b45      	subs	r3, #69	; 0x45
 8005132:	2b02      	cmp	r3, #2
 8005134:	d8a7      	bhi.n	8005086 <__ssvfiscanf_r+0xd2>
 8005136:	2305      	movs	r3, #5
 8005138:	e02b      	b.n	8005192 <__ssvfiscanf_r+0x1de>
 800513a:	6863      	ldr	r3, [r4, #4]
 800513c:	2b00      	cmp	r3, #0
 800513e:	dd0d      	ble.n	800515c <__ssvfiscanf_r+0x1a8>
 8005140:	6823      	ldr	r3, [r4, #0]
 8005142:	781a      	ldrb	r2, [r3, #0]
 8005144:	4552      	cmp	r2, sl
 8005146:	f040 80a1 	bne.w	800528c <__ssvfiscanf_r+0x2d8>
 800514a:	3301      	adds	r3, #1
 800514c:	6862      	ldr	r2, [r4, #4]
 800514e:	6023      	str	r3, [r4, #0]
 8005150:	9b45      	ldr	r3, [sp, #276]	; 0x114
 8005152:	3a01      	subs	r2, #1
 8005154:	3301      	adds	r3, #1
 8005156:	6062      	str	r2, [r4, #4]
 8005158:	9345      	str	r3, [sp, #276]	; 0x114
 800515a:	e755      	b.n	8005008 <__ssvfiscanf_r+0x54>
 800515c:	9ba1      	ldr	r3, [sp, #644]	; 0x284
 800515e:	4621      	mov	r1, r4
 8005160:	4630      	mov	r0, r6
 8005162:	4798      	blx	r3
 8005164:	2800      	cmp	r0, #0
 8005166:	d0eb      	beq.n	8005140 <__ssvfiscanf_r+0x18c>
 8005168:	9844      	ldr	r0, [sp, #272]	; 0x110
 800516a:	2800      	cmp	r0, #0
 800516c:	f040 8084 	bne.w	8005278 <__ssvfiscanf_r+0x2c4>
 8005170:	f04f 30ff 	mov.w	r0, #4294967295
 8005174:	e086      	b.n	8005284 <__ssvfiscanf_r+0x2d0>
 8005176:	9a41      	ldr	r2, [sp, #260]	; 0x104
 8005178:	f042 0220 	orr.w	r2, r2, #32
 800517c:	9241      	str	r2, [sp, #260]	; 0x104
 800517e:	9a41      	ldr	r2, [sp, #260]	; 0x104
 8005180:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8005184:	9241      	str	r2, [sp, #260]	; 0x104
 8005186:	2210      	movs	r2, #16
 8005188:	2b6f      	cmp	r3, #111	; 0x6f
 800518a:	9242      	str	r2, [sp, #264]	; 0x108
 800518c:	bf34      	ite	cc
 800518e:	2303      	movcc	r3, #3
 8005190:	2304      	movcs	r3, #4
 8005192:	9347      	str	r3, [sp, #284]	; 0x11c
 8005194:	6863      	ldr	r3, [r4, #4]
 8005196:	2b00      	cmp	r3, #0
 8005198:	dd41      	ble.n	800521e <__ssvfiscanf_r+0x26a>
 800519a:	9b41      	ldr	r3, [sp, #260]	; 0x104
 800519c:	0659      	lsls	r1, r3, #25
 800519e:	d404      	bmi.n	80051aa <__ssvfiscanf_r+0x1f6>
 80051a0:	6823      	ldr	r3, [r4, #0]
 80051a2:	781a      	ldrb	r2, [r3, #0]
 80051a4:	5cba      	ldrb	r2, [r7, r2]
 80051a6:	0712      	lsls	r2, r2, #28
 80051a8:	d440      	bmi.n	800522c <__ssvfiscanf_r+0x278>
 80051aa:	9b47      	ldr	r3, [sp, #284]	; 0x11c
 80051ac:	2b02      	cmp	r3, #2
 80051ae:	dc4f      	bgt.n	8005250 <__ssvfiscanf_r+0x29c>
 80051b0:	466b      	mov	r3, sp
 80051b2:	4622      	mov	r2, r4
 80051b4:	a941      	add	r1, sp, #260	; 0x104
 80051b6:	4630      	mov	r0, r6
 80051b8:	f000 fb62 	bl	8005880 <_scanf_chars>
 80051bc:	2801      	cmp	r0, #1
 80051be:	d065      	beq.n	800528c <__ssvfiscanf_r+0x2d8>
 80051c0:	2802      	cmp	r0, #2
 80051c2:	f47f af21 	bne.w	8005008 <__ssvfiscanf_r+0x54>
 80051c6:	e7cf      	b.n	8005168 <__ssvfiscanf_r+0x1b4>
 80051c8:	220a      	movs	r2, #10
 80051ca:	e7dd      	b.n	8005188 <__ssvfiscanf_r+0x1d4>
 80051cc:	2300      	movs	r3, #0
 80051ce:	9342      	str	r3, [sp, #264]	; 0x108
 80051d0:	2303      	movs	r3, #3
 80051d2:	e7de      	b.n	8005192 <__ssvfiscanf_r+0x1de>
 80051d4:	2308      	movs	r3, #8
 80051d6:	9342      	str	r3, [sp, #264]	; 0x108
 80051d8:	2304      	movs	r3, #4
 80051da:	e7da      	b.n	8005192 <__ssvfiscanf_r+0x1de>
 80051dc:	4629      	mov	r1, r5
 80051de:	4640      	mov	r0, r8
 80051e0:	f000 fcb6 	bl	8005b50 <__sccl>
 80051e4:	9b41      	ldr	r3, [sp, #260]	; 0x104
 80051e6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80051ea:	9341      	str	r3, [sp, #260]	; 0x104
 80051ec:	4605      	mov	r5, r0
 80051ee:	2301      	movs	r3, #1
 80051f0:	e7cf      	b.n	8005192 <__ssvfiscanf_r+0x1de>
 80051f2:	9b41      	ldr	r3, [sp, #260]	; 0x104
 80051f4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80051f8:	9341      	str	r3, [sp, #260]	; 0x104
 80051fa:	2300      	movs	r3, #0
 80051fc:	e7c9      	b.n	8005192 <__ssvfiscanf_r+0x1de>
 80051fe:	2302      	movs	r3, #2
 8005200:	e7c7      	b.n	8005192 <__ssvfiscanf_r+0x1de>
 8005202:	9841      	ldr	r0, [sp, #260]	; 0x104
 8005204:	06c3      	lsls	r3, r0, #27
 8005206:	f53f aeff 	bmi.w	8005008 <__ssvfiscanf_r+0x54>
 800520a:	9b00      	ldr	r3, [sp, #0]
 800520c:	9a45      	ldr	r2, [sp, #276]	; 0x114
 800520e:	1d19      	adds	r1, r3, #4
 8005210:	9100      	str	r1, [sp, #0]
 8005212:	681b      	ldr	r3, [r3, #0]
 8005214:	07c0      	lsls	r0, r0, #31
 8005216:	bf4c      	ite	mi
 8005218:	801a      	strhmi	r2, [r3, #0]
 800521a:	601a      	strpl	r2, [r3, #0]
 800521c:	e6f4      	b.n	8005008 <__ssvfiscanf_r+0x54>
 800521e:	9ba1      	ldr	r3, [sp, #644]	; 0x284
 8005220:	4621      	mov	r1, r4
 8005222:	4630      	mov	r0, r6
 8005224:	4798      	blx	r3
 8005226:	2800      	cmp	r0, #0
 8005228:	d0b7      	beq.n	800519a <__ssvfiscanf_r+0x1e6>
 800522a:	e79d      	b.n	8005168 <__ssvfiscanf_r+0x1b4>
 800522c:	9a45      	ldr	r2, [sp, #276]	; 0x114
 800522e:	3201      	adds	r2, #1
 8005230:	9245      	str	r2, [sp, #276]	; 0x114
 8005232:	6862      	ldr	r2, [r4, #4]
 8005234:	3a01      	subs	r2, #1
 8005236:	2a00      	cmp	r2, #0
 8005238:	6062      	str	r2, [r4, #4]
 800523a:	dd02      	ble.n	8005242 <__ssvfiscanf_r+0x28e>
 800523c:	3301      	adds	r3, #1
 800523e:	6023      	str	r3, [r4, #0]
 8005240:	e7ae      	b.n	80051a0 <__ssvfiscanf_r+0x1ec>
 8005242:	9ba1      	ldr	r3, [sp, #644]	; 0x284
 8005244:	4621      	mov	r1, r4
 8005246:	4630      	mov	r0, r6
 8005248:	4798      	blx	r3
 800524a:	2800      	cmp	r0, #0
 800524c:	d0a8      	beq.n	80051a0 <__ssvfiscanf_r+0x1ec>
 800524e:	e78b      	b.n	8005168 <__ssvfiscanf_r+0x1b4>
 8005250:	2b04      	cmp	r3, #4
 8005252:	dc06      	bgt.n	8005262 <__ssvfiscanf_r+0x2ae>
 8005254:	466b      	mov	r3, sp
 8005256:	4622      	mov	r2, r4
 8005258:	a941      	add	r1, sp, #260	; 0x104
 800525a:	4630      	mov	r0, r6
 800525c:	f000 fb68 	bl	8005930 <_scanf_i>
 8005260:	e7ac      	b.n	80051bc <__ssvfiscanf_r+0x208>
 8005262:	4b0f      	ldr	r3, [pc, #60]	; (80052a0 <__ssvfiscanf_r+0x2ec>)
 8005264:	2b00      	cmp	r3, #0
 8005266:	f43f aecf 	beq.w	8005008 <__ssvfiscanf_r+0x54>
 800526a:	466b      	mov	r3, sp
 800526c:	4622      	mov	r2, r4
 800526e:	a941      	add	r1, sp, #260	; 0x104
 8005270:	4630      	mov	r0, r6
 8005272:	f7fd fab1 	bl	80027d8 <_scanf_float>
 8005276:	e7a1      	b.n	80051bc <__ssvfiscanf_r+0x208>
 8005278:	89a3      	ldrh	r3, [r4, #12]
 800527a:	f013 0f40 	tst.w	r3, #64	; 0x40
 800527e:	bf18      	it	ne
 8005280:	f04f 30ff 	movne.w	r0, #4294967295
 8005284:	f50d 7d23 	add.w	sp, sp, #652	; 0x28c
 8005288:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800528c:	9844      	ldr	r0, [sp, #272]	; 0x110
 800528e:	e7f9      	b.n	8005284 <__ssvfiscanf_r+0x2d0>
 8005290:	08004f01 	.word	0x08004f01
 8005294:	08004f7b 	.word	0x08004f7b
 8005298:	08007e6d 	.word	0x08007e6d
 800529c:	0800817a 	.word	0x0800817a
 80052a0:	080027d9 	.word	0x080027d9

080052a4 <__sfputc_r>:
 80052a4:	6893      	ldr	r3, [r2, #8]
 80052a6:	3b01      	subs	r3, #1
 80052a8:	2b00      	cmp	r3, #0
 80052aa:	b410      	push	{r4}
 80052ac:	6093      	str	r3, [r2, #8]
 80052ae:	da08      	bge.n	80052c2 <__sfputc_r+0x1e>
 80052b0:	6994      	ldr	r4, [r2, #24]
 80052b2:	42a3      	cmp	r3, r4
 80052b4:	db01      	blt.n	80052ba <__sfputc_r+0x16>
 80052b6:	290a      	cmp	r1, #10
 80052b8:	d103      	bne.n	80052c2 <__sfputc_r+0x1e>
 80052ba:	f85d 4b04 	ldr.w	r4, [sp], #4
 80052be:	f000 bd4b 	b.w	8005d58 <__swbuf_r>
 80052c2:	6813      	ldr	r3, [r2, #0]
 80052c4:	1c58      	adds	r0, r3, #1
 80052c6:	6010      	str	r0, [r2, #0]
 80052c8:	7019      	strb	r1, [r3, #0]
 80052ca:	4608      	mov	r0, r1
 80052cc:	f85d 4b04 	ldr.w	r4, [sp], #4
 80052d0:	4770      	bx	lr

080052d2 <__sfputs_r>:
 80052d2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80052d4:	4606      	mov	r6, r0
 80052d6:	460f      	mov	r7, r1
 80052d8:	4614      	mov	r4, r2
 80052da:	18d5      	adds	r5, r2, r3
 80052dc:	42ac      	cmp	r4, r5
 80052de:	d101      	bne.n	80052e4 <__sfputs_r+0x12>
 80052e0:	2000      	movs	r0, #0
 80052e2:	e007      	b.n	80052f4 <__sfputs_r+0x22>
 80052e4:	f814 1b01 	ldrb.w	r1, [r4], #1
 80052e8:	463a      	mov	r2, r7
 80052ea:	4630      	mov	r0, r6
 80052ec:	f7ff ffda 	bl	80052a4 <__sfputc_r>
 80052f0:	1c43      	adds	r3, r0, #1
 80052f2:	d1f3      	bne.n	80052dc <__sfputs_r+0xa>
 80052f4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

080052f8 <_vfiprintf_r>:
 80052f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80052fc:	460d      	mov	r5, r1
 80052fe:	b09d      	sub	sp, #116	; 0x74
 8005300:	4614      	mov	r4, r2
 8005302:	4698      	mov	r8, r3
 8005304:	4606      	mov	r6, r0
 8005306:	b118      	cbz	r0, 8005310 <_vfiprintf_r+0x18>
 8005308:	6983      	ldr	r3, [r0, #24]
 800530a:	b90b      	cbnz	r3, 8005310 <_vfiprintf_r+0x18>
 800530c:	f000 ff14 	bl	8006138 <__sinit>
 8005310:	4b89      	ldr	r3, [pc, #548]	; (8005538 <_vfiprintf_r+0x240>)
 8005312:	429d      	cmp	r5, r3
 8005314:	d11b      	bne.n	800534e <_vfiprintf_r+0x56>
 8005316:	6875      	ldr	r5, [r6, #4]
 8005318:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800531a:	07d9      	lsls	r1, r3, #31
 800531c:	d405      	bmi.n	800532a <_vfiprintf_r+0x32>
 800531e:	89ab      	ldrh	r3, [r5, #12]
 8005320:	059a      	lsls	r2, r3, #22
 8005322:	d402      	bmi.n	800532a <_vfiprintf_r+0x32>
 8005324:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8005326:	f7fe ff84 	bl	8004232 <__retarget_lock_acquire_recursive>
 800532a:	89ab      	ldrh	r3, [r5, #12]
 800532c:	071b      	lsls	r3, r3, #28
 800532e:	d501      	bpl.n	8005334 <_vfiprintf_r+0x3c>
 8005330:	692b      	ldr	r3, [r5, #16]
 8005332:	b9eb      	cbnz	r3, 8005370 <_vfiprintf_r+0x78>
 8005334:	4629      	mov	r1, r5
 8005336:	4630      	mov	r0, r6
 8005338:	f000 fd6e 	bl	8005e18 <__swsetup_r>
 800533c:	b1c0      	cbz	r0, 8005370 <_vfiprintf_r+0x78>
 800533e:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8005340:	07dc      	lsls	r4, r3, #31
 8005342:	d50e      	bpl.n	8005362 <_vfiprintf_r+0x6a>
 8005344:	f04f 30ff 	mov.w	r0, #4294967295
 8005348:	b01d      	add	sp, #116	; 0x74
 800534a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800534e:	4b7b      	ldr	r3, [pc, #492]	; (800553c <_vfiprintf_r+0x244>)
 8005350:	429d      	cmp	r5, r3
 8005352:	d101      	bne.n	8005358 <_vfiprintf_r+0x60>
 8005354:	68b5      	ldr	r5, [r6, #8]
 8005356:	e7df      	b.n	8005318 <_vfiprintf_r+0x20>
 8005358:	4b79      	ldr	r3, [pc, #484]	; (8005540 <_vfiprintf_r+0x248>)
 800535a:	429d      	cmp	r5, r3
 800535c:	bf08      	it	eq
 800535e:	68f5      	ldreq	r5, [r6, #12]
 8005360:	e7da      	b.n	8005318 <_vfiprintf_r+0x20>
 8005362:	89ab      	ldrh	r3, [r5, #12]
 8005364:	0598      	lsls	r0, r3, #22
 8005366:	d4ed      	bmi.n	8005344 <_vfiprintf_r+0x4c>
 8005368:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800536a:	f7fe ff63 	bl	8004234 <__retarget_lock_release_recursive>
 800536e:	e7e9      	b.n	8005344 <_vfiprintf_r+0x4c>
 8005370:	2300      	movs	r3, #0
 8005372:	9309      	str	r3, [sp, #36]	; 0x24
 8005374:	2320      	movs	r3, #32
 8005376:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800537a:	f8cd 800c 	str.w	r8, [sp, #12]
 800537e:	2330      	movs	r3, #48	; 0x30
 8005380:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8005544 <_vfiprintf_r+0x24c>
 8005384:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8005388:	f04f 0901 	mov.w	r9, #1
 800538c:	4623      	mov	r3, r4
 800538e:	469a      	mov	sl, r3
 8005390:	f813 2b01 	ldrb.w	r2, [r3], #1
 8005394:	b10a      	cbz	r2, 800539a <_vfiprintf_r+0xa2>
 8005396:	2a25      	cmp	r2, #37	; 0x25
 8005398:	d1f9      	bne.n	800538e <_vfiprintf_r+0x96>
 800539a:	ebba 0b04 	subs.w	fp, sl, r4
 800539e:	d00b      	beq.n	80053b8 <_vfiprintf_r+0xc0>
 80053a0:	465b      	mov	r3, fp
 80053a2:	4622      	mov	r2, r4
 80053a4:	4629      	mov	r1, r5
 80053a6:	4630      	mov	r0, r6
 80053a8:	f7ff ff93 	bl	80052d2 <__sfputs_r>
 80053ac:	3001      	adds	r0, #1
 80053ae:	f000 80aa 	beq.w	8005506 <_vfiprintf_r+0x20e>
 80053b2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80053b4:	445a      	add	r2, fp
 80053b6:	9209      	str	r2, [sp, #36]	; 0x24
 80053b8:	f89a 3000 	ldrb.w	r3, [sl]
 80053bc:	2b00      	cmp	r3, #0
 80053be:	f000 80a2 	beq.w	8005506 <_vfiprintf_r+0x20e>
 80053c2:	2300      	movs	r3, #0
 80053c4:	f04f 32ff 	mov.w	r2, #4294967295
 80053c8:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80053cc:	f10a 0a01 	add.w	sl, sl, #1
 80053d0:	9304      	str	r3, [sp, #16]
 80053d2:	9307      	str	r3, [sp, #28]
 80053d4:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 80053d8:	931a      	str	r3, [sp, #104]	; 0x68
 80053da:	4654      	mov	r4, sl
 80053dc:	2205      	movs	r2, #5
 80053de:	f814 1b01 	ldrb.w	r1, [r4], #1
 80053e2:	4858      	ldr	r0, [pc, #352]	; (8005544 <_vfiprintf_r+0x24c>)
 80053e4:	f7fa ff04 	bl	80001f0 <memchr>
 80053e8:	9a04      	ldr	r2, [sp, #16]
 80053ea:	b9d8      	cbnz	r0, 8005424 <_vfiprintf_r+0x12c>
 80053ec:	06d1      	lsls	r1, r2, #27
 80053ee:	bf44      	itt	mi
 80053f0:	2320      	movmi	r3, #32
 80053f2:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80053f6:	0713      	lsls	r3, r2, #28
 80053f8:	bf44      	itt	mi
 80053fa:	232b      	movmi	r3, #43	; 0x2b
 80053fc:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8005400:	f89a 3000 	ldrb.w	r3, [sl]
 8005404:	2b2a      	cmp	r3, #42	; 0x2a
 8005406:	d015      	beq.n	8005434 <_vfiprintf_r+0x13c>
 8005408:	9a07      	ldr	r2, [sp, #28]
 800540a:	4654      	mov	r4, sl
 800540c:	2000      	movs	r0, #0
 800540e:	f04f 0c0a 	mov.w	ip, #10
 8005412:	4621      	mov	r1, r4
 8005414:	f811 3b01 	ldrb.w	r3, [r1], #1
 8005418:	3b30      	subs	r3, #48	; 0x30
 800541a:	2b09      	cmp	r3, #9
 800541c:	d94e      	bls.n	80054bc <_vfiprintf_r+0x1c4>
 800541e:	b1b0      	cbz	r0, 800544e <_vfiprintf_r+0x156>
 8005420:	9207      	str	r2, [sp, #28]
 8005422:	e014      	b.n	800544e <_vfiprintf_r+0x156>
 8005424:	eba0 0308 	sub.w	r3, r0, r8
 8005428:	fa09 f303 	lsl.w	r3, r9, r3
 800542c:	4313      	orrs	r3, r2
 800542e:	9304      	str	r3, [sp, #16]
 8005430:	46a2      	mov	sl, r4
 8005432:	e7d2      	b.n	80053da <_vfiprintf_r+0xe2>
 8005434:	9b03      	ldr	r3, [sp, #12]
 8005436:	1d19      	adds	r1, r3, #4
 8005438:	681b      	ldr	r3, [r3, #0]
 800543a:	9103      	str	r1, [sp, #12]
 800543c:	2b00      	cmp	r3, #0
 800543e:	bfbb      	ittet	lt
 8005440:	425b      	neglt	r3, r3
 8005442:	f042 0202 	orrlt.w	r2, r2, #2
 8005446:	9307      	strge	r3, [sp, #28]
 8005448:	9307      	strlt	r3, [sp, #28]
 800544a:	bfb8      	it	lt
 800544c:	9204      	strlt	r2, [sp, #16]
 800544e:	7823      	ldrb	r3, [r4, #0]
 8005450:	2b2e      	cmp	r3, #46	; 0x2e
 8005452:	d10c      	bne.n	800546e <_vfiprintf_r+0x176>
 8005454:	7863      	ldrb	r3, [r4, #1]
 8005456:	2b2a      	cmp	r3, #42	; 0x2a
 8005458:	d135      	bne.n	80054c6 <_vfiprintf_r+0x1ce>
 800545a:	9b03      	ldr	r3, [sp, #12]
 800545c:	1d1a      	adds	r2, r3, #4
 800545e:	681b      	ldr	r3, [r3, #0]
 8005460:	9203      	str	r2, [sp, #12]
 8005462:	2b00      	cmp	r3, #0
 8005464:	bfb8      	it	lt
 8005466:	f04f 33ff 	movlt.w	r3, #4294967295
 800546a:	3402      	adds	r4, #2
 800546c:	9305      	str	r3, [sp, #20]
 800546e:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8005554 <_vfiprintf_r+0x25c>
 8005472:	7821      	ldrb	r1, [r4, #0]
 8005474:	2203      	movs	r2, #3
 8005476:	4650      	mov	r0, sl
 8005478:	f7fa feba 	bl	80001f0 <memchr>
 800547c:	b140      	cbz	r0, 8005490 <_vfiprintf_r+0x198>
 800547e:	2340      	movs	r3, #64	; 0x40
 8005480:	eba0 000a 	sub.w	r0, r0, sl
 8005484:	fa03 f000 	lsl.w	r0, r3, r0
 8005488:	9b04      	ldr	r3, [sp, #16]
 800548a:	4303      	orrs	r3, r0
 800548c:	3401      	adds	r4, #1
 800548e:	9304      	str	r3, [sp, #16]
 8005490:	f814 1b01 	ldrb.w	r1, [r4], #1
 8005494:	482c      	ldr	r0, [pc, #176]	; (8005548 <_vfiprintf_r+0x250>)
 8005496:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 800549a:	2206      	movs	r2, #6
 800549c:	f7fa fea8 	bl	80001f0 <memchr>
 80054a0:	2800      	cmp	r0, #0
 80054a2:	d03f      	beq.n	8005524 <_vfiprintf_r+0x22c>
 80054a4:	4b29      	ldr	r3, [pc, #164]	; (800554c <_vfiprintf_r+0x254>)
 80054a6:	bb1b      	cbnz	r3, 80054f0 <_vfiprintf_r+0x1f8>
 80054a8:	9b03      	ldr	r3, [sp, #12]
 80054aa:	3307      	adds	r3, #7
 80054ac:	f023 0307 	bic.w	r3, r3, #7
 80054b0:	3308      	adds	r3, #8
 80054b2:	9303      	str	r3, [sp, #12]
 80054b4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80054b6:	443b      	add	r3, r7
 80054b8:	9309      	str	r3, [sp, #36]	; 0x24
 80054ba:	e767      	b.n	800538c <_vfiprintf_r+0x94>
 80054bc:	fb0c 3202 	mla	r2, ip, r2, r3
 80054c0:	460c      	mov	r4, r1
 80054c2:	2001      	movs	r0, #1
 80054c4:	e7a5      	b.n	8005412 <_vfiprintf_r+0x11a>
 80054c6:	2300      	movs	r3, #0
 80054c8:	3401      	adds	r4, #1
 80054ca:	9305      	str	r3, [sp, #20]
 80054cc:	4619      	mov	r1, r3
 80054ce:	f04f 0c0a 	mov.w	ip, #10
 80054d2:	4620      	mov	r0, r4
 80054d4:	f810 2b01 	ldrb.w	r2, [r0], #1
 80054d8:	3a30      	subs	r2, #48	; 0x30
 80054da:	2a09      	cmp	r2, #9
 80054dc:	d903      	bls.n	80054e6 <_vfiprintf_r+0x1ee>
 80054de:	2b00      	cmp	r3, #0
 80054e0:	d0c5      	beq.n	800546e <_vfiprintf_r+0x176>
 80054e2:	9105      	str	r1, [sp, #20]
 80054e4:	e7c3      	b.n	800546e <_vfiprintf_r+0x176>
 80054e6:	fb0c 2101 	mla	r1, ip, r1, r2
 80054ea:	4604      	mov	r4, r0
 80054ec:	2301      	movs	r3, #1
 80054ee:	e7f0      	b.n	80054d2 <_vfiprintf_r+0x1da>
 80054f0:	ab03      	add	r3, sp, #12
 80054f2:	9300      	str	r3, [sp, #0]
 80054f4:	462a      	mov	r2, r5
 80054f6:	4b16      	ldr	r3, [pc, #88]	; (8005550 <_vfiprintf_r+0x258>)
 80054f8:	a904      	add	r1, sp, #16
 80054fa:	4630      	mov	r0, r6
 80054fc:	f3af 8000 	nop.w
 8005500:	4607      	mov	r7, r0
 8005502:	1c78      	adds	r0, r7, #1
 8005504:	d1d6      	bne.n	80054b4 <_vfiprintf_r+0x1bc>
 8005506:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8005508:	07d9      	lsls	r1, r3, #31
 800550a:	d405      	bmi.n	8005518 <_vfiprintf_r+0x220>
 800550c:	89ab      	ldrh	r3, [r5, #12]
 800550e:	059a      	lsls	r2, r3, #22
 8005510:	d402      	bmi.n	8005518 <_vfiprintf_r+0x220>
 8005512:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8005514:	f7fe fe8e 	bl	8004234 <__retarget_lock_release_recursive>
 8005518:	89ab      	ldrh	r3, [r5, #12]
 800551a:	065b      	lsls	r3, r3, #25
 800551c:	f53f af12 	bmi.w	8005344 <_vfiprintf_r+0x4c>
 8005520:	9809      	ldr	r0, [sp, #36]	; 0x24
 8005522:	e711      	b.n	8005348 <_vfiprintf_r+0x50>
 8005524:	ab03      	add	r3, sp, #12
 8005526:	9300      	str	r3, [sp, #0]
 8005528:	462a      	mov	r2, r5
 800552a:	4b09      	ldr	r3, [pc, #36]	; (8005550 <_vfiprintf_r+0x258>)
 800552c:	a904      	add	r1, sp, #16
 800552e:	4630      	mov	r0, r6
 8005530:	f000 f880 	bl	8005634 <_printf_i>
 8005534:	e7e4      	b.n	8005500 <_vfiprintf_r+0x208>
 8005536:	bf00      	nop
 8005538:	080081e4 	.word	0x080081e4
 800553c:	08008204 	.word	0x08008204
 8005540:	080081c4 	.word	0x080081c4
 8005544:	08008174 	.word	0x08008174
 8005548:	0800817e 	.word	0x0800817e
 800554c:	00000000 	.word	0x00000000
 8005550:	080052d3 	.word	0x080052d3
 8005554:	0800817a 	.word	0x0800817a

08005558 <_printf_common>:
 8005558:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800555c:	4616      	mov	r6, r2
 800555e:	4699      	mov	r9, r3
 8005560:	688a      	ldr	r2, [r1, #8]
 8005562:	690b      	ldr	r3, [r1, #16]
 8005564:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8005568:	4293      	cmp	r3, r2
 800556a:	bfb8      	it	lt
 800556c:	4613      	movlt	r3, r2
 800556e:	6033      	str	r3, [r6, #0]
 8005570:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8005574:	4607      	mov	r7, r0
 8005576:	460c      	mov	r4, r1
 8005578:	b10a      	cbz	r2, 800557e <_printf_common+0x26>
 800557a:	3301      	adds	r3, #1
 800557c:	6033      	str	r3, [r6, #0]
 800557e:	6823      	ldr	r3, [r4, #0]
 8005580:	0699      	lsls	r1, r3, #26
 8005582:	bf42      	ittt	mi
 8005584:	6833      	ldrmi	r3, [r6, #0]
 8005586:	3302      	addmi	r3, #2
 8005588:	6033      	strmi	r3, [r6, #0]
 800558a:	6825      	ldr	r5, [r4, #0]
 800558c:	f015 0506 	ands.w	r5, r5, #6
 8005590:	d106      	bne.n	80055a0 <_printf_common+0x48>
 8005592:	f104 0a19 	add.w	sl, r4, #25
 8005596:	68e3      	ldr	r3, [r4, #12]
 8005598:	6832      	ldr	r2, [r6, #0]
 800559a:	1a9b      	subs	r3, r3, r2
 800559c:	42ab      	cmp	r3, r5
 800559e:	dc26      	bgt.n	80055ee <_printf_common+0x96>
 80055a0:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 80055a4:	1e13      	subs	r3, r2, #0
 80055a6:	6822      	ldr	r2, [r4, #0]
 80055a8:	bf18      	it	ne
 80055aa:	2301      	movne	r3, #1
 80055ac:	0692      	lsls	r2, r2, #26
 80055ae:	d42b      	bmi.n	8005608 <_printf_common+0xb0>
 80055b0:	f104 0243 	add.w	r2, r4, #67	; 0x43
 80055b4:	4649      	mov	r1, r9
 80055b6:	4638      	mov	r0, r7
 80055b8:	47c0      	blx	r8
 80055ba:	3001      	adds	r0, #1
 80055bc:	d01e      	beq.n	80055fc <_printf_common+0xa4>
 80055be:	6823      	ldr	r3, [r4, #0]
 80055c0:	68e5      	ldr	r5, [r4, #12]
 80055c2:	6832      	ldr	r2, [r6, #0]
 80055c4:	f003 0306 	and.w	r3, r3, #6
 80055c8:	2b04      	cmp	r3, #4
 80055ca:	bf08      	it	eq
 80055cc:	1aad      	subeq	r5, r5, r2
 80055ce:	68a3      	ldr	r3, [r4, #8]
 80055d0:	6922      	ldr	r2, [r4, #16]
 80055d2:	bf0c      	ite	eq
 80055d4:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80055d8:	2500      	movne	r5, #0
 80055da:	4293      	cmp	r3, r2
 80055dc:	bfc4      	itt	gt
 80055de:	1a9b      	subgt	r3, r3, r2
 80055e0:	18ed      	addgt	r5, r5, r3
 80055e2:	2600      	movs	r6, #0
 80055e4:	341a      	adds	r4, #26
 80055e6:	42b5      	cmp	r5, r6
 80055e8:	d11a      	bne.n	8005620 <_printf_common+0xc8>
 80055ea:	2000      	movs	r0, #0
 80055ec:	e008      	b.n	8005600 <_printf_common+0xa8>
 80055ee:	2301      	movs	r3, #1
 80055f0:	4652      	mov	r2, sl
 80055f2:	4649      	mov	r1, r9
 80055f4:	4638      	mov	r0, r7
 80055f6:	47c0      	blx	r8
 80055f8:	3001      	adds	r0, #1
 80055fa:	d103      	bne.n	8005604 <_printf_common+0xac>
 80055fc:	f04f 30ff 	mov.w	r0, #4294967295
 8005600:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8005604:	3501      	adds	r5, #1
 8005606:	e7c6      	b.n	8005596 <_printf_common+0x3e>
 8005608:	18e1      	adds	r1, r4, r3
 800560a:	1c5a      	adds	r2, r3, #1
 800560c:	2030      	movs	r0, #48	; 0x30
 800560e:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8005612:	4422      	add	r2, r4
 8005614:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8005618:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 800561c:	3302      	adds	r3, #2
 800561e:	e7c7      	b.n	80055b0 <_printf_common+0x58>
 8005620:	2301      	movs	r3, #1
 8005622:	4622      	mov	r2, r4
 8005624:	4649      	mov	r1, r9
 8005626:	4638      	mov	r0, r7
 8005628:	47c0      	blx	r8
 800562a:	3001      	adds	r0, #1
 800562c:	d0e6      	beq.n	80055fc <_printf_common+0xa4>
 800562e:	3601      	adds	r6, #1
 8005630:	e7d9      	b.n	80055e6 <_printf_common+0x8e>
	...

08005634 <_printf_i>:
 8005634:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8005638:	460c      	mov	r4, r1
 800563a:	4691      	mov	r9, r2
 800563c:	7e27      	ldrb	r7, [r4, #24]
 800563e:	990c      	ldr	r1, [sp, #48]	; 0x30
 8005640:	2f78      	cmp	r7, #120	; 0x78
 8005642:	4680      	mov	r8, r0
 8005644:	469a      	mov	sl, r3
 8005646:	f104 0243 	add.w	r2, r4, #67	; 0x43
 800564a:	d807      	bhi.n	800565c <_printf_i+0x28>
 800564c:	2f62      	cmp	r7, #98	; 0x62
 800564e:	d80a      	bhi.n	8005666 <_printf_i+0x32>
 8005650:	2f00      	cmp	r7, #0
 8005652:	f000 80d8 	beq.w	8005806 <_printf_i+0x1d2>
 8005656:	2f58      	cmp	r7, #88	; 0x58
 8005658:	f000 80a3 	beq.w	80057a2 <_printf_i+0x16e>
 800565c:	f104 0642 	add.w	r6, r4, #66	; 0x42
 8005660:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8005664:	e03a      	b.n	80056dc <_printf_i+0xa8>
 8005666:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 800566a:	2b15      	cmp	r3, #21
 800566c:	d8f6      	bhi.n	800565c <_printf_i+0x28>
 800566e:	a001      	add	r0, pc, #4	; (adr r0, 8005674 <_printf_i+0x40>)
 8005670:	f850 f023 	ldr.w	pc, [r0, r3, lsl #2]
 8005674:	080056cd 	.word	0x080056cd
 8005678:	080056e1 	.word	0x080056e1
 800567c:	0800565d 	.word	0x0800565d
 8005680:	0800565d 	.word	0x0800565d
 8005684:	0800565d 	.word	0x0800565d
 8005688:	0800565d 	.word	0x0800565d
 800568c:	080056e1 	.word	0x080056e1
 8005690:	0800565d 	.word	0x0800565d
 8005694:	0800565d 	.word	0x0800565d
 8005698:	0800565d 	.word	0x0800565d
 800569c:	0800565d 	.word	0x0800565d
 80056a0:	080057ed 	.word	0x080057ed
 80056a4:	08005711 	.word	0x08005711
 80056a8:	080057cf 	.word	0x080057cf
 80056ac:	0800565d 	.word	0x0800565d
 80056b0:	0800565d 	.word	0x0800565d
 80056b4:	0800580f 	.word	0x0800580f
 80056b8:	0800565d 	.word	0x0800565d
 80056bc:	08005711 	.word	0x08005711
 80056c0:	0800565d 	.word	0x0800565d
 80056c4:	0800565d 	.word	0x0800565d
 80056c8:	080057d7 	.word	0x080057d7
 80056cc:	680b      	ldr	r3, [r1, #0]
 80056ce:	1d1a      	adds	r2, r3, #4
 80056d0:	681b      	ldr	r3, [r3, #0]
 80056d2:	600a      	str	r2, [r1, #0]
 80056d4:	f104 0642 	add.w	r6, r4, #66	; 0x42
 80056d8:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80056dc:	2301      	movs	r3, #1
 80056de:	e0a3      	b.n	8005828 <_printf_i+0x1f4>
 80056e0:	6825      	ldr	r5, [r4, #0]
 80056e2:	6808      	ldr	r0, [r1, #0]
 80056e4:	062e      	lsls	r6, r5, #24
 80056e6:	f100 0304 	add.w	r3, r0, #4
 80056ea:	d50a      	bpl.n	8005702 <_printf_i+0xce>
 80056ec:	6805      	ldr	r5, [r0, #0]
 80056ee:	600b      	str	r3, [r1, #0]
 80056f0:	2d00      	cmp	r5, #0
 80056f2:	da03      	bge.n	80056fc <_printf_i+0xc8>
 80056f4:	232d      	movs	r3, #45	; 0x2d
 80056f6:	426d      	negs	r5, r5
 80056f8:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80056fc:	485e      	ldr	r0, [pc, #376]	; (8005878 <_printf_i+0x244>)
 80056fe:	230a      	movs	r3, #10
 8005700:	e019      	b.n	8005736 <_printf_i+0x102>
 8005702:	f015 0f40 	tst.w	r5, #64	; 0x40
 8005706:	6805      	ldr	r5, [r0, #0]
 8005708:	600b      	str	r3, [r1, #0]
 800570a:	bf18      	it	ne
 800570c:	b22d      	sxthne	r5, r5
 800570e:	e7ef      	b.n	80056f0 <_printf_i+0xbc>
 8005710:	680b      	ldr	r3, [r1, #0]
 8005712:	6825      	ldr	r5, [r4, #0]
 8005714:	1d18      	adds	r0, r3, #4
 8005716:	6008      	str	r0, [r1, #0]
 8005718:	0628      	lsls	r0, r5, #24
 800571a:	d501      	bpl.n	8005720 <_printf_i+0xec>
 800571c:	681d      	ldr	r5, [r3, #0]
 800571e:	e002      	b.n	8005726 <_printf_i+0xf2>
 8005720:	0669      	lsls	r1, r5, #25
 8005722:	d5fb      	bpl.n	800571c <_printf_i+0xe8>
 8005724:	881d      	ldrh	r5, [r3, #0]
 8005726:	4854      	ldr	r0, [pc, #336]	; (8005878 <_printf_i+0x244>)
 8005728:	2f6f      	cmp	r7, #111	; 0x6f
 800572a:	bf0c      	ite	eq
 800572c:	2308      	moveq	r3, #8
 800572e:	230a      	movne	r3, #10
 8005730:	2100      	movs	r1, #0
 8005732:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8005736:	6866      	ldr	r6, [r4, #4]
 8005738:	60a6      	str	r6, [r4, #8]
 800573a:	2e00      	cmp	r6, #0
 800573c:	bfa2      	ittt	ge
 800573e:	6821      	ldrge	r1, [r4, #0]
 8005740:	f021 0104 	bicge.w	r1, r1, #4
 8005744:	6021      	strge	r1, [r4, #0]
 8005746:	b90d      	cbnz	r5, 800574c <_printf_i+0x118>
 8005748:	2e00      	cmp	r6, #0
 800574a:	d04d      	beq.n	80057e8 <_printf_i+0x1b4>
 800574c:	4616      	mov	r6, r2
 800574e:	fbb5 f1f3 	udiv	r1, r5, r3
 8005752:	fb03 5711 	mls	r7, r3, r1, r5
 8005756:	5dc7      	ldrb	r7, [r0, r7]
 8005758:	f806 7d01 	strb.w	r7, [r6, #-1]!
 800575c:	462f      	mov	r7, r5
 800575e:	42bb      	cmp	r3, r7
 8005760:	460d      	mov	r5, r1
 8005762:	d9f4      	bls.n	800574e <_printf_i+0x11a>
 8005764:	2b08      	cmp	r3, #8
 8005766:	d10b      	bne.n	8005780 <_printf_i+0x14c>
 8005768:	6823      	ldr	r3, [r4, #0]
 800576a:	07df      	lsls	r7, r3, #31
 800576c:	d508      	bpl.n	8005780 <_printf_i+0x14c>
 800576e:	6923      	ldr	r3, [r4, #16]
 8005770:	6861      	ldr	r1, [r4, #4]
 8005772:	4299      	cmp	r1, r3
 8005774:	bfde      	ittt	le
 8005776:	2330      	movle	r3, #48	; 0x30
 8005778:	f806 3c01 	strble.w	r3, [r6, #-1]
 800577c:	f106 36ff 	addle.w	r6, r6, #4294967295
 8005780:	1b92      	subs	r2, r2, r6
 8005782:	6122      	str	r2, [r4, #16]
 8005784:	f8cd a000 	str.w	sl, [sp]
 8005788:	464b      	mov	r3, r9
 800578a:	aa03      	add	r2, sp, #12
 800578c:	4621      	mov	r1, r4
 800578e:	4640      	mov	r0, r8
 8005790:	f7ff fee2 	bl	8005558 <_printf_common>
 8005794:	3001      	adds	r0, #1
 8005796:	d14c      	bne.n	8005832 <_printf_i+0x1fe>
 8005798:	f04f 30ff 	mov.w	r0, #4294967295
 800579c:	b004      	add	sp, #16
 800579e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80057a2:	4835      	ldr	r0, [pc, #212]	; (8005878 <_printf_i+0x244>)
 80057a4:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 80057a8:	6823      	ldr	r3, [r4, #0]
 80057aa:	680e      	ldr	r6, [r1, #0]
 80057ac:	061f      	lsls	r7, r3, #24
 80057ae:	f856 5b04 	ldr.w	r5, [r6], #4
 80057b2:	600e      	str	r6, [r1, #0]
 80057b4:	d514      	bpl.n	80057e0 <_printf_i+0x1ac>
 80057b6:	07d9      	lsls	r1, r3, #31
 80057b8:	bf44      	itt	mi
 80057ba:	f043 0320 	orrmi.w	r3, r3, #32
 80057be:	6023      	strmi	r3, [r4, #0]
 80057c0:	b91d      	cbnz	r5, 80057ca <_printf_i+0x196>
 80057c2:	6823      	ldr	r3, [r4, #0]
 80057c4:	f023 0320 	bic.w	r3, r3, #32
 80057c8:	6023      	str	r3, [r4, #0]
 80057ca:	2310      	movs	r3, #16
 80057cc:	e7b0      	b.n	8005730 <_printf_i+0xfc>
 80057ce:	6823      	ldr	r3, [r4, #0]
 80057d0:	f043 0320 	orr.w	r3, r3, #32
 80057d4:	6023      	str	r3, [r4, #0]
 80057d6:	2378      	movs	r3, #120	; 0x78
 80057d8:	4828      	ldr	r0, [pc, #160]	; (800587c <_printf_i+0x248>)
 80057da:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 80057de:	e7e3      	b.n	80057a8 <_printf_i+0x174>
 80057e0:	065e      	lsls	r6, r3, #25
 80057e2:	bf48      	it	mi
 80057e4:	b2ad      	uxthmi	r5, r5
 80057e6:	e7e6      	b.n	80057b6 <_printf_i+0x182>
 80057e8:	4616      	mov	r6, r2
 80057ea:	e7bb      	b.n	8005764 <_printf_i+0x130>
 80057ec:	680b      	ldr	r3, [r1, #0]
 80057ee:	6826      	ldr	r6, [r4, #0]
 80057f0:	6960      	ldr	r0, [r4, #20]
 80057f2:	1d1d      	adds	r5, r3, #4
 80057f4:	600d      	str	r5, [r1, #0]
 80057f6:	0635      	lsls	r5, r6, #24
 80057f8:	681b      	ldr	r3, [r3, #0]
 80057fa:	d501      	bpl.n	8005800 <_printf_i+0x1cc>
 80057fc:	6018      	str	r0, [r3, #0]
 80057fe:	e002      	b.n	8005806 <_printf_i+0x1d2>
 8005800:	0671      	lsls	r1, r6, #25
 8005802:	d5fb      	bpl.n	80057fc <_printf_i+0x1c8>
 8005804:	8018      	strh	r0, [r3, #0]
 8005806:	2300      	movs	r3, #0
 8005808:	6123      	str	r3, [r4, #16]
 800580a:	4616      	mov	r6, r2
 800580c:	e7ba      	b.n	8005784 <_printf_i+0x150>
 800580e:	680b      	ldr	r3, [r1, #0]
 8005810:	1d1a      	adds	r2, r3, #4
 8005812:	600a      	str	r2, [r1, #0]
 8005814:	681e      	ldr	r6, [r3, #0]
 8005816:	6862      	ldr	r2, [r4, #4]
 8005818:	2100      	movs	r1, #0
 800581a:	4630      	mov	r0, r6
 800581c:	f7fa fce8 	bl	80001f0 <memchr>
 8005820:	b108      	cbz	r0, 8005826 <_printf_i+0x1f2>
 8005822:	1b80      	subs	r0, r0, r6
 8005824:	6060      	str	r0, [r4, #4]
 8005826:	6863      	ldr	r3, [r4, #4]
 8005828:	6123      	str	r3, [r4, #16]
 800582a:	2300      	movs	r3, #0
 800582c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8005830:	e7a8      	b.n	8005784 <_printf_i+0x150>
 8005832:	6923      	ldr	r3, [r4, #16]
 8005834:	4632      	mov	r2, r6
 8005836:	4649      	mov	r1, r9
 8005838:	4640      	mov	r0, r8
 800583a:	47d0      	blx	sl
 800583c:	3001      	adds	r0, #1
 800583e:	d0ab      	beq.n	8005798 <_printf_i+0x164>
 8005840:	6823      	ldr	r3, [r4, #0]
 8005842:	079b      	lsls	r3, r3, #30
 8005844:	d413      	bmi.n	800586e <_printf_i+0x23a>
 8005846:	68e0      	ldr	r0, [r4, #12]
 8005848:	9b03      	ldr	r3, [sp, #12]
 800584a:	4298      	cmp	r0, r3
 800584c:	bfb8      	it	lt
 800584e:	4618      	movlt	r0, r3
 8005850:	e7a4      	b.n	800579c <_printf_i+0x168>
 8005852:	2301      	movs	r3, #1
 8005854:	4632      	mov	r2, r6
 8005856:	4649      	mov	r1, r9
 8005858:	4640      	mov	r0, r8
 800585a:	47d0      	blx	sl
 800585c:	3001      	adds	r0, #1
 800585e:	d09b      	beq.n	8005798 <_printf_i+0x164>
 8005860:	3501      	adds	r5, #1
 8005862:	68e3      	ldr	r3, [r4, #12]
 8005864:	9903      	ldr	r1, [sp, #12]
 8005866:	1a5b      	subs	r3, r3, r1
 8005868:	42ab      	cmp	r3, r5
 800586a:	dcf2      	bgt.n	8005852 <_printf_i+0x21e>
 800586c:	e7eb      	b.n	8005846 <_printf_i+0x212>
 800586e:	2500      	movs	r5, #0
 8005870:	f104 0619 	add.w	r6, r4, #25
 8005874:	e7f5      	b.n	8005862 <_printf_i+0x22e>
 8005876:	bf00      	nop
 8005878:	08008185 	.word	0x08008185
 800587c:	08008196 	.word	0x08008196

08005880 <_scanf_chars>:
 8005880:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8005884:	4615      	mov	r5, r2
 8005886:	688a      	ldr	r2, [r1, #8]
 8005888:	4680      	mov	r8, r0
 800588a:	460c      	mov	r4, r1
 800588c:	b932      	cbnz	r2, 800589c <_scanf_chars+0x1c>
 800588e:	698a      	ldr	r2, [r1, #24]
 8005890:	2a00      	cmp	r2, #0
 8005892:	bf0c      	ite	eq
 8005894:	2201      	moveq	r2, #1
 8005896:	f04f 32ff 	movne.w	r2, #4294967295
 800589a:	608a      	str	r2, [r1, #8]
 800589c:	6822      	ldr	r2, [r4, #0]
 800589e:	f8df 908c 	ldr.w	r9, [pc, #140]	; 800592c <_scanf_chars+0xac>
 80058a2:	06d1      	lsls	r1, r2, #27
 80058a4:	bf5f      	itttt	pl
 80058a6:	681a      	ldrpl	r2, [r3, #0]
 80058a8:	1d11      	addpl	r1, r2, #4
 80058aa:	6019      	strpl	r1, [r3, #0]
 80058ac:	6816      	ldrpl	r6, [r2, #0]
 80058ae:	2700      	movs	r7, #0
 80058b0:	69a0      	ldr	r0, [r4, #24]
 80058b2:	b188      	cbz	r0, 80058d8 <_scanf_chars+0x58>
 80058b4:	2801      	cmp	r0, #1
 80058b6:	d107      	bne.n	80058c8 <_scanf_chars+0x48>
 80058b8:	682b      	ldr	r3, [r5, #0]
 80058ba:	781a      	ldrb	r2, [r3, #0]
 80058bc:	6963      	ldr	r3, [r4, #20]
 80058be:	5c9b      	ldrb	r3, [r3, r2]
 80058c0:	b953      	cbnz	r3, 80058d8 <_scanf_chars+0x58>
 80058c2:	bb27      	cbnz	r7, 800590e <_scanf_chars+0x8e>
 80058c4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80058c8:	2802      	cmp	r0, #2
 80058ca:	d120      	bne.n	800590e <_scanf_chars+0x8e>
 80058cc:	682b      	ldr	r3, [r5, #0]
 80058ce:	781b      	ldrb	r3, [r3, #0]
 80058d0:	f813 3009 	ldrb.w	r3, [r3, r9]
 80058d4:	071b      	lsls	r3, r3, #28
 80058d6:	d41a      	bmi.n	800590e <_scanf_chars+0x8e>
 80058d8:	6823      	ldr	r3, [r4, #0]
 80058da:	06da      	lsls	r2, r3, #27
 80058dc:	bf5e      	ittt	pl
 80058de:	682b      	ldrpl	r3, [r5, #0]
 80058e0:	781b      	ldrbpl	r3, [r3, #0]
 80058e2:	f806 3b01 	strbpl.w	r3, [r6], #1
 80058e6:	682a      	ldr	r2, [r5, #0]
 80058e8:	686b      	ldr	r3, [r5, #4]
 80058ea:	3201      	adds	r2, #1
 80058ec:	602a      	str	r2, [r5, #0]
 80058ee:	68a2      	ldr	r2, [r4, #8]
 80058f0:	3b01      	subs	r3, #1
 80058f2:	3a01      	subs	r2, #1
 80058f4:	606b      	str	r3, [r5, #4]
 80058f6:	3701      	adds	r7, #1
 80058f8:	60a2      	str	r2, [r4, #8]
 80058fa:	b142      	cbz	r2, 800590e <_scanf_chars+0x8e>
 80058fc:	2b00      	cmp	r3, #0
 80058fe:	dcd7      	bgt.n	80058b0 <_scanf_chars+0x30>
 8005900:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
 8005904:	4629      	mov	r1, r5
 8005906:	4640      	mov	r0, r8
 8005908:	4798      	blx	r3
 800590a:	2800      	cmp	r0, #0
 800590c:	d0d0      	beq.n	80058b0 <_scanf_chars+0x30>
 800590e:	6823      	ldr	r3, [r4, #0]
 8005910:	f013 0310 	ands.w	r3, r3, #16
 8005914:	d105      	bne.n	8005922 <_scanf_chars+0xa2>
 8005916:	68e2      	ldr	r2, [r4, #12]
 8005918:	3201      	adds	r2, #1
 800591a:	60e2      	str	r2, [r4, #12]
 800591c:	69a2      	ldr	r2, [r4, #24]
 800591e:	b102      	cbz	r2, 8005922 <_scanf_chars+0xa2>
 8005920:	7033      	strb	r3, [r6, #0]
 8005922:	6923      	ldr	r3, [r4, #16]
 8005924:	441f      	add	r7, r3
 8005926:	6127      	str	r7, [r4, #16]
 8005928:	2000      	movs	r0, #0
 800592a:	e7cb      	b.n	80058c4 <_scanf_chars+0x44>
 800592c:	08007e6d 	.word	0x08007e6d

08005930 <_scanf_i>:
 8005930:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005934:	4698      	mov	r8, r3
 8005936:	4b74      	ldr	r3, [pc, #464]	; (8005b08 <_scanf_i+0x1d8>)
 8005938:	460c      	mov	r4, r1
 800593a:	4682      	mov	sl, r0
 800593c:	4616      	mov	r6, r2
 800593e:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 8005942:	b087      	sub	sp, #28
 8005944:	ab03      	add	r3, sp, #12
 8005946:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800594a:	4b70      	ldr	r3, [pc, #448]	; (8005b0c <_scanf_i+0x1dc>)
 800594c:	69a1      	ldr	r1, [r4, #24]
 800594e:	4a70      	ldr	r2, [pc, #448]	; (8005b10 <_scanf_i+0x1e0>)
 8005950:	2903      	cmp	r1, #3
 8005952:	bf18      	it	ne
 8005954:	461a      	movne	r2, r3
 8005956:	68a3      	ldr	r3, [r4, #8]
 8005958:	9201      	str	r2, [sp, #4]
 800595a:	1e5a      	subs	r2, r3, #1
 800595c:	f5b2 7fae 	cmp.w	r2, #348	; 0x15c
 8005960:	bf88      	it	hi
 8005962:	f46f 75ae 	mvnhi.w	r5, #348	; 0x15c
 8005966:	4627      	mov	r7, r4
 8005968:	bf82      	ittt	hi
 800596a:	eb03 0905 	addhi.w	r9, r3, r5
 800596e:	f240 135d 	movwhi	r3, #349	; 0x15d
 8005972:	60a3      	strhi	r3, [r4, #8]
 8005974:	f857 3b1c 	ldr.w	r3, [r7], #28
 8005978:	f443 6350 	orr.w	r3, r3, #3328	; 0xd00
 800597c:	bf98      	it	ls
 800597e:	f04f 0900 	movls.w	r9, #0
 8005982:	6023      	str	r3, [r4, #0]
 8005984:	463d      	mov	r5, r7
 8005986:	f04f 0b00 	mov.w	fp, #0
 800598a:	6831      	ldr	r1, [r6, #0]
 800598c:	ab03      	add	r3, sp, #12
 800598e:	7809      	ldrb	r1, [r1, #0]
 8005990:	f853 002b 	ldr.w	r0, [r3, fp, lsl #2]
 8005994:	2202      	movs	r2, #2
 8005996:	f7fa fc2b 	bl	80001f0 <memchr>
 800599a:	b328      	cbz	r0, 80059e8 <_scanf_i+0xb8>
 800599c:	f1bb 0f01 	cmp.w	fp, #1
 80059a0:	d159      	bne.n	8005a56 <_scanf_i+0x126>
 80059a2:	6862      	ldr	r2, [r4, #4]
 80059a4:	b92a      	cbnz	r2, 80059b2 <_scanf_i+0x82>
 80059a6:	6822      	ldr	r2, [r4, #0]
 80059a8:	2308      	movs	r3, #8
 80059aa:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80059ae:	6063      	str	r3, [r4, #4]
 80059b0:	6022      	str	r2, [r4, #0]
 80059b2:	6822      	ldr	r2, [r4, #0]
 80059b4:	f422 62a0 	bic.w	r2, r2, #1280	; 0x500
 80059b8:	6022      	str	r2, [r4, #0]
 80059ba:	68a2      	ldr	r2, [r4, #8]
 80059bc:	1e51      	subs	r1, r2, #1
 80059be:	60a1      	str	r1, [r4, #8]
 80059c0:	b192      	cbz	r2, 80059e8 <_scanf_i+0xb8>
 80059c2:	6832      	ldr	r2, [r6, #0]
 80059c4:	1c51      	adds	r1, r2, #1
 80059c6:	6031      	str	r1, [r6, #0]
 80059c8:	7812      	ldrb	r2, [r2, #0]
 80059ca:	f805 2b01 	strb.w	r2, [r5], #1
 80059ce:	6872      	ldr	r2, [r6, #4]
 80059d0:	3a01      	subs	r2, #1
 80059d2:	2a00      	cmp	r2, #0
 80059d4:	6072      	str	r2, [r6, #4]
 80059d6:	dc07      	bgt.n	80059e8 <_scanf_i+0xb8>
 80059d8:	f8d4 2180 	ldr.w	r2, [r4, #384]	; 0x180
 80059dc:	4631      	mov	r1, r6
 80059de:	4650      	mov	r0, sl
 80059e0:	4790      	blx	r2
 80059e2:	2800      	cmp	r0, #0
 80059e4:	f040 8085 	bne.w	8005af2 <_scanf_i+0x1c2>
 80059e8:	f10b 0b01 	add.w	fp, fp, #1
 80059ec:	f1bb 0f03 	cmp.w	fp, #3
 80059f0:	d1cb      	bne.n	800598a <_scanf_i+0x5a>
 80059f2:	6863      	ldr	r3, [r4, #4]
 80059f4:	b90b      	cbnz	r3, 80059fa <_scanf_i+0xca>
 80059f6:	230a      	movs	r3, #10
 80059f8:	6063      	str	r3, [r4, #4]
 80059fa:	6863      	ldr	r3, [r4, #4]
 80059fc:	4945      	ldr	r1, [pc, #276]	; (8005b14 <_scanf_i+0x1e4>)
 80059fe:	6960      	ldr	r0, [r4, #20]
 8005a00:	1ac9      	subs	r1, r1, r3
 8005a02:	f000 f8a5 	bl	8005b50 <__sccl>
 8005a06:	f04f 0b00 	mov.w	fp, #0
 8005a0a:	68a3      	ldr	r3, [r4, #8]
 8005a0c:	6822      	ldr	r2, [r4, #0]
 8005a0e:	2b00      	cmp	r3, #0
 8005a10:	d03d      	beq.n	8005a8e <_scanf_i+0x15e>
 8005a12:	6831      	ldr	r1, [r6, #0]
 8005a14:	6960      	ldr	r0, [r4, #20]
 8005a16:	f891 c000 	ldrb.w	ip, [r1]
 8005a1a:	f810 000c 	ldrb.w	r0, [r0, ip]
 8005a1e:	2800      	cmp	r0, #0
 8005a20:	d035      	beq.n	8005a8e <_scanf_i+0x15e>
 8005a22:	f1bc 0f30 	cmp.w	ip, #48	; 0x30
 8005a26:	d124      	bne.n	8005a72 <_scanf_i+0x142>
 8005a28:	0510      	lsls	r0, r2, #20
 8005a2a:	d522      	bpl.n	8005a72 <_scanf_i+0x142>
 8005a2c:	f10b 0b01 	add.w	fp, fp, #1
 8005a30:	f1b9 0f00 	cmp.w	r9, #0
 8005a34:	d003      	beq.n	8005a3e <_scanf_i+0x10e>
 8005a36:	3301      	adds	r3, #1
 8005a38:	f109 39ff 	add.w	r9, r9, #4294967295
 8005a3c:	60a3      	str	r3, [r4, #8]
 8005a3e:	6873      	ldr	r3, [r6, #4]
 8005a40:	3b01      	subs	r3, #1
 8005a42:	2b00      	cmp	r3, #0
 8005a44:	6073      	str	r3, [r6, #4]
 8005a46:	dd1b      	ble.n	8005a80 <_scanf_i+0x150>
 8005a48:	6833      	ldr	r3, [r6, #0]
 8005a4a:	3301      	adds	r3, #1
 8005a4c:	6033      	str	r3, [r6, #0]
 8005a4e:	68a3      	ldr	r3, [r4, #8]
 8005a50:	3b01      	subs	r3, #1
 8005a52:	60a3      	str	r3, [r4, #8]
 8005a54:	e7d9      	b.n	8005a0a <_scanf_i+0xda>
 8005a56:	f1bb 0f02 	cmp.w	fp, #2
 8005a5a:	d1ae      	bne.n	80059ba <_scanf_i+0x8a>
 8005a5c:	6822      	ldr	r2, [r4, #0]
 8005a5e:	f402 61c0 	and.w	r1, r2, #1536	; 0x600
 8005a62:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 8005a66:	d1bf      	bne.n	80059e8 <_scanf_i+0xb8>
 8005a68:	2310      	movs	r3, #16
 8005a6a:	6063      	str	r3, [r4, #4]
 8005a6c:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8005a70:	e7a2      	b.n	80059b8 <_scanf_i+0x88>
 8005a72:	f422 6210 	bic.w	r2, r2, #2304	; 0x900
 8005a76:	6022      	str	r2, [r4, #0]
 8005a78:	780b      	ldrb	r3, [r1, #0]
 8005a7a:	f805 3b01 	strb.w	r3, [r5], #1
 8005a7e:	e7de      	b.n	8005a3e <_scanf_i+0x10e>
 8005a80:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
 8005a84:	4631      	mov	r1, r6
 8005a86:	4650      	mov	r0, sl
 8005a88:	4798      	blx	r3
 8005a8a:	2800      	cmp	r0, #0
 8005a8c:	d0df      	beq.n	8005a4e <_scanf_i+0x11e>
 8005a8e:	6823      	ldr	r3, [r4, #0]
 8005a90:	05d9      	lsls	r1, r3, #23
 8005a92:	d50d      	bpl.n	8005ab0 <_scanf_i+0x180>
 8005a94:	42bd      	cmp	r5, r7
 8005a96:	d909      	bls.n	8005aac <_scanf_i+0x17c>
 8005a98:	f815 1c01 	ldrb.w	r1, [r5, #-1]
 8005a9c:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8005aa0:	4632      	mov	r2, r6
 8005aa2:	4650      	mov	r0, sl
 8005aa4:	4798      	blx	r3
 8005aa6:	f105 39ff 	add.w	r9, r5, #4294967295
 8005aaa:	464d      	mov	r5, r9
 8005aac:	42bd      	cmp	r5, r7
 8005aae:	d028      	beq.n	8005b02 <_scanf_i+0x1d2>
 8005ab0:	6822      	ldr	r2, [r4, #0]
 8005ab2:	f012 0210 	ands.w	r2, r2, #16
 8005ab6:	d113      	bne.n	8005ae0 <_scanf_i+0x1b0>
 8005ab8:	702a      	strb	r2, [r5, #0]
 8005aba:	6863      	ldr	r3, [r4, #4]
 8005abc:	9e01      	ldr	r6, [sp, #4]
 8005abe:	4639      	mov	r1, r7
 8005ac0:	4650      	mov	r0, sl
 8005ac2:	47b0      	blx	r6
 8005ac4:	f8d8 3000 	ldr.w	r3, [r8]
 8005ac8:	6821      	ldr	r1, [r4, #0]
 8005aca:	1d1a      	adds	r2, r3, #4
 8005acc:	f8c8 2000 	str.w	r2, [r8]
 8005ad0:	f011 0f20 	tst.w	r1, #32
 8005ad4:	681b      	ldr	r3, [r3, #0]
 8005ad6:	d00f      	beq.n	8005af8 <_scanf_i+0x1c8>
 8005ad8:	6018      	str	r0, [r3, #0]
 8005ada:	68e3      	ldr	r3, [r4, #12]
 8005adc:	3301      	adds	r3, #1
 8005ade:	60e3      	str	r3, [r4, #12]
 8005ae0:	1bed      	subs	r5, r5, r7
 8005ae2:	44ab      	add	fp, r5
 8005ae4:	6925      	ldr	r5, [r4, #16]
 8005ae6:	445d      	add	r5, fp
 8005ae8:	6125      	str	r5, [r4, #16]
 8005aea:	2000      	movs	r0, #0
 8005aec:	b007      	add	sp, #28
 8005aee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005af2:	f04f 0b00 	mov.w	fp, #0
 8005af6:	e7ca      	b.n	8005a8e <_scanf_i+0x15e>
 8005af8:	07ca      	lsls	r2, r1, #31
 8005afa:	bf4c      	ite	mi
 8005afc:	8018      	strhmi	r0, [r3, #0]
 8005afe:	6018      	strpl	r0, [r3, #0]
 8005b00:	e7eb      	b.n	8005ada <_scanf_i+0x1aa>
 8005b02:	2001      	movs	r0, #1
 8005b04:	e7f2      	b.n	8005aec <_scanf_i+0x1bc>
 8005b06:	bf00      	nop
 8005b08:	08007bc8 	.word	0x08007bc8
 8005b0c:	08005ce1 	.word	0x08005ce1
 8005b10:	08003aa9 	.word	0x08003aa9
 8005b14:	080081c0 	.word	0x080081c0

08005b18 <_read_r>:
 8005b18:	b538      	push	{r3, r4, r5, lr}
 8005b1a:	4d07      	ldr	r5, [pc, #28]	; (8005b38 <_read_r+0x20>)
 8005b1c:	4604      	mov	r4, r0
 8005b1e:	4608      	mov	r0, r1
 8005b20:	4611      	mov	r1, r2
 8005b22:	2200      	movs	r2, #0
 8005b24:	602a      	str	r2, [r5, #0]
 8005b26:	461a      	mov	r2, r3
 8005b28:	f7fb fcac 	bl	8001484 <_read>
 8005b2c:	1c43      	adds	r3, r0, #1
 8005b2e:	d102      	bne.n	8005b36 <_read_r+0x1e>
 8005b30:	682b      	ldr	r3, [r5, #0]
 8005b32:	b103      	cbz	r3, 8005b36 <_read_r+0x1e>
 8005b34:	6023      	str	r3, [r4, #0]
 8005b36:	bd38      	pop	{r3, r4, r5, pc}
 8005b38:	20000218 	.word	0x20000218
 8005b3c:	00000000 	.word	0x00000000

08005b40 <nan>:
 8005b40:	ed9f 0b01 	vldr	d0, [pc, #4]	; 8005b48 <nan+0x8>
 8005b44:	4770      	bx	lr
 8005b46:	bf00      	nop
 8005b48:	00000000 	.word	0x00000000
 8005b4c:	7ff80000 	.word	0x7ff80000

08005b50 <__sccl>:
 8005b50:	b570      	push	{r4, r5, r6, lr}
 8005b52:	780b      	ldrb	r3, [r1, #0]
 8005b54:	4604      	mov	r4, r0
 8005b56:	2b5e      	cmp	r3, #94	; 0x5e
 8005b58:	bf0b      	itete	eq
 8005b5a:	784b      	ldrbeq	r3, [r1, #1]
 8005b5c:	1c48      	addne	r0, r1, #1
 8005b5e:	1c88      	addeq	r0, r1, #2
 8005b60:	2200      	movne	r2, #0
 8005b62:	bf08      	it	eq
 8005b64:	2201      	moveq	r2, #1
 8005b66:	1e61      	subs	r1, r4, #1
 8005b68:	f104 05ff 	add.w	r5, r4, #255	; 0xff
 8005b6c:	f801 2f01 	strb.w	r2, [r1, #1]!
 8005b70:	42a9      	cmp	r1, r5
 8005b72:	d1fb      	bne.n	8005b6c <__sccl+0x1c>
 8005b74:	b90b      	cbnz	r3, 8005b7a <__sccl+0x2a>
 8005b76:	3801      	subs	r0, #1
 8005b78:	bd70      	pop	{r4, r5, r6, pc}
 8005b7a:	f082 0101 	eor.w	r1, r2, #1
 8005b7e:	54e1      	strb	r1, [r4, r3]
 8005b80:	1c42      	adds	r2, r0, #1
 8005b82:	f812 5c01 	ldrb.w	r5, [r2, #-1]
 8005b86:	2d2d      	cmp	r5, #45	; 0x2d
 8005b88:	f102 36ff 	add.w	r6, r2, #4294967295
 8005b8c:	4610      	mov	r0, r2
 8005b8e:	d006      	beq.n	8005b9e <__sccl+0x4e>
 8005b90:	2d5d      	cmp	r5, #93	; 0x5d
 8005b92:	d0f1      	beq.n	8005b78 <__sccl+0x28>
 8005b94:	b90d      	cbnz	r5, 8005b9a <__sccl+0x4a>
 8005b96:	4630      	mov	r0, r6
 8005b98:	e7ee      	b.n	8005b78 <__sccl+0x28>
 8005b9a:	462b      	mov	r3, r5
 8005b9c:	e7ef      	b.n	8005b7e <__sccl+0x2e>
 8005b9e:	7816      	ldrb	r6, [r2, #0]
 8005ba0:	2e5d      	cmp	r6, #93	; 0x5d
 8005ba2:	d0fa      	beq.n	8005b9a <__sccl+0x4a>
 8005ba4:	42b3      	cmp	r3, r6
 8005ba6:	dcf8      	bgt.n	8005b9a <__sccl+0x4a>
 8005ba8:	4618      	mov	r0, r3
 8005baa:	3001      	adds	r0, #1
 8005bac:	4286      	cmp	r6, r0
 8005bae:	5421      	strb	r1, [r4, r0]
 8005bb0:	dcfb      	bgt.n	8005baa <__sccl+0x5a>
 8005bb2:	43d8      	mvns	r0, r3
 8005bb4:	4430      	add	r0, r6
 8005bb6:	1c5d      	adds	r5, r3, #1
 8005bb8:	42b3      	cmp	r3, r6
 8005bba:	bfa8      	it	ge
 8005bbc:	2000      	movge	r0, #0
 8005bbe:	182b      	adds	r3, r5, r0
 8005bc0:	3202      	adds	r2, #2
 8005bc2:	e7de      	b.n	8005b82 <__sccl+0x32>

08005bc4 <strncmp>:
 8005bc4:	b510      	push	{r4, lr}
 8005bc6:	b16a      	cbz	r2, 8005be4 <strncmp+0x20>
 8005bc8:	3901      	subs	r1, #1
 8005bca:	1884      	adds	r4, r0, r2
 8005bcc:	f810 3b01 	ldrb.w	r3, [r0], #1
 8005bd0:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 8005bd4:	4293      	cmp	r3, r2
 8005bd6:	d103      	bne.n	8005be0 <strncmp+0x1c>
 8005bd8:	42a0      	cmp	r0, r4
 8005bda:	d001      	beq.n	8005be0 <strncmp+0x1c>
 8005bdc:	2b00      	cmp	r3, #0
 8005bde:	d1f5      	bne.n	8005bcc <strncmp+0x8>
 8005be0:	1a98      	subs	r0, r3, r2
 8005be2:	bd10      	pop	{r4, pc}
 8005be4:	4610      	mov	r0, r2
 8005be6:	e7fc      	b.n	8005be2 <strncmp+0x1e>

08005be8 <_strtoul_l.isra.0>:
 8005be8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8005bec:	4e3b      	ldr	r6, [pc, #236]	; (8005cdc <_strtoul_l.isra.0+0xf4>)
 8005bee:	4686      	mov	lr, r0
 8005bf0:	468c      	mov	ip, r1
 8005bf2:	4660      	mov	r0, ip
 8005bf4:	f81c 4b01 	ldrb.w	r4, [ip], #1
 8005bf8:	5da5      	ldrb	r5, [r4, r6]
 8005bfa:	f015 0508 	ands.w	r5, r5, #8
 8005bfe:	d1f8      	bne.n	8005bf2 <_strtoul_l.isra.0+0xa>
 8005c00:	2c2d      	cmp	r4, #45	; 0x2d
 8005c02:	d134      	bne.n	8005c6e <_strtoul_l.isra.0+0x86>
 8005c04:	f89c 4000 	ldrb.w	r4, [ip]
 8005c08:	f04f 0801 	mov.w	r8, #1
 8005c0c:	f100 0c02 	add.w	ip, r0, #2
 8005c10:	2b00      	cmp	r3, #0
 8005c12:	d05e      	beq.n	8005cd2 <_strtoul_l.isra.0+0xea>
 8005c14:	2b10      	cmp	r3, #16
 8005c16:	d10c      	bne.n	8005c32 <_strtoul_l.isra.0+0x4a>
 8005c18:	2c30      	cmp	r4, #48	; 0x30
 8005c1a:	d10a      	bne.n	8005c32 <_strtoul_l.isra.0+0x4a>
 8005c1c:	f89c 0000 	ldrb.w	r0, [ip]
 8005c20:	f000 00df 	and.w	r0, r0, #223	; 0xdf
 8005c24:	2858      	cmp	r0, #88	; 0x58
 8005c26:	d14f      	bne.n	8005cc8 <_strtoul_l.isra.0+0xe0>
 8005c28:	f89c 4001 	ldrb.w	r4, [ip, #1]
 8005c2c:	2310      	movs	r3, #16
 8005c2e:	f10c 0c02 	add.w	ip, ip, #2
 8005c32:	f04f 37ff 	mov.w	r7, #4294967295
 8005c36:	2500      	movs	r5, #0
 8005c38:	fbb7 f7f3 	udiv	r7, r7, r3
 8005c3c:	fb03 f907 	mul.w	r9, r3, r7
 8005c40:	ea6f 0909 	mvn.w	r9, r9
 8005c44:	4628      	mov	r0, r5
 8005c46:	f1a4 0630 	sub.w	r6, r4, #48	; 0x30
 8005c4a:	2e09      	cmp	r6, #9
 8005c4c:	d818      	bhi.n	8005c80 <_strtoul_l.isra.0+0x98>
 8005c4e:	4634      	mov	r4, r6
 8005c50:	42a3      	cmp	r3, r4
 8005c52:	dd24      	ble.n	8005c9e <_strtoul_l.isra.0+0xb6>
 8005c54:	2d00      	cmp	r5, #0
 8005c56:	db1f      	blt.n	8005c98 <_strtoul_l.isra.0+0xb0>
 8005c58:	4287      	cmp	r7, r0
 8005c5a:	d31d      	bcc.n	8005c98 <_strtoul_l.isra.0+0xb0>
 8005c5c:	d101      	bne.n	8005c62 <_strtoul_l.isra.0+0x7a>
 8005c5e:	45a1      	cmp	r9, r4
 8005c60:	db1a      	blt.n	8005c98 <_strtoul_l.isra.0+0xb0>
 8005c62:	fb00 4003 	mla	r0, r0, r3, r4
 8005c66:	2501      	movs	r5, #1
 8005c68:	f81c 4b01 	ldrb.w	r4, [ip], #1
 8005c6c:	e7eb      	b.n	8005c46 <_strtoul_l.isra.0+0x5e>
 8005c6e:	2c2b      	cmp	r4, #43	; 0x2b
 8005c70:	bf08      	it	eq
 8005c72:	f89c 4000 	ldrbeq.w	r4, [ip]
 8005c76:	46a8      	mov	r8, r5
 8005c78:	bf08      	it	eq
 8005c7a:	f100 0c02 	addeq.w	ip, r0, #2
 8005c7e:	e7c7      	b.n	8005c10 <_strtoul_l.isra.0+0x28>
 8005c80:	f1a4 0641 	sub.w	r6, r4, #65	; 0x41
 8005c84:	2e19      	cmp	r6, #25
 8005c86:	d801      	bhi.n	8005c8c <_strtoul_l.isra.0+0xa4>
 8005c88:	3c37      	subs	r4, #55	; 0x37
 8005c8a:	e7e1      	b.n	8005c50 <_strtoul_l.isra.0+0x68>
 8005c8c:	f1a4 0661 	sub.w	r6, r4, #97	; 0x61
 8005c90:	2e19      	cmp	r6, #25
 8005c92:	d804      	bhi.n	8005c9e <_strtoul_l.isra.0+0xb6>
 8005c94:	3c57      	subs	r4, #87	; 0x57
 8005c96:	e7db      	b.n	8005c50 <_strtoul_l.isra.0+0x68>
 8005c98:	f04f 35ff 	mov.w	r5, #4294967295
 8005c9c:	e7e4      	b.n	8005c68 <_strtoul_l.isra.0+0x80>
 8005c9e:	2d00      	cmp	r5, #0
 8005ca0:	da07      	bge.n	8005cb2 <_strtoul_l.isra.0+0xca>
 8005ca2:	2322      	movs	r3, #34	; 0x22
 8005ca4:	f8ce 3000 	str.w	r3, [lr]
 8005ca8:	f04f 30ff 	mov.w	r0, #4294967295
 8005cac:	b942      	cbnz	r2, 8005cc0 <_strtoul_l.isra.0+0xd8>
 8005cae:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8005cb2:	f1b8 0f00 	cmp.w	r8, #0
 8005cb6:	d000      	beq.n	8005cba <_strtoul_l.isra.0+0xd2>
 8005cb8:	4240      	negs	r0, r0
 8005cba:	2a00      	cmp	r2, #0
 8005cbc:	d0f7      	beq.n	8005cae <_strtoul_l.isra.0+0xc6>
 8005cbe:	b10d      	cbz	r5, 8005cc4 <_strtoul_l.isra.0+0xdc>
 8005cc0:	f10c 31ff 	add.w	r1, ip, #4294967295
 8005cc4:	6011      	str	r1, [r2, #0]
 8005cc6:	e7f2      	b.n	8005cae <_strtoul_l.isra.0+0xc6>
 8005cc8:	2430      	movs	r4, #48	; 0x30
 8005cca:	2b00      	cmp	r3, #0
 8005ccc:	d1b1      	bne.n	8005c32 <_strtoul_l.isra.0+0x4a>
 8005cce:	2308      	movs	r3, #8
 8005cd0:	e7af      	b.n	8005c32 <_strtoul_l.isra.0+0x4a>
 8005cd2:	2c30      	cmp	r4, #48	; 0x30
 8005cd4:	d0a2      	beq.n	8005c1c <_strtoul_l.isra.0+0x34>
 8005cd6:	230a      	movs	r3, #10
 8005cd8:	e7ab      	b.n	8005c32 <_strtoul_l.isra.0+0x4a>
 8005cda:	bf00      	nop
 8005cdc:	08007e6d 	.word	0x08007e6d

08005ce0 <_strtoul_r>:
 8005ce0:	f7ff bf82 	b.w	8005be8 <_strtoul_l.isra.0>

08005ce4 <__submore>:
 8005ce4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005ce8:	460c      	mov	r4, r1
 8005cea:	6b49      	ldr	r1, [r1, #52]	; 0x34
 8005cec:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8005cf0:	4299      	cmp	r1, r3
 8005cf2:	d11d      	bne.n	8005d30 <__submore+0x4c>
 8005cf4:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8005cf8:	f7fc fd14 	bl	8002724 <_malloc_r>
 8005cfc:	b918      	cbnz	r0, 8005d06 <__submore+0x22>
 8005cfe:	f04f 30ff 	mov.w	r0, #4294967295
 8005d02:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005d06:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8005d0a:	63a3      	str	r3, [r4, #56]	; 0x38
 8005d0c:	f894 3046 	ldrb.w	r3, [r4, #70]	; 0x46
 8005d10:	6360      	str	r0, [r4, #52]	; 0x34
 8005d12:	f880 33ff 	strb.w	r3, [r0, #1023]	; 0x3ff
 8005d16:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8005d1a:	f880 33fe 	strb.w	r3, [r0, #1022]	; 0x3fe
 8005d1e:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8005d22:	f880 33fd 	strb.w	r3, [r0, #1021]	; 0x3fd
 8005d26:	f200 30fd 	addw	r0, r0, #1021	; 0x3fd
 8005d2a:	6020      	str	r0, [r4, #0]
 8005d2c:	2000      	movs	r0, #0
 8005d2e:	e7e8      	b.n	8005d02 <__submore+0x1e>
 8005d30:	6ba6      	ldr	r6, [r4, #56]	; 0x38
 8005d32:	0077      	lsls	r7, r6, #1
 8005d34:	463a      	mov	r2, r7
 8005d36:	f000 fb1b 	bl	8006370 <_realloc_r>
 8005d3a:	4605      	mov	r5, r0
 8005d3c:	2800      	cmp	r0, #0
 8005d3e:	d0de      	beq.n	8005cfe <__submore+0x1a>
 8005d40:	eb00 0806 	add.w	r8, r0, r6
 8005d44:	4601      	mov	r1, r0
 8005d46:	4632      	mov	r2, r6
 8005d48:	4640      	mov	r0, r8
 8005d4a:	f7fe fa99 	bl	8004280 <memcpy>
 8005d4e:	e9c4 570d 	strd	r5, r7, [r4, #52]	; 0x34
 8005d52:	f8c4 8000 	str.w	r8, [r4]
 8005d56:	e7e9      	b.n	8005d2c <__submore+0x48>

08005d58 <__swbuf_r>:
 8005d58:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005d5a:	460e      	mov	r6, r1
 8005d5c:	4614      	mov	r4, r2
 8005d5e:	4605      	mov	r5, r0
 8005d60:	b118      	cbz	r0, 8005d6a <__swbuf_r+0x12>
 8005d62:	6983      	ldr	r3, [r0, #24]
 8005d64:	b90b      	cbnz	r3, 8005d6a <__swbuf_r+0x12>
 8005d66:	f000 f9e7 	bl	8006138 <__sinit>
 8005d6a:	4b21      	ldr	r3, [pc, #132]	; (8005df0 <__swbuf_r+0x98>)
 8005d6c:	429c      	cmp	r4, r3
 8005d6e:	d12b      	bne.n	8005dc8 <__swbuf_r+0x70>
 8005d70:	686c      	ldr	r4, [r5, #4]
 8005d72:	69a3      	ldr	r3, [r4, #24]
 8005d74:	60a3      	str	r3, [r4, #8]
 8005d76:	89a3      	ldrh	r3, [r4, #12]
 8005d78:	071a      	lsls	r2, r3, #28
 8005d7a:	d52f      	bpl.n	8005ddc <__swbuf_r+0x84>
 8005d7c:	6923      	ldr	r3, [r4, #16]
 8005d7e:	b36b      	cbz	r3, 8005ddc <__swbuf_r+0x84>
 8005d80:	6923      	ldr	r3, [r4, #16]
 8005d82:	6820      	ldr	r0, [r4, #0]
 8005d84:	1ac0      	subs	r0, r0, r3
 8005d86:	6963      	ldr	r3, [r4, #20]
 8005d88:	b2f6      	uxtb	r6, r6
 8005d8a:	4283      	cmp	r3, r0
 8005d8c:	4637      	mov	r7, r6
 8005d8e:	dc04      	bgt.n	8005d9a <__swbuf_r+0x42>
 8005d90:	4621      	mov	r1, r4
 8005d92:	4628      	mov	r0, r5
 8005d94:	f000 f93c 	bl	8006010 <_fflush_r>
 8005d98:	bb30      	cbnz	r0, 8005de8 <__swbuf_r+0x90>
 8005d9a:	68a3      	ldr	r3, [r4, #8]
 8005d9c:	3b01      	subs	r3, #1
 8005d9e:	60a3      	str	r3, [r4, #8]
 8005da0:	6823      	ldr	r3, [r4, #0]
 8005da2:	1c5a      	adds	r2, r3, #1
 8005da4:	6022      	str	r2, [r4, #0]
 8005da6:	701e      	strb	r6, [r3, #0]
 8005da8:	6963      	ldr	r3, [r4, #20]
 8005daa:	3001      	adds	r0, #1
 8005dac:	4283      	cmp	r3, r0
 8005dae:	d004      	beq.n	8005dba <__swbuf_r+0x62>
 8005db0:	89a3      	ldrh	r3, [r4, #12]
 8005db2:	07db      	lsls	r3, r3, #31
 8005db4:	d506      	bpl.n	8005dc4 <__swbuf_r+0x6c>
 8005db6:	2e0a      	cmp	r6, #10
 8005db8:	d104      	bne.n	8005dc4 <__swbuf_r+0x6c>
 8005dba:	4621      	mov	r1, r4
 8005dbc:	4628      	mov	r0, r5
 8005dbe:	f000 f927 	bl	8006010 <_fflush_r>
 8005dc2:	b988      	cbnz	r0, 8005de8 <__swbuf_r+0x90>
 8005dc4:	4638      	mov	r0, r7
 8005dc6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8005dc8:	4b0a      	ldr	r3, [pc, #40]	; (8005df4 <__swbuf_r+0x9c>)
 8005dca:	429c      	cmp	r4, r3
 8005dcc:	d101      	bne.n	8005dd2 <__swbuf_r+0x7a>
 8005dce:	68ac      	ldr	r4, [r5, #8]
 8005dd0:	e7cf      	b.n	8005d72 <__swbuf_r+0x1a>
 8005dd2:	4b09      	ldr	r3, [pc, #36]	; (8005df8 <__swbuf_r+0xa0>)
 8005dd4:	429c      	cmp	r4, r3
 8005dd6:	bf08      	it	eq
 8005dd8:	68ec      	ldreq	r4, [r5, #12]
 8005dda:	e7ca      	b.n	8005d72 <__swbuf_r+0x1a>
 8005ddc:	4621      	mov	r1, r4
 8005dde:	4628      	mov	r0, r5
 8005de0:	f000 f81a 	bl	8005e18 <__swsetup_r>
 8005de4:	2800      	cmp	r0, #0
 8005de6:	d0cb      	beq.n	8005d80 <__swbuf_r+0x28>
 8005de8:	f04f 37ff 	mov.w	r7, #4294967295
 8005dec:	e7ea      	b.n	8005dc4 <__swbuf_r+0x6c>
 8005dee:	bf00      	nop
 8005df0:	080081e4 	.word	0x080081e4
 8005df4:	08008204 	.word	0x08008204
 8005df8:	080081c4 	.word	0x080081c4

08005dfc <__ascii_wctomb>:
 8005dfc:	b149      	cbz	r1, 8005e12 <__ascii_wctomb+0x16>
 8005dfe:	2aff      	cmp	r2, #255	; 0xff
 8005e00:	bf85      	ittet	hi
 8005e02:	238a      	movhi	r3, #138	; 0x8a
 8005e04:	6003      	strhi	r3, [r0, #0]
 8005e06:	700a      	strbls	r2, [r1, #0]
 8005e08:	f04f 30ff 	movhi.w	r0, #4294967295
 8005e0c:	bf98      	it	ls
 8005e0e:	2001      	movls	r0, #1
 8005e10:	4770      	bx	lr
 8005e12:	4608      	mov	r0, r1
 8005e14:	4770      	bx	lr
	...

08005e18 <__swsetup_r>:
 8005e18:	4b32      	ldr	r3, [pc, #200]	; (8005ee4 <__swsetup_r+0xcc>)
 8005e1a:	b570      	push	{r4, r5, r6, lr}
 8005e1c:	681d      	ldr	r5, [r3, #0]
 8005e1e:	4606      	mov	r6, r0
 8005e20:	460c      	mov	r4, r1
 8005e22:	b125      	cbz	r5, 8005e2e <__swsetup_r+0x16>
 8005e24:	69ab      	ldr	r3, [r5, #24]
 8005e26:	b913      	cbnz	r3, 8005e2e <__swsetup_r+0x16>
 8005e28:	4628      	mov	r0, r5
 8005e2a:	f000 f985 	bl	8006138 <__sinit>
 8005e2e:	4b2e      	ldr	r3, [pc, #184]	; (8005ee8 <__swsetup_r+0xd0>)
 8005e30:	429c      	cmp	r4, r3
 8005e32:	d10f      	bne.n	8005e54 <__swsetup_r+0x3c>
 8005e34:	686c      	ldr	r4, [r5, #4]
 8005e36:	89a3      	ldrh	r3, [r4, #12]
 8005e38:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8005e3c:	0719      	lsls	r1, r3, #28
 8005e3e:	d42c      	bmi.n	8005e9a <__swsetup_r+0x82>
 8005e40:	06dd      	lsls	r5, r3, #27
 8005e42:	d411      	bmi.n	8005e68 <__swsetup_r+0x50>
 8005e44:	2309      	movs	r3, #9
 8005e46:	6033      	str	r3, [r6, #0]
 8005e48:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8005e4c:	81a3      	strh	r3, [r4, #12]
 8005e4e:	f04f 30ff 	mov.w	r0, #4294967295
 8005e52:	e03e      	b.n	8005ed2 <__swsetup_r+0xba>
 8005e54:	4b25      	ldr	r3, [pc, #148]	; (8005eec <__swsetup_r+0xd4>)
 8005e56:	429c      	cmp	r4, r3
 8005e58:	d101      	bne.n	8005e5e <__swsetup_r+0x46>
 8005e5a:	68ac      	ldr	r4, [r5, #8]
 8005e5c:	e7eb      	b.n	8005e36 <__swsetup_r+0x1e>
 8005e5e:	4b24      	ldr	r3, [pc, #144]	; (8005ef0 <__swsetup_r+0xd8>)
 8005e60:	429c      	cmp	r4, r3
 8005e62:	bf08      	it	eq
 8005e64:	68ec      	ldreq	r4, [r5, #12]
 8005e66:	e7e6      	b.n	8005e36 <__swsetup_r+0x1e>
 8005e68:	0758      	lsls	r0, r3, #29
 8005e6a:	d512      	bpl.n	8005e92 <__swsetup_r+0x7a>
 8005e6c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8005e6e:	b141      	cbz	r1, 8005e82 <__swsetup_r+0x6a>
 8005e70:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8005e74:	4299      	cmp	r1, r3
 8005e76:	d002      	beq.n	8005e7e <__swsetup_r+0x66>
 8005e78:	4630      	mov	r0, r6
 8005e7a:	f7fc fc03 	bl	8002684 <_free_r>
 8005e7e:	2300      	movs	r3, #0
 8005e80:	6363      	str	r3, [r4, #52]	; 0x34
 8005e82:	89a3      	ldrh	r3, [r4, #12]
 8005e84:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8005e88:	81a3      	strh	r3, [r4, #12]
 8005e8a:	2300      	movs	r3, #0
 8005e8c:	6063      	str	r3, [r4, #4]
 8005e8e:	6923      	ldr	r3, [r4, #16]
 8005e90:	6023      	str	r3, [r4, #0]
 8005e92:	89a3      	ldrh	r3, [r4, #12]
 8005e94:	f043 0308 	orr.w	r3, r3, #8
 8005e98:	81a3      	strh	r3, [r4, #12]
 8005e9a:	6923      	ldr	r3, [r4, #16]
 8005e9c:	b94b      	cbnz	r3, 8005eb2 <__swsetup_r+0x9a>
 8005e9e:	89a3      	ldrh	r3, [r4, #12]
 8005ea0:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8005ea4:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8005ea8:	d003      	beq.n	8005eb2 <__swsetup_r+0x9a>
 8005eaa:	4621      	mov	r1, r4
 8005eac:	4630      	mov	r0, r6
 8005eae:	f000 fa05 	bl	80062bc <__smakebuf_r>
 8005eb2:	89a0      	ldrh	r0, [r4, #12]
 8005eb4:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8005eb8:	f010 0301 	ands.w	r3, r0, #1
 8005ebc:	d00a      	beq.n	8005ed4 <__swsetup_r+0xbc>
 8005ebe:	2300      	movs	r3, #0
 8005ec0:	60a3      	str	r3, [r4, #8]
 8005ec2:	6963      	ldr	r3, [r4, #20]
 8005ec4:	425b      	negs	r3, r3
 8005ec6:	61a3      	str	r3, [r4, #24]
 8005ec8:	6923      	ldr	r3, [r4, #16]
 8005eca:	b943      	cbnz	r3, 8005ede <__swsetup_r+0xc6>
 8005ecc:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8005ed0:	d1ba      	bne.n	8005e48 <__swsetup_r+0x30>
 8005ed2:	bd70      	pop	{r4, r5, r6, pc}
 8005ed4:	0781      	lsls	r1, r0, #30
 8005ed6:	bf58      	it	pl
 8005ed8:	6963      	ldrpl	r3, [r4, #20]
 8005eda:	60a3      	str	r3, [r4, #8]
 8005edc:	e7f4      	b.n	8005ec8 <__swsetup_r+0xb0>
 8005ede:	2000      	movs	r0, #0
 8005ee0:	e7f7      	b.n	8005ed2 <__swsetup_r+0xba>
 8005ee2:	bf00      	nop
 8005ee4:	20000008 	.word	0x20000008
 8005ee8:	080081e4 	.word	0x080081e4
 8005eec:	08008204 	.word	0x08008204
 8005ef0:	080081c4 	.word	0x080081c4

08005ef4 <abort>:
 8005ef4:	b508      	push	{r3, lr}
 8005ef6:	2006      	movs	r0, #6
 8005ef8:	f000 fa88 	bl	800640c <raise>
 8005efc:	2001      	movs	r0, #1
 8005efe:	f7fb fab7 	bl	8001470 <_exit>
	...

08005f04 <__sflush_r>:
 8005f04:	898a      	ldrh	r2, [r1, #12]
 8005f06:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005f0a:	4605      	mov	r5, r0
 8005f0c:	0710      	lsls	r0, r2, #28
 8005f0e:	460c      	mov	r4, r1
 8005f10:	d458      	bmi.n	8005fc4 <__sflush_r+0xc0>
 8005f12:	684b      	ldr	r3, [r1, #4]
 8005f14:	2b00      	cmp	r3, #0
 8005f16:	dc05      	bgt.n	8005f24 <__sflush_r+0x20>
 8005f18:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8005f1a:	2b00      	cmp	r3, #0
 8005f1c:	dc02      	bgt.n	8005f24 <__sflush_r+0x20>
 8005f1e:	2000      	movs	r0, #0
 8005f20:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005f24:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8005f26:	2e00      	cmp	r6, #0
 8005f28:	d0f9      	beq.n	8005f1e <__sflush_r+0x1a>
 8005f2a:	2300      	movs	r3, #0
 8005f2c:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8005f30:	682f      	ldr	r7, [r5, #0]
 8005f32:	602b      	str	r3, [r5, #0]
 8005f34:	d032      	beq.n	8005f9c <__sflush_r+0x98>
 8005f36:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8005f38:	89a3      	ldrh	r3, [r4, #12]
 8005f3a:	075a      	lsls	r2, r3, #29
 8005f3c:	d505      	bpl.n	8005f4a <__sflush_r+0x46>
 8005f3e:	6863      	ldr	r3, [r4, #4]
 8005f40:	1ac0      	subs	r0, r0, r3
 8005f42:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8005f44:	b10b      	cbz	r3, 8005f4a <__sflush_r+0x46>
 8005f46:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8005f48:	1ac0      	subs	r0, r0, r3
 8005f4a:	2300      	movs	r3, #0
 8005f4c:	4602      	mov	r2, r0
 8005f4e:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8005f50:	6a21      	ldr	r1, [r4, #32]
 8005f52:	4628      	mov	r0, r5
 8005f54:	47b0      	blx	r6
 8005f56:	1c43      	adds	r3, r0, #1
 8005f58:	89a3      	ldrh	r3, [r4, #12]
 8005f5a:	d106      	bne.n	8005f6a <__sflush_r+0x66>
 8005f5c:	6829      	ldr	r1, [r5, #0]
 8005f5e:	291d      	cmp	r1, #29
 8005f60:	d82c      	bhi.n	8005fbc <__sflush_r+0xb8>
 8005f62:	4a2a      	ldr	r2, [pc, #168]	; (800600c <__sflush_r+0x108>)
 8005f64:	40ca      	lsrs	r2, r1
 8005f66:	07d6      	lsls	r6, r2, #31
 8005f68:	d528      	bpl.n	8005fbc <__sflush_r+0xb8>
 8005f6a:	2200      	movs	r2, #0
 8005f6c:	6062      	str	r2, [r4, #4]
 8005f6e:	04d9      	lsls	r1, r3, #19
 8005f70:	6922      	ldr	r2, [r4, #16]
 8005f72:	6022      	str	r2, [r4, #0]
 8005f74:	d504      	bpl.n	8005f80 <__sflush_r+0x7c>
 8005f76:	1c42      	adds	r2, r0, #1
 8005f78:	d101      	bne.n	8005f7e <__sflush_r+0x7a>
 8005f7a:	682b      	ldr	r3, [r5, #0]
 8005f7c:	b903      	cbnz	r3, 8005f80 <__sflush_r+0x7c>
 8005f7e:	6560      	str	r0, [r4, #84]	; 0x54
 8005f80:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8005f82:	602f      	str	r7, [r5, #0]
 8005f84:	2900      	cmp	r1, #0
 8005f86:	d0ca      	beq.n	8005f1e <__sflush_r+0x1a>
 8005f88:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8005f8c:	4299      	cmp	r1, r3
 8005f8e:	d002      	beq.n	8005f96 <__sflush_r+0x92>
 8005f90:	4628      	mov	r0, r5
 8005f92:	f7fc fb77 	bl	8002684 <_free_r>
 8005f96:	2000      	movs	r0, #0
 8005f98:	6360      	str	r0, [r4, #52]	; 0x34
 8005f9a:	e7c1      	b.n	8005f20 <__sflush_r+0x1c>
 8005f9c:	6a21      	ldr	r1, [r4, #32]
 8005f9e:	2301      	movs	r3, #1
 8005fa0:	4628      	mov	r0, r5
 8005fa2:	47b0      	blx	r6
 8005fa4:	1c41      	adds	r1, r0, #1
 8005fa6:	d1c7      	bne.n	8005f38 <__sflush_r+0x34>
 8005fa8:	682b      	ldr	r3, [r5, #0]
 8005faa:	2b00      	cmp	r3, #0
 8005fac:	d0c4      	beq.n	8005f38 <__sflush_r+0x34>
 8005fae:	2b1d      	cmp	r3, #29
 8005fb0:	d001      	beq.n	8005fb6 <__sflush_r+0xb2>
 8005fb2:	2b16      	cmp	r3, #22
 8005fb4:	d101      	bne.n	8005fba <__sflush_r+0xb6>
 8005fb6:	602f      	str	r7, [r5, #0]
 8005fb8:	e7b1      	b.n	8005f1e <__sflush_r+0x1a>
 8005fba:	89a3      	ldrh	r3, [r4, #12]
 8005fbc:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8005fc0:	81a3      	strh	r3, [r4, #12]
 8005fc2:	e7ad      	b.n	8005f20 <__sflush_r+0x1c>
 8005fc4:	690f      	ldr	r7, [r1, #16]
 8005fc6:	2f00      	cmp	r7, #0
 8005fc8:	d0a9      	beq.n	8005f1e <__sflush_r+0x1a>
 8005fca:	0793      	lsls	r3, r2, #30
 8005fcc:	680e      	ldr	r6, [r1, #0]
 8005fce:	bf08      	it	eq
 8005fd0:	694b      	ldreq	r3, [r1, #20]
 8005fd2:	600f      	str	r7, [r1, #0]
 8005fd4:	bf18      	it	ne
 8005fd6:	2300      	movne	r3, #0
 8005fd8:	eba6 0807 	sub.w	r8, r6, r7
 8005fdc:	608b      	str	r3, [r1, #8]
 8005fde:	f1b8 0f00 	cmp.w	r8, #0
 8005fe2:	dd9c      	ble.n	8005f1e <__sflush_r+0x1a>
 8005fe4:	6a21      	ldr	r1, [r4, #32]
 8005fe6:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8005fe8:	4643      	mov	r3, r8
 8005fea:	463a      	mov	r2, r7
 8005fec:	4628      	mov	r0, r5
 8005fee:	47b0      	blx	r6
 8005ff0:	2800      	cmp	r0, #0
 8005ff2:	dc06      	bgt.n	8006002 <__sflush_r+0xfe>
 8005ff4:	89a3      	ldrh	r3, [r4, #12]
 8005ff6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8005ffa:	81a3      	strh	r3, [r4, #12]
 8005ffc:	f04f 30ff 	mov.w	r0, #4294967295
 8006000:	e78e      	b.n	8005f20 <__sflush_r+0x1c>
 8006002:	4407      	add	r7, r0
 8006004:	eba8 0800 	sub.w	r8, r8, r0
 8006008:	e7e9      	b.n	8005fde <__sflush_r+0xda>
 800600a:	bf00      	nop
 800600c:	20400001 	.word	0x20400001

08006010 <_fflush_r>:
 8006010:	b538      	push	{r3, r4, r5, lr}
 8006012:	690b      	ldr	r3, [r1, #16]
 8006014:	4605      	mov	r5, r0
 8006016:	460c      	mov	r4, r1
 8006018:	b913      	cbnz	r3, 8006020 <_fflush_r+0x10>
 800601a:	2500      	movs	r5, #0
 800601c:	4628      	mov	r0, r5
 800601e:	bd38      	pop	{r3, r4, r5, pc}
 8006020:	b118      	cbz	r0, 800602a <_fflush_r+0x1a>
 8006022:	6983      	ldr	r3, [r0, #24]
 8006024:	b90b      	cbnz	r3, 800602a <_fflush_r+0x1a>
 8006026:	f000 f887 	bl	8006138 <__sinit>
 800602a:	4b14      	ldr	r3, [pc, #80]	; (800607c <_fflush_r+0x6c>)
 800602c:	429c      	cmp	r4, r3
 800602e:	d11b      	bne.n	8006068 <_fflush_r+0x58>
 8006030:	686c      	ldr	r4, [r5, #4]
 8006032:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8006036:	2b00      	cmp	r3, #0
 8006038:	d0ef      	beq.n	800601a <_fflush_r+0xa>
 800603a:	6e62      	ldr	r2, [r4, #100]	; 0x64
 800603c:	07d0      	lsls	r0, r2, #31
 800603e:	d404      	bmi.n	800604a <_fflush_r+0x3a>
 8006040:	0599      	lsls	r1, r3, #22
 8006042:	d402      	bmi.n	800604a <_fflush_r+0x3a>
 8006044:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8006046:	f7fe f8f4 	bl	8004232 <__retarget_lock_acquire_recursive>
 800604a:	4628      	mov	r0, r5
 800604c:	4621      	mov	r1, r4
 800604e:	f7ff ff59 	bl	8005f04 <__sflush_r>
 8006052:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8006054:	07da      	lsls	r2, r3, #31
 8006056:	4605      	mov	r5, r0
 8006058:	d4e0      	bmi.n	800601c <_fflush_r+0xc>
 800605a:	89a3      	ldrh	r3, [r4, #12]
 800605c:	059b      	lsls	r3, r3, #22
 800605e:	d4dd      	bmi.n	800601c <_fflush_r+0xc>
 8006060:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8006062:	f7fe f8e7 	bl	8004234 <__retarget_lock_release_recursive>
 8006066:	e7d9      	b.n	800601c <_fflush_r+0xc>
 8006068:	4b05      	ldr	r3, [pc, #20]	; (8006080 <_fflush_r+0x70>)
 800606a:	429c      	cmp	r4, r3
 800606c:	d101      	bne.n	8006072 <_fflush_r+0x62>
 800606e:	68ac      	ldr	r4, [r5, #8]
 8006070:	e7df      	b.n	8006032 <_fflush_r+0x22>
 8006072:	4b04      	ldr	r3, [pc, #16]	; (8006084 <_fflush_r+0x74>)
 8006074:	429c      	cmp	r4, r3
 8006076:	bf08      	it	eq
 8006078:	68ec      	ldreq	r4, [r5, #12]
 800607a:	e7da      	b.n	8006032 <_fflush_r+0x22>
 800607c:	080081e4 	.word	0x080081e4
 8006080:	08008204 	.word	0x08008204
 8006084:	080081c4 	.word	0x080081c4

08006088 <std>:
 8006088:	2300      	movs	r3, #0
 800608a:	b510      	push	{r4, lr}
 800608c:	4604      	mov	r4, r0
 800608e:	e9c0 3300 	strd	r3, r3, [r0]
 8006092:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8006096:	6083      	str	r3, [r0, #8]
 8006098:	8181      	strh	r1, [r0, #12]
 800609a:	6643      	str	r3, [r0, #100]	; 0x64
 800609c:	81c2      	strh	r2, [r0, #14]
 800609e:	6183      	str	r3, [r0, #24]
 80060a0:	4619      	mov	r1, r3
 80060a2:	2208      	movs	r2, #8
 80060a4:	305c      	adds	r0, #92	; 0x5c
 80060a6:	f7fc fae5 	bl	8002674 <memset>
 80060aa:	4b05      	ldr	r3, [pc, #20]	; (80060c0 <std+0x38>)
 80060ac:	6263      	str	r3, [r4, #36]	; 0x24
 80060ae:	4b05      	ldr	r3, [pc, #20]	; (80060c4 <std+0x3c>)
 80060b0:	62a3      	str	r3, [r4, #40]	; 0x28
 80060b2:	4b05      	ldr	r3, [pc, #20]	; (80060c8 <std+0x40>)
 80060b4:	62e3      	str	r3, [r4, #44]	; 0x2c
 80060b6:	4b05      	ldr	r3, [pc, #20]	; (80060cc <std+0x44>)
 80060b8:	6224      	str	r4, [r4, #32]
 80060ba:	6323      	str	r3, [r4, #48]	; 0x30
 80060bc:	bd10      	pop	{r4, pc}
 80060be:	bf00      	nop
 80060c0:	08002cbd 	.word	0x08002cbd
 80060c4:	08002ce3 	.word	0x08002ce3
 80060c8:	08002d1b 	.word	0x08002d1b
 80060cc:	08002d3f 	.word	0x08002d3f

080060d0 <_cleanup_r>:
 80060d0:	4901      	ldr	r1, [pc, #4]	; (80060d8 <_cleanup_r+0x8>)
 80060d2:	f000 b8af 	b.w	8006234 <_fwalk_reent>
 80060d6:	bf00      	nop
 80060d8:	08006011 	.word	0x08006011

080060dc <__sfmoreglue>:
 80060dc:	b570      	push	{r4, r5, r6, lr}
 80060de:	1e4a      	subs	r2, r1, #1
 80060e0:	2568      	movs	r5, #104	; 0x68
 80060e2:	4355      	muls	r5, r2
 80060e4:	460e      	mov	r6, r1
 80060e6:	f105 0174 	add.w	r1, r5, #116	; 0x74
 80060ea:	f7fc fb1b 	bl	8002724 <_malloc_r>
 80060ee:	4604      	mov	r4, r0
 80060f0:	b140      	cbz	r0, 8006104 <__sfmoreglue+0x28>
 80060f2:	2100      	movs	r1, #0
 80060f4:	e9c0 1600 	strd	r1, r6, [r0]
 80060f8:	300c      	adds	r0, #12
 80060fa:	60a0      	str	r0, [r4, #8]
 80060fc:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8006100:	f7fc fab8 	bl	8002674 <memset>
 8006104:	4620      	mov	r0, r4
 8006106:	bd70      	pop	{r4, r5, r6, pc}

08006108 <__sfp_lock_acquire>:
 8006108:	4801      	ldr	r0, [pc, #4]	; (8006110 <__sfp_lock_acquire+0x8>)
 800610a:	f7fe b892 	b.w	8004232 <__retarget_lock_acquire_recursive>
 800610e:	bf00      	nop
 8006110:	20000214 	.word	0x20000214

08006114 <__sfp_lock_release>:
 8006114:	4801      	ldr	r0, [pc, #4]	; (800611c <__sfp_lock_release+0x8>)
 8006116:	f7fe b88d 	b.w	8004234 <__retarget_lock_release_recursive>
 800611a:	bf00      	nop
 800611c:	20000214 	.word	0x20000214

08006120 <__sinit_lock_acquire>:
 8006120:	4801      	ldr	r0, [pc, #4]	; (8006128 <__sinit_lock_acquire+0x8>)
 8006122:	f7fe b886 	b.w	8004232 <__retarget_lock_acquire_recursive>
 8006126:	bf00      	nop
 8006128:	2000020f 	.word	0x2000020f

0800612c <__sinit_lock_release>:
 800612c:	4801      	ldr	r0, [pc, #4]	; (8006134 <__sinit_lock_release+0x8>)
 800612e:	f7fe b881 	b.w	8004234 <__retarget_lock_release_recursive>
 8006132:	bf00      	nop
 8006134:	2000020f 	.word	0x2000020f

08006138 <__sinit>:
 8006138:	b510      	push	{r4, lr}
 800613a:	4604      	mov	r4, r0
 800613c:	f7ff fff0 	bl	8006120 <__sinit_lock_acquire>
 8006140:	69a3      	ldr	r3, [r4, #24]
 8006142:	b11b      	cbz	r3, 800614c <__sinit+0x14>
 8006144:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8006148:	f7ff bff0 	b.w	800612c <__sinit_lock_release>
 800614c:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8006150:	6523      	str	r3, [r4, #80]	; 0x50
 8006152:	4b13      	ldr	r3, [pc, #76]	; (80061a0 <__sinit+0x68>)
 8006154:	4a13      	ldr	r2, [pc, #76]	; (80061a4 <__sinit+0x6c>)
 8006156:	681b      	ldr	r3, [r3, #0]
 8006158:	62a2      	str	r2, [r4, #40]	; 0x28
 800615a:	42a3      	cmp	r3, r4
 800615c:	bf04      	itt	eq
 800615e:	2301      	moveq	r3, #1
 8006160:	61a3      	streq	r3, [r4, #24]
 8006162:	4620      	mov	r0, r4
 8006164:	f000 f820 	bl	80061a8 <__sfp>
 8006168:	6060      	str	r0, [r4, #4]
 800616a:	4620      	mov	r0, r4
 800616c:	f000 f81c 	bl	80061a8 <__sfp>
 8006170:	60a0      	str	r0, [r4, #8]
 8006172:	4620      	mov	r0, r4
 8006174:	f000 f818 	bl	80061a8 <__sfp>
 8006178:	2200      	movs	r2, #0
 800617a:	60e0      	str	r0, [r4, #12]
 800617c:	2104      	movs	r1, #4
 800617e:	6860      	ldr	r0, [r4, #4]
 8006180:	f7ff ff82 	bl	8006088 <std>
 8006184:	68a0      	ldr	r0, [r4, #8]
 8006186:	2201      	movs	r2, #1
 8006188:	2109      	movs	r1, #9
 800618a:	f7ff ff7d 	bl	8006088 <std>
 800618e:	68e0      	ldr	r0, [r4, #12]
 8006190:	2202      	movs	r2, #2
 8006192:	2112      	movs	r1, #18
 8006194:	f7ff ff78 	bl	8006088 <std>
 8006198:	2301      	movs	r3, #1
 800619a:	61a3      	str	r3, [r4, #24]
 800619c:	e7d2      	b.n	8006144 <__sinit+0xc>
 800619e:	bf00      	nop
 80061a0:	08007dc4 	.word	0x08007dc4
 80061a4:	080060d1 	.word	0x080060d1

080061a8 <__sfp>:
 80061a8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80061aa:	4607      	mov	r7, r0
 80061ac:	f7ff ffac 	bl	8006108 <__sfp_lock_acquire>
 80061b0:	4b1e      	ldr	r3, [pc, #120]	; (800622c <__sfp+0x84>)
 80061b2:	681e      	ldr	r6, [r3, #0]
 80061b4:	69b3      	ldr	r3, [r6, #24]
 80061b6:	b913      	cbnz	r3, 80061be <__sfp+0x16>
 80061b8:	4630      	mov	r0, r6
 80061ba:	f7ff ffbd 	bl	8006138 <__sinit>
 80061be:	3648      	adds	r6, #72	; 0x48
 80061c0:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 80061c4:	3b01      	subs	r3, #1
 80061c6:	d503      	bpl.n	80061d0 <__sfp+0x28>
 80061c8:	6833      	ldr	r3, [r6, #0]
 80061ca:	b30b      	cbz	r3, 8006210 <__sfp+0x68>
 80061cc:	6836      	ldr	r6, [r6, #0]
 80061ce:	e7f7      	b.n	80061c0 <__sfp+0x18>
 80061d0:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 80061d4:	b9d5      	cbnz	r5, 800620c <__sfp+0x64>
 80061d6:	4b16      	ldr	r3, [pc, #88]	; (8006230 <__sfp+0x88>)
 80061d8:	60e3      	str	r3, [r4, #12]
 80061da:	f104 0058 	add.w	r0, r4, #88	; 0x58
 80061de:	6665      	str	r5, [r4, #100]	; 0x64
 80061e0:	f7fe f826 	bl	8004230 <__retarget_lock_init_recursive>
 80061e4:	f7ff ff96 	bl	8006114 <__sfp_lock_release>
 80061e8:	e9c4 5501 	strd	r5, r5, [r4, #4]
 80061ec:	e9c4 5504 	strd	r5, r5, [r4, #16]
 80061f0:	6025      	str	r5, [r4, #0]
 80061f2:	61a5      	str	r5, [r4, #24]
 80061f4:	2208      	movs	r2, #8
 80061f6:	4629      	mov	r1, r5
 80061f8:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 80061fc:	f7fc fa3a 	bl	8002674 <memset>
 8006200:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8006204:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8006208:	4620      	mov	r0, r4
 800620a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800620c:	3468      	adds	r4, #104	; 0x68
 800620e:	e7d9      	b.n	80061c4 <__sfp+0x1c>
 8006210:	2104      	movs	r1, #4
 8006212:	4638      	mov	r0, r7
 8006214:	f7ff ff62 	bl	80060dc <__sfmoreglue>
 8006218:	4604      	mov	r4, r0
 800621a:	6030      	str	r0, [r6, #0]
 800621c:	2800      	cmp	r0, #0
 800621e:	d1d5      	bne.n	80061cc <__sfp+0x24>
 8006220:	f7ff ff78 	bl	8006114 <__sfp_lock_release>
 8006224:	230c      	movs	r3, #12
 8006226:	603b      	str	r3, [r7, #0]
 8006228:	e7ee      	b.n	8006208 <__sfp+0x60>
 800622a:	bf00      	nop
 800622c:	08007dc4 	.word	0x08007dc4
 8006230:	ffff0001 	.word	0xffff0001

08006234 <_fwalk_reent>:
 8006234:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8006238:	4606      	mov	r6, r0
 800623a:	4688      	mov	r8, r1
 800623c:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8006240:	2700      	movs	r7, #0
 8006242:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8006246:	f1b9 0901 	subs.w	r9, r9, #1
 800624a:	d505      	bpl.n	8006258 <_fwalk_reent+0x24>
 800624c:	6824      	ldr	r4, [r4, #0]
 800624e:	2c00      	cmp	r4, #0
 8006250:	d1f7      	bne.n	8006242 <_fwalk_reent+0xe>
 8006252:	4638      	mov	r0, r7
 8006254:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8006258:	89ab      	ldrh	r3, [r5, #12]
 800625a:	2b01      	cmp	r3, #1
 800625c:	d907      	bls.n	800626e <_fwalk_reent+0x3a>
 800625e:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8006262:	3301      	adds	r3, #1
 8006264:	d003      	beq.n	800626e <_fwalk_reent+0x3a>
 8006266:	4629      	mov	r1, r5
 8006268:	4630      	mov	r0, r6
 800626a:	47c0      	blx	r8
 800626c:	4307      	orrs	r7, r0
 800626e:	3568      	adds	r5, #104	; 0x68
 8006270:	e7e9      	b.n	8006246 <_fwalk_reent+0x12>

08006272 <__swhatbuf_r>:
 8006272:	b570      	push	{r4, r5, r6, lr}
 8006274:	460e      	mov	r6, r1
 8006276:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800627a:	2900      	cmp	r1, #0
 800627c:	b096      	sub	sp, #88	; 0x58
 800627e:	4614      	mov	r4, r2
 8006280:	461d      	mov	r5, r3
 8006282:	da07      	bge.n	8006294 <__swhatbuf_r+0x22>
 8006284:	2300      	movs	r3, #0
 8006286:	602b      	str	r3, [r5, #0]
 8006288:	89b3      	ldrh	r3, [r6, #12]
 800628a:	061a      	lsls	r2, r3, #24
 800628c:	d410      	bmi.n	80062b0 <__swhatbuf_r+0x3e>
 800628e:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8006292:	e00e      	b.n	80062b2 <__swhatbuf_r+0x40>
 8006294:	466a      	mov	r2, sp
 8006296:	f000 f8d5 	bl	8006444 <_fstat_r>
 800629a:	2800      	cmp	r0, #0
 800629c:	dbf2      	blt.n	8006284 <__swhatbuf_r+0x12>
 800629e:	9a01      	ldr	r2, [sp, #4]
 80062a0:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 80062a4:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 80062a8:	425a      	negs	r2, r3
 80062aa:	415a      	adcs	r2, r3
 80062ac:	602a      	str	r2, [r5, #0]
 80062ae:	e7ee      	b.n	800628e <__swhatbuf_r+0x1c>
 80062b0:	2340      	movs	r3, #64	; 0x40
 80062b2:	2000      	movs	r0, #0
 80062b4:	6023      	str	r3, [r4, #0]
 80062b6:	b016      	add	sp, #88	; 0x58
 80062b8:	bd70      	pop	{r4, r5, r6, pc}
	...

080062bc <__smakebuf_r>:
 80062bc:	898b      	ldrh	r3, [r1, #12]
 80062be:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80062c0:	079d      	lsls	r5, r3, #30
 80062c2:	4606      	mov	r6, r0
 80062c4:	460c      	mov	r4, r1
 80062c6:	d507      	bpl.n	80062d8 <__smakebuf_r+0x1c>
 80062c8:	f104 0347 	add.w	r3, r4, #71	; 0x47
 80062cc:	6023      	str	r3, [r4, #0]
 80062ce:	6123      	str	r3, [r4, #16]
 80062d0:	2301      	movs	r3, #1
 80062d2:	6163      	str	r3, [r4, #20]
 80062d4:	b002      	add	sp, #8
 80062d6:	bd70      	pop	{r4, r5, r6, pc}
 80062d8:	ab01      	add	r3, sp, #4
 80062da:	466a      	mov	r2, sp
 80062dc:	f7ff ffc9 	bl	8006272 <__swhatbuf_r>
 80062e0:	9900      	ldr	r1, [sp, #0]
 80062e2:	4605      	mov	r5, r0
 80062e4:	4630      	mov	r0, r6
 80062e6:	f7fc fa1d 	bl	8002724 <_malloc_r>
 80062ea:	b948      	cbnz	r0, 8006300 <__smakebuf_r+0x44>
 80062ec:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80062f0:	059a      	lsls	r2, r3, #22
 80062f2:	d4ef      	bmi.n	80062d4 <__smakebuf_r+0x18>
 80062f4:	f023 0303 	bic.w	r3, r3, #3
 80062f8:	f043 0302 	orr.w	r3, r3, #2
 80062fc:	81a3      	strh	r3, [r4, #12]
 80062fe:	e7e3      	b.n	80062c8 <__smakebuf_r+0xc>
 8006300:	4b0d      	ldr	r3, [pc, #52]	; (8006338 <__smakebuf_r+0x7c>)
 8006302:	62b3      	str	r3, [r6, #40]	; 0x28
 8006304:	89a3      	ldrh	r3, [r4, #12]
 8006306:	6020      	str	r0, [r4, #0]
 8006308:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800630c:	81a3      	strh	r3, [r4, #12]
 800630e:	9b00      	ldr	r3, [sp, #0]
 8006310:	6163      	str	r3, [r4, #20]
 8006312:	9b01      	ldr	r3, [sp, #4]
 8006314:	6120      	str	r0, [r4, #16]
 8006316:	b15b      	cbz	r3, 8006330 <__smakebuf_r+0x74>
 8006318:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800631c:	4630      	mov	r0, r6
 800631e:	f000 f8a3 	bl	8006468 <_isatty_r>
 8006322:	b128      	cbz	r0, 8006330 <__smakebuf_r+0x74>
 8006324:	89a3      	ldrh	r3, [r4, #12]
 8006326:	f023 0303 	bic.w	r3, r3, #3
 800632a:	f043 0301 	orr.w	r3, r3, #1
 800632e:	81a3      	strh	r3, [r4, #12]
 8006330:	89a0      	ldrh	r0, [r4, #12]
 8006332:	4305      	orrs	r5, r0
 8006334:	81a5      	strh	r5, [r4, #12]
 8006336:	e7cd      	b.n	80062d4 <__smakebuf_r+0x18>
 8006338:	080060d1 	.word	0x080060d1

0800633c <memmove>:
 800633c:	4288      	cmp	r0, r1
 800633e:	b510      	push	{r4, lr}
 8006340:	eb01 0402 	add.w	r4, r1, r2
 8006344:	d902      	bls.n	800634c <memmove+0x10>
 8006346:	4284      	cmp	r4, r0
 8006348:	4623      	mov	r3, r4
 800634a:	d807      	bhi.n	800635c <memmove+0x20>
 800634c:	1e43      	subs	r3, r0, #1
 800634e:	42a1      	cmp	r1, r4
 8006350:	d008      	beq.n	8006364 <memmove+0x28>
 8006352:	f811 2b01 	ldrb.w	r2, [r1], #1
 8006356:	f803 2f01 	strb.w	r2, [r3, #1]!
 800635a:	e7f8      	b.n	800634e <memmove+0x12>
 800635c:	4402      	add	r2, r0
 800635e:	4601      	mov	r1, r0
 8006360:	428a      	cmp	r2, r1
 8006362:	d100      	bne.n	8006366 <memmove+0x2a>
 8006364:	bd10      	pop	{r4, pc}
 8006366:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 800636a:	f802 4d01 	strb.w	r4, [r2, #-1]!
 800636e:	e7f7      	b.n	8006360 <memmove+0x24>

08006370 <_realloc_r>:
 8006370:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006372:	4607      	mov	r7, r0
 8006374:	4614      	mov	r4, r2
 8006376:	460e      	mov	r6, r1
 8006378:	b921      	cbnz	r1, 8006384 <_realloc_r+0x14>
 800637a:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 800637e:	4611      	mov	r1, r2
 8006380:	f7fc b9d0 	b.w	8002724 <_malloc_r>
 8006384:	b922      	cbnz	r2, 8006390 <_realloc_r+0x20>
 8006386:	f7fc f97d 	bl	8002684 <_free_r>
 800638a:	4625      	mov	r5, r4
 800638c:	4628      	mov	r0, r5
 800638e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8006390:	f000 f87a 	bl	8006488 <_malloc_usable_size_r>
 8006394:	42a0      	cmp	r0, r4
 8006396:	d20f      	bcs.n	80063b8 <_realloc_r+0x48>
 8006398:	4621      	mov	r1, r4
 800639a:	4638      	mov	r0, r7
 800639c:	f7fc f9c2 	bl	8002724 <_malloc_r>
 80063a0:	4605      	mov	r5, r0
 80063a2:	2800      	cmp	r0, #0
 80063a4:	d0f2      	beq.n	800638c <_realloc_r+0x1c>
 80063a6:	4631      	mov	r1, r6
 80063a8:	4622      	mov	r2, r4
 80063aa:	f7fd ff69 	bl	8004280 <memcpy>
 80063ae:	4631      	mov	r1, r6
 80063b0:	4638      	mov	r0, r7
 80063b2:	f7fc f967 	bl	8002684 <_free_r>
 80063b6:	e7e9      	b.n	800638c <_realloc_r+0x1c>
 80063b8:	4635      	mov	r5, r6
 80063ba:	e7e7      	b.n	800638c <_realloc_r+0x1c>

080063bc <_raise_r>:
 80063bc:	291f      	cmp	r1, #31
 80063be:	b538      	push	{r3, r4, r5, lr}
 80063c0:	4604      	mov	r4, r0
 80063c2:	460d      	mov	r5, r1
 80063c4:	d904      	bls.n	80063d0 <_raise_r+0x14>
 80063c6:	2316      	movs	r3, #22
 80063c8:	6003      	str	r3, [r0, #0]
 80063ca:	f04f 30ff 	mov.w	r0, #4294967295
 80063ce:	bd38      	pop	{r3, r4, r5, pc}
 80063d0:	6c42      	ldr	r2, [r0, #68]	; 0x44
 80063d2:	b112      	cbz	r2, 80063da <_raise_r+0x1e>
 80063d4:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 80063d8:	b94b      	cbnz	r3, 80063ee <_raise_r+0x32>
 80063da:	4620      	mov	r0, r4
 80063dc:	f000 f830 	bl	8006440 <_getpid_r>
 80063e0:	462a      	mov	r2, r5
 80063e2:	4601      	mov	r1, r0
 80063e4:	4620      	mov	r0, r4
 80063e6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80063ea:	f000 b817 	b.w	800641c <_kill_r>
 80063ee:	2b01      	cmp	r3, #1
 80063f0:	d00a      	beq.n	8006408 <_raise_r+0x4c>
 80063f2:	1c59      	adds	r1, r3, #1
 80063f4:	d103      	bne.n	80063fe <_raise_r+0x42>
 80063f6:	2316      	movs	r3, #22
 80063f8:	6003      	str	r3, [r0, #0]
 80063fa:	2001      	movs	r0, #1
 80063fc:	e7e7      	b.n	80063ce <_raise_r+0x12>
 80063fe:	2400      	movs	r4, #0
 8006400:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 8006404:	4628      	mov	r0, r5
 8006406:	4798      	blx	r3
 8006408:	2000      	movs	r0, #0
 800640a:	e7e0      	b.n	80063ce <_raise_r+0x12>

0800640c <raise>:
 800640c:	4b02      	ldr	r3, [pc, #8]	; (8006418 <raise+0xc>)
 800640e:	4601      	mov	r1, r0
 8006410:	6818      	ldr	r0, [r3, #0]
 8006412:	f7ff bfd3 	b.w	80063bc <_raise_r>
 8006416:	bf00      	nop
 8006418:	20000008 	.word	0x20000008

0800641c <_kill_r>:
 800641c:	b538      	push	{r3, r4, r5, lr}
 800641e:	4d07      	ldr	r5, [pc, #28]	; (800643c <_kill_r+0x20>)
 8006420:	2300      	movs	r3, #0
 8006422:	4604      	mov	r4, r0
 8006424:	4608      	mov	r0, r1
 8006426:	4611      	mov	r1, r2
 8006428:	602b      	str	r3, [r5, #0]
 800642a:	f7fb f811 	bl	8001450 <_kill>
 800642e:	1c43      	adds	r3, r0, #1
 8006430:	d102      	bne.n	8006438 <_kill_r+0x1c>
 8006432:	682b      	ldr	r3, [r5, #0]
 8006434:	b103      	cbz	r3, 8006438 <_kill_r+0x1c>
 8006436:	6023      	str	r3, [r4, #0]
 8006438:	bd38      	pop	{r3, r4, r5, pc}
 800643a:	bf00      	nop
 800643c:	20000218 	.word	0x20000218

08006440 <_getpid_r>:
 8006440:	f7fa bffe 	b.w	8001440 <_getpid>

08006444 <_fstat_r>:
 8006444:	b538      	push	{r3, r4, r5, lr}
 8006446:	4d07      	ldr	r5, [pc, #28]	; (8006464 <_fstat_r+0x20>)
 8006448:	2300      	movs	r3, #0
 800644a:	4604      	mov	r4, r0
 800644c:	4608      	mov	r0, r1
 800644e:	4611      	mov	r1, r2
 8006450:	602b      	str	r3, [r5, #0]
 8006452:	f7fb f85c 	bl	800150e <_fstat>
 8006456:	1c43      	adds	r3, r0, #1
 8006458:	d102      	bne.n	8006460 <_fstat_r+0x1c>
 800645a:	682b      	ldr	r3, [r5, #0]
 800645c:	b103      	cbz	r3, 8006460 <_fstat_r+0x1c>
 800645e:	6023      	str	r3, [r4, #0]
 8006460:	bd38      	pop	{r3, r4, r5, pc}
 8006462:	bf00      	nop
 8006464:	20000218 	.word	0x20000218

08006468 <_isatty_r>:
 8006468:	b538      	push	{r3, r4, r5, lr}
 800646a:	4d06      	ldr	r5, [pc, #24]	; (8006484 <_isatty_r+0x1c>)
 800646c:	2300      	movs	r3, #0
 800646e:	4604      	mov	r4, r0
 8006470:	4608      	mov	r0, r1
 8006472:	602b      	str	r3, [r5, #0]
 8006474:	f7fb f85b 	bl	800152e <_isatty>
 8006478:	1c43      	adds	r3, r0, #1
 800647a:	d102      	bne.n	8006482 <_isatty_r+0x1a>
 800647c:	682b      	ldr	r3, [r5, #0]
 800647e:	b103      	cbz	r3, 8006482 <_isatty_r+0x1a>
 8006480:	6023      	str	r3, [r4, #0]
 8006482:	bd38      	pop	{r3, r4, r5, pc}
 8006484:	20000218 	.word	0x20000218

08006488 <_malloc_usable_size_r>:
 8006488:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800648c:	1f18      	subs	r0, r3, #4
 800648e:	2b00      	cmp	r3, #0
 8006490:	bfbc      	itt	lt
 8006492:	580b      	ldrlt	r3, [r1, r0]
 8006494:	18c0      	addlt	r0, r0, r3
 8006496:	4770      	bx	lr

08006498 <cos>:
 8006498:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800649a:	ec53 2b10 	vmov	r2, r3, d0
 800649e:	4824      	ldr	r0, [pc, #144]	; (8006530 <cos+0x98>)
 80064a0:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 80064a4:	4281      	cmp	r1, r0
 80064a6:	dc06      	bgt.n	80064b6 <cos+0x1e>
 80064a8:	ed9f 1b1f 	vldr	d1, [pc, #124]	; 8006528 <cos+0x90>
 80064ac:	f000 fbbc 	bl	8006c28 <__kernel_cos>
 80064b0:	ec51 0b10 	vmov	r0, r1, d0
 80064b4:	e007      	b.n	80064c6 <cos+0x2e>
 80064b6:	481f      	ldr	r0, [pc, #124]	; (8006534 <cos+0x9c>)
 80064b8:	4281      	cmp	r1, r0
 80064ba:	dd09      	ble.n	80064d0 <cos+0x38>
 80064bc:	ee10 0a10 	vmov	r0, s0
 80064c0:	4619      	mov	r1, r3
 80064c2:	f7f9 fee9 	bl	8000298 <__aeabi_dsub>
 80064c6:	ec41 0b10 	vmov	d0, r0, r1
 80064ca:	b005      	add	sp, #20
 80064cc:	f85d fb04 	ldr.w	pc, [sp], #4
 80064d0:	4668      	mov	r0, sp
 80064d2:	f000 f99d 	bl	8006810 <__ieee754_rem_pio2>
 80064d6:	f000 0003 	and.w	r0, r0, #3
 80064da:	2801      	cmp	r0, #1
 80064dc:	d007      	beq.n	80064ee <cos+0x56>
 80064de:	2802      	cmp	r0, #2
 80064e0:	d012      	beq.n	8006508 <cos+0x70>
 80064e2:	b9c0      	cbnz	r0, 8006516 <cos+0x7e>
 80064e4:	ed9d 1b02 	vldr	d1, [sp, #8]
 80064e8:	ed9d 0b00 	vldr	d0, [sp]
 80064ec:	e7de      	b.n	80064ac <cos+0x14>
 80064ee:	ed9d 1b02 	vldr	d1, [sp, #8]
 80064f2:	ed9d 0b00 	vldr	d0, [sp]
 80064f6:	f000 ff9f 	bl	8007438 <__kernel_sin>
 80064fa:	ec53 2b10 	vmov	r2, r3, d0
 80064fe:	ee10 0a10 	vmov	r0, s0
 8006502:	f103 4100 	add.w	r1, r3, #2147483648	; 0x80000000
 8006506:	e7de      	b.n	80064c6 <cos+0x2e>
 8006508:	ed9d 1b02 	vldr	d1, [sp, #8]
 800650c:	ed9d 0b00 	vldr	d0, [sp]
 8006510:	f000 fb8a 	bl	8006c28 <__kernel_cos>
 8006514:	e7f1      	b.n	80064fa <cos+0x62>
 8006516:	ed9d 1b02 	vldr	d1, [sp, #8]
 800651a:	ed9d 0b00 	vldr	d0, [sp]
 800651e:	2001      	movs	r0, #1
 8006520:	f000 ff8a 	bl	8007438 <__kernel_sin>
 8006524:	e7c4      	b.n	80064b0 <cos+0x18>
 8006526:	bf00      	nop
	...
 8006530:	3fe921fb 	.word	0x3fe921fb
 8006534:	7fefffff 	.word	0x7fefffff

08006538 <round>:
 8006538:	ec51 0b10 	vmov	r0, r1, d0
 800653c:	b570      	push	{r4, r5, r6, lr}
 800653e:	f3c1 550a 	ubfx	r5, r1, #20, #11
 8006542:	f2a5 34ff 	subw	r4, r5, #1023	; 0x3ff
 8006546:	2c13      	cmp	r4, #19
 8006548:	ee10 2a10 	vmov	r2, s0
 800654c:	460b      	mov	r3, r1
 800654e:	dc19      	bgt.n	8006584 <round+0x4c>
 8006550:	2c00      	cmp	r4, #0
 8006552:	da09      	bge.n	8006568 <round+0x30>
 8006554:	3401      	adds	r4, #1
 8006556:	f001 4300 	and.w	r3, r1, #2147483648	; 0x80000000
 800655a:	d103      	bne.n	8006564 <round+0x2c>
 800655c:	f043 537f 	orr.w	r3, r3, #1069547520	; 0x3fc00000
 8006560:	f443 1340 	orr.w	r3, r3, #3145728	; 0x300000
 8006564:	2100      	movs	r1, #0
 8006566:	e028      	b.n	80065ba <round+0x82>
 8006568:	4d15      	ldr	r5, [pc, #84]	; (80065c0 <round+0x88>)
 800656a:	4125      	asrs	r5, r4
 800656c:	ea01 0605 	and.w	r6, r1, r5
 8006570:	4332      	orrs	r2, r6
 8006572:	d00e      	beq.n	8006592 <round+0x5a>
 8006574:	f44f 2200 	mov.w	r2, #524288	; 0x80000
 8006578:	fa42 f404 	asr.w	r4, r2, r4
 800657c:	4423      	add	r3, r4
 800657e:	ea23 0305 	bic.w	r3, r3, r5
 8006582:	e7ef      	b.n	8006564 <round+0x2c>
 8006584:	2c33      	cmp	r4, #51	; 0x33
 8006586:	dd07      	ble.n	8006598 <round+0x60>
 8006588:	f5b4 6f80 	cmp.w	r4, #1024	; 0x400
 800658c:	d101      	bne.n	8006592 <round+0x5a>
 800658e:	f7f9 fe85 	bl	800029c <__adddf3>
 8006592:	ec41 0b10 	vmov	d0, r0, r1
 8006596:	bd70      	pop	{r4, r5, r6, pc}
 8006598:	f2a5 4613 	subw	r6, r5, #1043	; 0x413
 800659c:	f04f 35ff 	mov.w	r5, #4294967295
 80065a0:	40f5      	lsrs	r5, r6
 80065a2:	4228      	tst	r0, r5
 80065a4:	d0f5      	beq.n	8006592 <round+0x5a>
 80065a6:	2101      	movs	r1, #1
 80065a8:	f1c4 0433 	rsb	r4, r4, #51	; 0x33
 80065ac:	fa01 f404 	lsl.w	r4, r1, r4
 80065b0:	1912      	adds	r2, r2, r4
 80065b2:	bf28      	it	cs
 80065b4:	185b      	addcs	r3, r3, r1
 80065b6:	ea22 0105 	bic.w	r1, r2, r5
 80065ba:	4608      	mov	r0, r1
 80065bc:	4619      	mov	r1, r3
 80065be:	e7e8      	b.n	8006592 <round+0x5a>
 80065c0:	000fffff 	.word	0x000fffff
 80065c4:	00000000 	.word	0x00000000

080065c8 <sin>:
 80065c8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80065ca:	ec53 2b10 	vmov	r2, r3, d0
 80065ce:	4826      	ldr	r0, [pc, #152]	; (8006668 <sin+0xa0>)
 80065d0:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 80065d4:	4281      	cmp	r1, r0
 80065d6:	dc07      	bgt.n	80065e8 <sin+0x20>
 80065d8:	ed9f 1b21 	vldr	d1, [pc, #132]	; 8006660 <sin+0x98>
 80065dc:	2000      	movs	r0, #0
 80065de:	f000 ff2b 	bl	8007438 <__kernel_sin>
 80065e2:	ec51 0b10 	vmov	r0, r1, d0
 80065e6:	e007      	b.n	80065f8 <sin+0x30>
 80065e8:	4820      	ldr	r0, [pc, #128]	; (800666c <sin+0xa4>)
 80065ea:	4281      	cmp	r1, r0
 80065ec:	dd09      	ble.n	8006602 <sin+0x3a>
 80065ee:	ee10 0a10 	vmov	r0, s0
 80065f2:	4619      	mov	r1, r3
 80065f4:	f7f9 fe50 	bl	8000298 <__aeabi_dsub>
 80065f8:	ec41 0b10 	vmov	d0, r0, r1
 80065fc:	b005      	add	sp, #20
 80065fe:	f85d fb04 	ldr.w	pc, [sp], #4
 8006602:	4668      	mov	r0, sp
 8006604:	f000 f904 	bl	8006810 <__ieee754_rem_pio2>
 8006608:	f000 0003 	and.w	r0, r0, #3
 800660c:	2801      	cmp	r0, #1
 800660e:	d008      	beq.n	8006622 <sin+0x5a>
 8006610:	2802      	cmp	r0, #2
 8006612:	d00d      	beq.n	8006630 <sin+0x68>
 8006614:	b9d0      	cbnz	r0, 800664c <sin+0x84>
 8006616:	ed9d 1b02 	vldr	d1, [sp, #8]
 800661a:	ed9d 0b00 	vldr	d0, [sp]
 800661e:	2001      	movs	r0, #1
 8006620:	e7dd      	b.n	80065de <sin+0x16>
 8006622:	ed9d 1b02 	vldr	d1, [sp, #8]
 8006626:	ed9d 0b00 	vldr	d0, [sp]
 800662a:	f000 fafd 	bl	8006c28 <__kernel_cos>
 800662e:	e7d8      	b.n	80065e2 <sin+0x1a>
 8006630:	ed9d 1b02 	vldr	d1, [sp, #8]
 8006634:	ed9d 0b00 	vldr	d0, [sp]
 8006638:	2001      	movs	r0, #1
 800663a:	f000 fefd 	bl	8007438 <__kernel_sin>
 800663e:	ec53 2b10 	vmov	r2, r3, d0
 8006642:	ee10 0a10 	vmov	r0, s0
 8006646:	f103 4100 	add.w	r1, r3, #2147483648	; 0x80000000
 800664a:	e7d5      	b.n	80065f8 <sin+0x30>
 800664c:	ed9d 1b02 	vldr	d1, [sp, #8]
 8006650:	ed9d 0b00 	vldr	d0, [sp]
 8006654:	f000 fae8 	bl	8006c28 <__kernel_cos>
 8006658:	e7f1      	b.n	800663e <sin+0x76>
 800665a:	bf00      	nop
 800665c:	f3af 8000 	nop.w
	...
 8006668:	3fe921fb 	.word	0x3fe921fb
 800666c:	7fefffff 	.word	0x7fefffff

08006670 <atan2>:
 8006670:	f000 b802 	b.w	8006678 <__ieee754_atan2>
 8006674:	0000      	movs	r0, r0
	...

08006678 <__ieee754_atan2>:
 8006678:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800667c:	ec57 6b11 	vmov	r6, r7, d1
 8006680:	4273      	negs	r3, r6
 8006682:	f8df e184 	ldr.w	lr, [pc, #388]	; 8006808 <__ieee754_atan2+0x190>
 8006686:	f027 4200 	bic.w	r2, r7, #2147483648	; 0x80000000
 800668a:	4333      	orrs	r3, r6
 800668c:	ea42 73d3 	orr.w	r3, r2, r3, lsr #31
 8006690:	4573      	cmp	r3, lr
 8006692:	ec51 0b10 	vmov	r0, r1, d0
 8006696:	ee11 8a10 	vmov	r8, s2
 800669a:	d80a      	bhi.n	80066b2 <__ieee754_atan2+0x3a>
 800669c:	4244      	negs	r4, r0
 800669e:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
 80066a2:	4304      	orrs	r4, r0
 80066a4:	ea43 74d4 	orr.w	r4, r3, r4, lsr #31
 80066a8:	4574      	cmp	r4, lr
 80066aa:	ee10 9a10 	vmov	r9, s0
 80066ae:	468c      	mov	ip, r1
 80066b0:	d907      	bls.n	80066c2 <__ieee754_atan2+0x4a>
 80066b2:	4632      	mov	r2, r6
 80066b4:	463b      	mov	r3, r7
 80066b6:	f7f9 fdf1 	bl	800029c <__adddf3>
 80066ba:	ec41 0b10 	vmov	d0, r0, r1
 80066be:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80066c2:	f107 4440 	add.w	r4, r7, #3221225472	; 0xc0000000
 80066c6:	f504 1480 	add.w	r4, r4, #1048576	; 0x100000
 80066ca:	4334      	orrs	r4, r6
 80066cc:	d103      	bne.n	80066d6 <__ieee754_atan2+0x5e>
 80066ce:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80066d2:	f000 bf71 	b.w	80075b8 <atan>
 80066d6:	17bc      	asrs	r4, r7, #30
 80066d8:	f004 0402 	and.w	r4, r4, #2
 80066dc:	ea53 0909 	orrs.w	r9, r3, r9
 80066e0:	ea44 74d1 	orr.w	r4, r4, r1, lsr #31
 80066e4:	d107      	bne.n	80066f6 <__ieee754_atan2+0x7e>
 80066e6:	2c02      	cmp	r4, #2
 80066e8:	d060      	beq.n	80067ac <__ieee754_atan2+0x134>
 80066ea:	2c03      	cmp	r4, #3
 80066ec:	d1e5      	bne.n	80066ba <__ieee754_atan2+0x42>
 80066ee:	a142      	add	r1, pc, #264	; (adr r1, 80067f8 <__ieee754_atan2+0x180>)
 80066f0:	e9d1 0100 	ldrd	r0, r1, [r1]
 80066f4:	e7e1      	b.n	80066ba <__ieee754_atan2+0x42>
 80066f6:	ea52 0808 	orrs.w	r8, r2, r8
 80066fa:	d106      	bne.n	800670a <__ieee754_atan2+0x92>
 80066fc:	f1bc 0f00 	cmp.w	ip, #0
 8006700:	da5f      	bge.n	80067c2 <__ieee754_atan2+0x14a>
 8006702:	a13f      	add	r1, pc, #252	; (adr r1, 8006800 <__ieee754_atan2+0x188>)
 8006704:	e9d1 0100 	ldrd	r0, r1, [r1]
 8006708:	e7d7      	b.n	80066ba <__ieee754_atan2+0x42>
 800670a:	4572      	cmp	r2, lr
 800670c:	d10f      	bne.n	800672e <__ieee754_atan2+0xb6>
 800670e:	4293      	cmp	r3, r2
 8006710:	f104 34ff 	add.w	r4, r4, #4294967295
 8006714:	d107      	bne.n	8006726 <__ieee754_atan2+0xae>
 8006716:	2c02      	cmp	r4, #2
 8006718:	d84c      	bhi.n	80067b4 <__ieee754_atan2+0x13c>
 800671a:	4b35      	ldr	r3, [pc, #212]	; (80067f0 <__ieee754_atan2+0x178>)
 800671c:	eb03 04c4 	add.w	r4, r3, r4, lsl #3
 8006720:	e9d4 0100 	ldrd	r0, r1, [r4]
 8006724:	e7c9      	b.n	80066ba <__ieee754_atan2+0x42>
 8006726:	2c02      	cmp	r4, #2
 8006728:	d848      	bhi.n	80067bc <__ieee754_atan2+0x144>
 800672a:	4b32      	ldr	r3, [pc, #200]	; (80067f4 <__ieee754_atan2+0x17c>)
 800672c:	e7f6      	b.n	800671c <__ieee754_atan2+0xa4>
 800672e:	4573      	cmp	r3, lr
 8006730:	d0e4      	beq.n	80066fc <__ieee754_atan2+0x84>
 8006732:	1a9b      	subs	r3, r3, r2
 8006734:	f1b3 7f74 	cmp.w	r3, #63963136	; 0x3d00000
 8006738:	ea4f 5223 	mov.w	r2, r3, asr #20
 800673c:	da1e      	bge.n	800677c <__ieee754_atan2+0x104>
 800673e:	2f00      	cmp	r7, #0
 8006740:	da01      	bge.n	8006746 <__ieee754_atan2+0xce>
 8006742:	323c      	adds	r2, #60	; 0x3c
 8006744:	db1e      	blt.n	8006784 <__ieee754_atan2+0x10c>
 8006746:	4632      	mov	r2, r6
 8006748:	463b      	mov	r3, r7
 800674a:	f7fa f887 	bl	800085c <__aeabi_ddiv>
 800674e:	ec41 0b10 	vmov	d0, r0, r1
 8006752:	f001 f8d1 	bl	80078f8 <fabs>
 8006756:	f000 ff2f 	bl	80075b8 <atan>
 800675a:	ec51 0b10 	vmov	r0, r1, d0
 800675e:	2c01      	cmp	r4, #1
 8006760:	d013      	beq.n	800678a <__ieee754_atan2+0x112>
 8006762:	2c02      	cmp	r4, #2
 8006764:	d015      	beq.n	8006792 <__ieee754_atan2+0x11a>
 8006766:	2c00      	cmp	r4, #0
 8006768:	d0a7      	beq.n	80066ba <__ieee754_atan2+0x42>
 800676a:	a319      	add	r3, pc, #100	; (adr r3, 80067d0 <__ieee754_atan2+0x158>)
 800676c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006770:	f7f9 fd92 	bl	8000298 <__aeabi_dsub>
 8006774:	a318      	add	r3, pc, #96	; (adr r3, 80067d8 <__ieee754_atan2+0x160>)
 8006776:	e9d3 2300 	ldrd	r2, r3, [r3]
 800677a:	e014      	b.n	80067a6 <__ieee754_atan2+0x12e>
 800677c:	a118      	add	r1, pc, #96	; (adr r1, 80067e0 <__ieee754_atan2+0x168>)
 800677e:	e9d1 0100 	ldrd	r0, r1, [r1]
 8006782:	e7ec      	b.n	800675e <__ieee754_atan2+0xe6>
 8006784:	2000      	movs	r0, #0
 8006786:	2100      	movs	r1, #0
 8006788:	e7e9      	b.n	800675e <__ieee754_atan2+0xe6>
 800678a:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 800678e:	4619      	mov	r1, r3
 8006790:	e793      	b.n	80066ba <__ieee754_atan2+0x42>
 8006792:	a30f      	add	r3, pc, #60	; (adr r3, 80067d0 <__ieee754_atan2+0x158>)
 8006794:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006798:	f7f9 fd7e 	bl	8000298 <__aeabi_dsub>
 800679c:	4602      	mov	r2, r0
 800679e:	460b      	mov	r3, r1
 80067a0:	a10d      	add	r1, pc, #52	; (adr r1, 80067d8 <__ieee754_atan2+0x160>)
 80067a2:	e9d1 0100 	ldrd	r0, r1, [r1]
 80067a6:	f7f9 fd77 	bl	8000298 <__aeabi_dsub>
 80067aa:	e786      	b.n	80066ba <__ieee754_atan2+0x42>
 80067ac:	a10a      	add	r1, pc, #40	; (adr r1, 80067d8 <__ieee754_atan2+0x160>)
 80067ae:	e9d1 0100 	ldrd	r0, r1, [r1]
 80067b2:	e782      	b.n	80066ba <__ieee754_atan2+0x42>
 80067b4:	a10c      	add	r1, pc, #48	; (adr r1, 80067e8 <__ieee754_atan2+0x170>)
 80067b6:	e9d1 0100 	ldrd	r0, r1, [r1]
 80067ba:	e77e      	b.n	80066ba <__ieee754_atan2+0x42>
 80067bc:	2000      	movs	r0, #0
 80067be:	2100      	movs	r1, #0
 80067c0:	e77b      	b.n	80066ba <__ieee754_atan2+0x42>
 80067c2:	a107      	add	r1, pc, #28	; (adr r1, 80067e0 <__ieee754_atan2+0x168>)
 80067c4:	e9d1 0100 	ldrd	r0, r1, [r1]
 80067c8:	e777      	b.n	80066ba <__ieee754_atan2+0x42>
 80067ca:	bf00      	nop
 80067cc:	f3af 8000 	nop.w
 80067d0:	33145c07 	.word	0x33145c07
 80067d4:	3ca1a626 	.word	0x3ca1a626
 80067d8:	54442d18 	.word	0x54442d18
 80067dc:	400921fb 	.word	0x400921fb
 80067e0:	54442d18 	.word	0x54442d18
 80067e4:	3ff921fb 	.word	0x3ff921fb
 80067e8:	54442d18 	.word	0x54442d18
 80067ec:	3fe921fb 	.word	0x3fe921fb
 80067f0:	08008228 	.word	0x08008228
 80067f4:	08008240 	.word	0x08008240
 80067f8:	54442d18 	.word	0x54442d18
 80067fc:	c00921fb 	.word	0xc00921fb
 8006800:	54442d18 	.word	0x54442d18
 8006804:	bff921fb 	.word	0xbff921fb
 8006808:	7ff00000 	.word	0x7ff00000
 800680c:	00000000 	.word	0x00000000

08006810 <__ieee754_rem_pio2>:
 8006810:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006814:	ed2d 8b02 	vpush	{d8}
 8006818:	ec55 4b10 	vmov	r4, r5, d0
 800681c:	4bca      	ldr	r3, [pc, #808]	; (8006b48 <__ieee754_rem_pio2+0x338>)
 800681e:	b08b      	sub	sp, #44	; 0x2c
 8006820:	f025 4800 	bic.w	r8, r5, #2147483648	; 0x80000000
 8006824:	4598      	cmp	r8, r3
 8006826:	4682      	mov	sl, r0
 8006828:	9502      	str	r5, [sp, #8]
 800682a:	dc08      	bgt.n	800683e <__ieee754_rem_pio2+0x2e>
 800682c:	2200      	movs	r2, #0
 800682e:	2300      	movs	r3, #0
 8006830:	ed80 0b00 	vstr	d0, [r0]
 8006834:	e9c0 2302 	strd	r2, r3, [r0, #8]
 8006838:	f04f 0b00 	mov.w	fp, #0
 800683c:	e028      	b.n	8006890 <__ieee754_rem_pio2+0x80>
 800683e:	4bc3      	ldr	r3, [pc, #780]	; (8006b4c <__ieee754_rem_pio2+0x33c>)
 8006840:	4598      	cmp	r8, r3
 8006842:	dc78      	bgt.n	8006936 <__ieee754_rem_pio2+0x126>
 8006844:	9b02      	ldr	r3, [sp, #8]
 8006846:	4ec2      	ldr	r6, [pc, #776]	; (8006b50 <__ieee754_rem_pio2+0x340>)
 8006848:	2b00      	cmp	r3, #0
 800684a:	ee10 0a10 	vmov	r0, s0
 800684e:	a3b0      	add	r3, pc, #704	; (adr r3, 8006b10 <__ieee754_rem_pio2+0x300>)
 8006850:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006854:	4629      	mov	r1, r5
 8006856:	dd39      	ble.n	80068cc <__ieee754_rem_pio2+0xbc>
 8006858:	f7f9 fd1e 	bl	8000298 <__aeabi_dsub>
 800685c:	45b0      	cmp	r8, r6
 800685e:	4604      	mov	r4, r0
 8006860:	460d      	mov	r5, r1
 8006862:	d01b      	beq.n	800689c <__ieee754_rem_pio2+0x8c>
 8006864:	a3ac      	add	r3, pc, #688	; (adr r3, 8006b18 <__ieee754_rem_pio2+0x308>)
 8006866:	e9d3 2300 	ldrd	r2, r3, [r3]
 800686a:	f7f9 fd15 	bl	8000298 <__aeabi_dsub>
 800686e:	4602      	mov	r2, r0
 8006870:	460b      	mov	r3, r1
 8006872:	e9ca 2300 	strd	r2, r3, [sl]
 8006876:	4620      	mov	r0, r4
 8006878:	4629      	mov	r1, r5
 800687a:	f7f9 fd0d 	bl	8000298 <__aeabi_dsub>
 800687e:	a3a6      	add	r3, pc, #664	; (adr r3, 8006b18 <__ieee754_rem_pio2+0x308>)
 8006880:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006884:	f7f9 fd08 	bl	8000298 <__aeabi_dsub>
 8006888:	e9ca 0102 	strd	r0, r1, [sl, #8]
 800688c:	f04f 0b01 	mov.w	fp, #1
 8006890:	4658      	mov	r0, fp
 8006892:	b00b      	add	sp, #44	; 0x2c
 8006894:	ecbd 8b02 	vpop	{d8}
 8006898:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800689c:	a3a0      	add	r3, pc, #640	; (adr r3, 8006b20 <__ieee754_rem_pio2+0x310>)
 800689e:	e9d3 2300 	ldrd	r2, r3, [r3]
 80068a2:	f7f9 fcf9 	bl	8000298 <__aeabi_dsub>
 80068a6:	a3a0      	add	r3, pc, #640	; (adr r3, 8006b28 <__ieee754_rem_pio2+0x318>)
 80068a8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80068ac:	4604      	mov	r4, r0
 80068ae:	460d      	mov	r5, r1
 80068b0:	f7f9 fcf2 	bl	8000298 <__aeabi_dsub>
 80068b4:	4602      	mov	r2, r0
 80068b6:	460b      	mov	r3, r1
 80068b8:	e9ca 2300 	strd	r2, r3, [sl]
 80068bc:	4620      	mov	r0, r4
 80068be:	4629      	mov	r1, r5
 80068c0:	f7f9 fcea 	bl	8000298 <__aeabi_dsub>
 80068c4:	a398      	add	r3, pc, #608	; (adr r3, 8006b28 <__ieee754_rem_pio2+0x318>)
 80068c6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80068ca:	e7db      	b.n	8006884 <__ieee754_rem_pio2+0x74>
 80068cc:	f7f9 fce6 	bl	800029c <__adddf3>
 80068d0:	45b0      	cmp	r8, r6
 80068d2:	4604      	mov	r4, r0
 80068d4:	460d      	mov	r5, r1
 80068d6:	d016      	beq.n	8006906 <__ieee754_rem_pio2+0xf6>
 80068d8:	a38f      	add	r3, pc, #572	; (adr r3, 8006b18 <__ieee754_rem_pio2+0x308>)
 80068da:	e9d3 2300 	ldrd	r2, r3, [r3]
 80068de:	f7f9 fcdd 	bl	800029c <__adddf3>
 80068e2:	4602      	mov	r2, r0
 80068e4:	460b      	mov	r3, r1
 80068e6:	e9ca 2300 	strd	r2, r3, [sl]
 80068ea:	4620      	mov	r0, r4
 80068ec:	4629      	mov	r1, r5
 80068ee:	f7f9 fcd3 	bl	8000298 <__aeabi_dsub>
 80068f2:	a389      	add	r3, pc, #548	; (adr r3, 8006b18 <__ieee754_rem_pio2+0x308>)
 80068f4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80068f8:	f7f9 fcd0 	bl	800029c <__adddf3>
 80068fc:	f04f 3bff 	mov.w	fp, #4294967295
 8006900:	e9ca 0102 	strd	r0, r1, [sl, #8]
 8006904:	e7c4      	b.n	8006890 <__ieee754_rem_pio2+0x80>
 8006906:	a386      	add	r3, pc, #536	; (adr r3, 8006b20 <__ieee754_rem_pio2+0x310>)
 8006908:	e9d3 2300 	ldrd	r2, r3, [r3]
 800690c:	f7f9 fcc6 	bl	800029c <__adddf3>
 8006910:	a385      	add	r3, pc, #532	; (adr r3, 8006b28 <__ieee754_rem_pio2+0x318>)
 8006912:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006916:	4604      	mov	r4, r0
 8006918:	460d      	mov	r5, r1
 800691a:	f7f9 fcbf 	bl	800029c <__adddf3>
 800691e:	4602      	mov	r2, r0
 8006920:	460b      	mov	r3, r1
 8006922:	e9ca 2300 	strd	r2, r3, [sl]
 8006926:	4620      	mov	r0, r4
 8006928:	4629      	mov	r1, r5
 800692a:	f7f9 fcb5 	bl	8000298 <__aeabi_dsub>
 800692e:	a37e      	add	r3, pc, #504	; (adr r3, 8006b28 <__ieee754_rem_pio2+0x318>)
 8006930:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006934:	e7e0      	b.n	80068f8 <__ieee754_rem_pio2+0xe8>
 8006936:	4b87      	ldr	r3, [pc, #540]	; (8006b54 <__ieee754_rem_pio2+0x344>)
 8006938:	4598      	cmp	r8, r3
 800693a:	f300 80d9 	bgt.w	8006af0 <__ieee754_rem_pio2+0x2e0>
 800693e:	f000 ffdb 	bl	80078f8 <fabs>
 8006942:	ec55 4b10 	vmov	r4, r5, d0
 8006946:	ee10 0a10 	vmov	r0, s0
 800694a:	a379      	add	r3, pc, #484	; (adr r3, 8006b30 <__ieee754_rem_pio2+0x320>)
 800694c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006950:	4629      	mov	r1, r5
 8006952:	f7f9 fe59 	bl	8000608 <__aeabi_dmul>
 8006956:	4b80      	ldr	r3, [pc, #512]	; (8006b58 <__ieee754_rem_pio2+0x348>)
 8006958:	2200      	movs	r2, #0
 800695a:	f7f9 fc9f 	bl	800029c <__adddf3>
 800695e:	f7fa f903 	bl	8000b68 <__aeabi_d2iz>
 8006962:	4683      	mov	fp, r0
 8006964:	f7f9 fde6 	bl	8000534 <__aeabi_i2d>
 8006968:	4602      	mov	r2, r0
 800696a:	460b      	mov	r3, r1
 800696c:	ec43 2b18 	vmov	d8, r2, r3
 8006970:	a367      	add	r3, pc, #412	; (adr r3, 8006b10 <__ieee754_rem_pio2+0x300>)
 8006972:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006976:	f7f9 fe47 	bl	8000608 <__aeabi_dmul>
 800697a:	4602      	mov	r2, r0
 800697c:	460b      	mov	r3, r1
 800697e:	4620      	mov	r0, r4
 8006980:	4629      	mov	r1, r5
 8006982:	f7f9 fc89 	bl	8000298 <__aeabi_dsub>
 8006986:	a364      	add	r3, pc, #400	; (adr r3, 8006b18 <__ieee754_rem_pio2+0x308>)
 8006988:	e9d3 2300 	ldrd	r2, r3, [r3]
 800698c:	4606      	mov	r6, r0
 800698e:	460f      	mov	r7, r1
 8006990:	ec51 0b18 	vmov	r0, r1, d8
 8006994:	f7f9 fe38 	bl	8000608 <__aeabi_dmul>
 8006998:	f1bb 0f1f 	cmp.w	fp, #31
 800699c:	4604      	mov	r4, r0
 800699e:	460d      	mov	r5, r1
 80069a0:	dc0d      	bgt.n	80069be <__ieee754_rem_pio2+0x1ae>
 80069a2:	4b6e      	ldr	r3, [pc, #440]	; (8006b5c <__ieee754_rem_pio2+0x34c>)
 80069a4:	f10b 32ff 	add.w	r2, fp, #4294967295
 80069a8:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80069ac:	4543      	cmp	r3, r8
 80069ae:	d006      	beq.n	80069be <__ieee754_rem_pio2+0x1ae>
 80069b0:	4622      	mov	r2, r4
 80069b2:	462b      	mov	r3, r5
 80069b4:	4630      	mov	r0, r6
 80069b6:	4639      	mov	r1, r7
 80069b8:	f7f9 fc6e 	bl	8000298 <__aeabi_dsub>
 80069bc:	e00f      	b.n	80069de <__ieee754_rem_pio2+0x1ce>
 80069be:	462b      	mov	r3, r5
 80069c0:	4622      	mov	r2, r4
 80069c2:	4630      	mov	r0, r6
 80069c4:	4639      	mov	r1, r7
 80069c6:	f7f9 fc67 	bl	8000298 <__aeabi_dsub>
 80069ca:	ea4f 5328 	mov.w	r3, r8, asr #20
 80069ce:	9303      	str	r3, [sp, #12]
 80069d0:	f3c1 530a 	ubfx	r3, r1, #20, #11
 80069d4:	ebc3 5818 	rsb	r8, r3, r8, lsr #20
 80069d8:	f1b8 0f10 	cmp.w	r8, #16
 80069dc:	dc02      	bgt.n	80069e4 <__ieee754_rem_pio2+0x1d4>
 80069de:	e9ca 0100 	strd	r0, r1, [sl]
 80069e2:	e039      	b.n	8006a58 <__ieee754_rem_pio2+0x248>
 80069e4:	a34e      	add	r3, pc, #312	; (adr r3, 8006b20 <__ieee754_rem_pio2+0x310>)
 80069e6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80069ea:	ec51 0b18 	vmov	r0, r1, d8
 80069ee:	f7f9 fe0b 	bl	8000608 <__aeabi_dmul>
 80069f2:	4604      	mov	r4, r0
 80069f4:	460d      	mov	r5, r1
 80069f6:	4602      	mov	r2, r0
 80069f8:	460b      	mov	r3, r1
 80069fa:	4630      	mov	r0, r6
 80069fc:	4639      	mov	r1, r7
 80069fe:	f7f9 fc4b 	bl	8000298 <__aeabi_dsub>
 8006a02:	4602      	mov	r2, r0
 8006a04:	460b      	mov	r3, r1
 8006a06:	4680      	mov	r8, r0
 8006a08:	4689      	mov	r9, r1
 8006a0a:	4630      	mov	r0, r6
 8006a0c:	4639      	mov	r1, r7
 8006a0e:	f7f9 fc43 	bl	8000298 <__aeabi_dsub>
 8006a12:	4622      	mov	r2, r4
 8006a14:	462b      	mov	r3, r5
 8006a16:	f7f9 fc3f 	bl	8000298 <__aeabi_dsub>
 8006a1a:	a343      	add	r3, pc, #268	; (adr r3, 8006b28 <__ieee754_rem_pio2+0x318>)
 8006a1c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006a20:	4604      	mov	r4, r0
 8006a22:	460d      	mov	r5, r1
 8006a24:	ec51 0b18 	vmov	r0, r1, d8
 8006a28:	f7f9 fdee 	bl	8000608 <__aeabi_dmul>
 8006a2c:	4622      	mov	r2, r4
 8006a2e:	462b      	mov	r3, r5
 8006a30:	f7f9 fc32 	bl	8000298 <__aeabi_dsub>
 8006a34:	4602      	mov	r2, r0
 8006a36:	460b      	mov	r3, r1
 8006a38:	4604      	mov	r4, r0
 8006a3a:	460d      	mov	r5, r1
 8006a3c:	4640      	mov	r0, r8
 8006a3e:	4649      	mov	r1, r9
 8006a40:	f7f9 fc2a 	bl	8000298 <__aeabi_dsub>
 8006a44:	9a03      	ldr	r2, [sp, #12]
 8006a46:	f3c1 530a 	ubfx	r3, r1, #20, #11
 8006a4a:	1ad3      	subs	r3, r2, r3
 8006a4c:	2b31      	cmp	r3, #49	; 0x31
 8006a4e:	dc24      	bgt.n	8006a9a <__ieee754_rem_pio2+0x28a>
 8006a50:	e9ca 0100 	strd	r0, r1, [sl]
 8006a54:	4646      	mov	r6, r8
 8006a56:	464f      	mov	r7, r9
 8006a58:	e9da 8900 	ldrd	r8, r9, [sl]
 8006a5c:	4630      	mov	r0, r6
 8006a5e:	4642      	mov	r2, r8
 8006a60:	464b      	mov	r3, r9
 8006a62:	4639      	mov	r1, r7
 8006a64:	f7f9 fc18 	bl	8000298 <__aeabi_dsub>
 8006a68:	462b      	mov	r3, r5
 8006a6a:	4622      	mov	r2, r4
 8006a6c:	f7f9 fc14 	bl	8000298 <__aeabi_dsub>
 8006a70:	9b02      	ldr	r3, [sp, #8]
 8006a72:	2b00      	cmp	r3, #0
 8006a74:	e9ca 0102 	strd	r0, r1, [sl, #8]
 8006a78:	f6bf af0a 	bge.w	8006890 <__ieee754_rem_pio2+0x80>
 8006a7c:	f109 4300 	add.w	r3, r9, #2147483648	; 0x80000000
 8006a80:	f8ca 3004 	str.w	r3, [sl, #4]
 8006a84:	f8ca 8000 	str.w	r8, [sl]
 8006a88:	f8ca 0008 	str.w	r0, [sl, #8]
 8006a8c:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8006a90:	f8ca 300c 	str.w	r3, [sl, #12]
 8006a94:	f1cb 0b00 	rsb	fp, fp, #0
 8006a98:	e6fa      	b.n	8006890 <__ieee754_rem_pio2+0x80>
 8006a9a:	a327      	add	r3, pc, #156	; (adr r3, 8006b38 <__ieee754_rem_pio2+0x328>)
 8006a9c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006aa0:	ec51 0b18 	vmov	r0, r1, d8
 8006aa4:	f7f9 fdb0 	bl	8000608 <__aeabi_dmul>
 8006aa8:	4604      	mov	r4, r0
 8006aaa:	460d      	mov	r5, r1
 8006aac:	4602      	mov	r2, r0
 8006aae:	460b      	mov	r3, r1
 8006ab0:	4640      	mov	r0, r8
 8006ab2:	4649      	mov	r1, r9
 8006ab4:	f7f9 fbf0 	bl	8000298 <__aeabi_dsub>
 8006ab8:	4602      	mov	r2, r0
 8006aba:	460b      	mov	r3, r1
 8006abc:	4606      	mov	r6, r0
 8006abe:	460f      	mov	r7, r1
 8006ac0:	4640      	mov	r0, r8
 8006ac2:	4649      	mov	r1, r9
 8006ac4:	f7f9 fbe8 	bl	8000298 <__aeabi_dsub>
 8006ac8:	4622      	mov	r2, r4
 8006aca:	462b      	mov	r3, r5
 8006acc:	f7f9 fbe4 	bl	8000298 <__aeabi_dsub>
 8006ad0:	a31b      	add	r3, pc, #108	; (adr r3, 8006b40 <__ieee754_rem_pio2+0x330>)
 8006ad2:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006ad6:	4604      	mov	r4, r0
 8006ad8:	460d      	mov	r5, r1
 8006ada:	ec51 0b18 	vmov	r0, r1, d8
 8006ade:	f7f9 fd93 	bl	8000608 <__aeabi_dmul>
 8006ae2:	4622      	mov	r2, r4
 8006ae4:	462b      	mov	r3, r5
 8006ae6:	f7f9 fbd7 	bl	8000298 <__aeabi_dsub>
 8006aea:	4604      	mov	r4, r0
 8006aec:	460d      	mov	r5, r1
 8006aee:	e75f      	b.n	80069b0 <__ieee754_rem_pio2+0x1a0>
 8006af0:	4b1b      	ldr	r3, [pc, #108]	; (8006b60 <__ieee754_rem_pio2+0x350>)
 8006af2:	4598      	cmp	r8, r3
 8006af4:	dd36      	ble.n	8006b64 <__ieee754_rem_pio2+0x354>
 8006af6:	ee10 2a10 	vmov	r2, s0
 8006afa:	462b      	mov	r3, r5
 8006afc:	4620      	mov	r0, r4
 8006afe:	4629      	mov	r1, r5
 8006b00:	f7f9 fbca 	bl	8000298 <__aeabi_dsub>
 8006b04:	e9ca 0102 	strd	r0, r1, [sl, #8]
 8006b08:	e9ca 0100 	strd	r0, r1, [sl]
 8006b0c:	e694      	b.n	8006838 <__ieee754_rem_pio2+0x28>
 8006b0e:	bf00      	nop
 8006b10:	54400000 	.word	0x54400000
 8006b14:	3ff921fb 	.word	0x3ff921fb
 8006b18:	1a626331 	.word	0x1a626331
 8006b1c:	3dd0b461 	.word	0x3dd0b461
 8006b20:	1a600000 	.word	0x1a600000
 8006b24:	3dd0b461 	.word	0x3dd0b461
 8006b28:	2e037073 	.word	0x2e037073
 8006b2c:	3ba3198a 	.word	0x3ba3198a
 8006b30:	6dc9c883 	.word	0x6dc9c883
 8006b34:	3fe45f30 	.word	0x3fe45f30
 8006b38:	2e000000 	.word	0x2e000000
 8006b3c:	3ba3198a 	.word	0x3ba3198a
 8006b40:	252049c1 	.word	0x252049c1
 8006b44:	397b839a 	.word	0x397b839a
 8006b48:	3fe921fb 	.word	0x3fe921fb
 8006b4c:	4002d97b 	.word	0x4002d97b
 8006b50:	3ff921fb 	.word	0x3ff921fb
 8006b54:	413921fb 	.word	0x413921fb
 8006b58:	3fe00000 	.word	0x3fe00000
 8006b5c:	08008258 	.word	0x08008258
 8006b60:	7fefffff 	.word	0x7fefffff
 8006b64:	ea4f 5428 	mov.w	r4, r8, asr #20
 8006b68:	f2a4 4416 	subw	r4, r4, #1046	; 0x416
 8006b6c:	ee10 0a10 	vmov	r0, s0
 8006b70:	eba8 5104 	sub.w	r1, r8, r4, lsl #20
 8006b74:	ee10 6a10 	vmov	r6, s0
 8006b78:	460f      	mov	r7, r1
 8006b7a:	f7f9 fff5 	bl	8000b68 <__aeabi_d2iz>
 8006b7e:	f7f9 fcd9 	bl	8000534 <__aeabi_i2d>
 8006b82:	4602      	mov	r2, r0
 8006b84:	460b      	mov	r3, r1
 8006b86:	4630      	mov	r0, r6
 8006b88:	4639      	mov	r1, r7
 8006b8a:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8006b8e:	f7f9 fb83 	bl	8000298 <__aeabi_dsub>
 8006b92:	4b22      	ldr	r3, [pc, #136]	; (8006c1c <__ieee754_rem_pio2+0x40c>)
 8006b94:	2200      	movs	r2, #0
 8006b96:	f7f9 fd37 	bl	8000608 <__aeabi_dmul>
 8006b9a:	460f      	mov	r7, r1
 8006b9c:	4606      	mov	r6, r0
 8006b9e:	f7f9 ffe3 	bl	8000b68 <__aeabi_d2iz>
 8006ba2:	f7f9 fcc7 	bl	8000534 <__aeabi_i2d>
 8006ba6:	4602      	mov	r2, r0
 8006ba8:	460b      	mov	r3, r1
 8006baa:	4630      	mov	r0, r6
 8006bac:	4639      	mov	r1, r7
 8006bae:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8006bb2:	f7f9 fb71 	bl	8000298 <__aeabi_dsub>
 8006bb6:	4b19      	ldr	r3, [pc, #100]	; (8006c1c <__ieee754_rem_pio2+0x40c>)
 8006bb8:	2200      	movs	r2, #0
 8006bba:	f7f9 fd25 	bl	8000608 <__aeabi_dmul>
 8006bbe:	e9cd 0108 	strd	r0, r1, [sp, #32]
 8006bc2:	ad04      	add	r5, sp, #16
 8006bc4:	f04f 0803 	mov.w	r8, #3
 8006bc8:	46a9      	mov	r9, r5
 8006bca:	2600      	movs	r6, #0
 8006bcc:	2700      	movs	r7, #0
 8006bce:	4632      	mov	r2, r6
 8006bd0:	463b      	mov	r3, r7
 8006bd2:	e9d5 0104 	ldrd	r0, r1, [r5, #16]
 8006bd6:	46c3      	mov	fp, r8
 8006bd8:	3d08      	subs	r5, #8
 8006bda:	f108 38ff 	add.w	r8, r8, #4294967295
 8006bde:	f7f9 ff7b 	bl	8000ad8 <__aeabi_dcmpeq>
 8006be2:	2800      	cmp	r0, #0
 8006be4:	d1f3      	bne.n	8006bce <__ieee754_rem_pio2+0x3be>
 8006be6:	4b0e      	ldr	r3, [pc, #56]	; (8006c20 <__ieee754_rem_pio2+0x410>)
 8006be8:	9301      	str	r3, [sp, #4]
 8006bea:	2302      	movs	r3, #2
 8006bec:	9300      	str	r3, [sp, #0]
 8006bee:	4622      	mov	r2, r4
 8006bf0:	465b      	mov	r3, fp
 8006bf2:	4651      	mov	r1, sl
 8006bf4:	4648      	mov	r0, r9
 8006bf6:	f000 f8df 	bl	8006db8 <__kernel_rem_pio2>
 8006bfa:	9b02      	ldr	r3, [sp, #8]
 8006bfc:	2b00      	cmp	r3, #0
 8006bfe:	4683      	mov	fp, r0
 8006c00:	f6bf ae46 	bge.w	8006890 <__ieee754_rem_pio2+0x80>
 8006c04:	f8da 3004 	ldr.w	r3, [sl, #4]
 8006c08:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 8006c0c:	f8ca 3004 	str.w	r3, [sl, #4]
 8006c10:	f8da 300c 	ldr.w	r3, [sl, #12]
 8006c14:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 8006c18:	e73a      	b.n	8006a90 <__ieee754_rem_pio2+0x280>
 8006c1a:	bf00      	nop
 8006c1c:	41700000 	.word	0x41700000
 8006c20:	080082d8 	.word	0x080082d8
 8006c24:	00000000 	.word	0x00000000

08006c28 <__kernel_cos>:
 8006c28:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006c2c:	ec57 6b10 	vmov	r6, r7, d0
 8006c30:	f027 4800 	bic.w	r8, r7, #2147483648	; 0x80000000
 8006c34:	f1b8 5f79 	cmp.w	r8, #1044381696	; 0x3e400000
 8006c38:	ed8d 1b00 	vstr	d1, [sp]
 8006c3c:	da07      	bge.n	8006c4e <__kernel_cos+0x26>
 8006c3e:	ee10 0a10 	vmov	r0, s0
 8006c42:	4639      	mov	r1, r7
 8006c44:	f7f9 ff90 	bl	8000b68 <__aeabi_d2iz>
 8006c48:	2800      	cmp	r0, #0
 8006c4a:	f000 8088 	beq.w	8006d5e <__kernel_cos+0x136>
 8006c4e:	4632      	mov	r2, r6
 8006c50:	463b      	mov	r3, r7
 8006c52:	4630      	mov	r0, r6
 8006c54:	4639      	mov	r1, r7
 8006c56:	f7f9 fcd7 	bl	8000608 <__aeabi_dmul>
 8006c5a:	4b51      	ldr	r3, [pc, #324]	; (8006da0 <__kernel_cos+0x178>)
 8006c5c:	2200      	movs	r2, #0
 8006c5e:	4604      	mov	r4, r0
 8006c60:	460d      	mov	r5, r1
 8006c62:	f7f9 fcd1 	bl	8000608 <__aeabi_dmul>
 8006c66:	a340      	add	r3, pc, #256	; (adr r3, 8006d68 <__kernel_cos+0x140>)
 8006c68:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006c6c:	4682      	mov	sl, r0
 8006c6e:	468b      	mov	fp, r1
 8006c70:	4620      	mov	r0, r4
 8006c72:	4629      	mov	r1, r5
 8006c74:	f7f9 fcc8 	bl	8000608 <__aeabi_dmul>
 8006c78:	a33d      	add	r3, pc, #244	; (adr r3, 8006d70 <__kernel_cos+0x148>)
 8006c7a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006c7e:	f7f9 fb0d 	bl	800029c <__adddf3>
 8006c82:	4622      	mov	r2, r4
 8006c84:	462b      	mov	r3, r5
 8006c86:	f7f9 fcbf 	bl	8000608 <__aeabi_dmul>
 8006c8a:	a33b      	add	r3, pc, #236	; (adr r3, 8006d78 <__kernel_cos+0x150>)
 8006c8c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006c90:	f7f9 fb02 	bl	8000298 <__aeabi_dsub>
 8006c94:	4622      	mov	r2, r4
 8006c96:	462b      	mov	r3, r5
 8006c98:	f7f9 fcb6 	bl	8000608 <__aeabi_dmul>
 8006c9c:	a338      	add	r3, pc, #224	; (adr r3, 8006d80 <__kernel_cos+0x158>)
 8006c9e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006ca2:	f7f9 fafb 	bl	800029c <__adddf3>
 8006ca6:	4622      	mov	r2, r4
 8006ca8:	462b      	mov	r3, r5
 8006caa:	f7f9 fcad 	bl	8000608 <__aeabi_dmul>
 8006cae:	a336      	add	r3, pc, #216	; (adr r3, 8006d88 <__kernel_cos+0x160>)
 8006cb0:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006cb4:	f7f9 faf0 	bl	8000298 <__aeabi_dsub>
 8006cb8:	4622      	mov	r2, r4
 8006cba:	462b      	mov	r3, r5
 8006cbc:	f7f9 fca4 	bl	8000608 <__aeabi_dmul>
 8006cc0:	a333      	add	r3, pc, #204	; (adr r3, 8006d90 <__kernel_cos+0x168>)
 8006cc2:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006cc6:	f7f9 fae9 	bl	800029c <__adddf3>
 8006cca:	4622      	mov	r2, r4
 8006ccc:	462b      	mov	r3, r5
 8006cce:	f7f9 fc9b 	bl	8000608 <__aeabi_dmul>
 8006cd2:	4622      	mov	r2, r4
 8006cd4:	462b      	mov	r3, r5
 8006cd6:	f7f9 fc97 	bl	8000608 <__aeabi_dmul>
 8006cda:	e9dd 2300 	ldrd	r2, r3, [sp]
 8006cde:	4604      	mov	r4, r0
 8006ce0:	460d      	mov	r5, r1
 8006ce2:	4630      	mov	r0, r6
 8006ce4:	4639      	mov	r1, r7
 8006ce6:	f7f9 fc8f 	bl	8000608 <__aeabi_dmul>
 8006cea:	460b      	mov	r3, r1
 8006cec:	4602      	mov	r2, r0
 8006cee:	4629      	mov	r1, r5
 8006cf0:	4620      	mov	r0, r4
 8006cf2:	f7f9 fad1 	bl	8000298 <__aeabi_dsub>
 8006cf6:	4b2b      	ldr	r3, [pc, #172]	; (8006da4 <__kernel_cos+0x17c>)
 8006cf8:	4598      	cmp	r8, r3
 8006cfa:	4606      	mov	r6, r0
 8006cfc:	460f      	mov	r7, r1
 8006cfe:	dc10      	bgt.n	8006d22 <__kernel_cos+0xfa>
 8006d00:	4602      	mov	r2, r0
 8006d02:	460b      	mov	r3, r1
 8006d04:	4650      	mov	r0, sl
 8006d06:	4659      	mov	r1, fp
 8006d08:	f7f9 fac6 	bl	8000298 <__aeabi_dsub>
 8006d0c:	460b      	mov	r3, r1
 8006d0e:	4926      	ldr	r1, [pc, #152]	; (8006da8 <__kernel_cos+0x180>)
 8006d10:	4602      	mov	r2, r0
 8006d12:	2000      	movs	r0, #0
 8006d14:	f7f9 fac0 	bl	8000298 <__aeabi_dsub>
 8006d18:	ec41 0b10 	vmov	d0, r0, r1
 8006d1c:	b003      	add	sp, #12
 8006d1e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006d22:	4b22      	ldr	r3, [pc, #136]	; (8006dac <__kernel_cos+0x184>)
 8006d24:	4920      	ldr	r1, [pc, #128]	; (8006da8 <__kernel_cos+0x180>)
 8006d26:	4598      	cmp	r8, r3
 8006d28:	bfcc      	ite	gt
 8006d2a:	4d21      	ldrgt	r5, [pc, #132]	; (8006db0 <__kernel_cos+0x188>)
 8006d2c:	f5a8 1500 	suble.w	r5, r8, #2097152	; 0x200000
 8006d30:	2400      	movs	r4, #0
 8006d32:	4622      	mov	r2, r4
 8006d34:	462b      	mov	r3, r5
 8006d36:	2000      	movs	r0, #0
 8006d38:	f7f9 faae 	bl	8000298 <__aeabi_dsub>
 8006d3c:	4622      	mov	r2, r4
 8006d3e:	4680      	mov	r8, r0
 8006d40:	4689      	mov	r9, r1
 8006d42:	462b      	mov	r3, r5
 8006d44:	4650      	mov	r0, sl
 8006d46:	4659      	mov	r1, fp
 8006d48:	f7f9 faa6 	bl	8000298 <__aeabi_dsub>
 8006d4c:	4632      	mov	r2, r6
 8006d4e:	463b      	mov	r3, r7
 8006d50:	f7f9 faa2 	bl	8000298 <__aeabi_dsub>
 8006d54:	4602      	mov	r2, r0
 8006d56:	460b      	mov	r3, r1
 8006d58:	4640      	mov	r0, r8
 8006d5a:	4649      	mov	r1, r9
 8006d5c:	e7da      	b.n	8006d14 <__kernel_cos+0xec>
 8006d5e:	ed9f 0b0e 	vldr	d0, [pc, #56]	; 8006d98 <__kernel_cos+0x170>
 8006d62:	e7db      	b.n	8006d1c <__kernel_cos+0xf4>
 8006d64:	f3af 8000 	nop.w
 8006d68:	be8838d4 	.word	0xbe8838d4
 8006d6c:	bda8fae9 	.word	0xbda8fae9
 8006d70:	bdb4b1c4 	.word	0xbdb4b1c4
 8006d74:	3e21ee9e 	.word	0x3e21ee9e
 8006d78:	809c52ad 	.word	0x809c52ad
 8006d7c:	3e927e4f 	.word	0x3e927e4f
 8006d80:	19cb1590 	.word	0x19cb1590
 8006d84:	3efa01a0 	.word	0x3efa01a0
 8006d88:	16c15177 	.word	0x16c15177
 8006d8c:	3f56c16c 	.word	0x3f56c16c
 8006d90:	5555554c 	.word	0x5555554c
 8006d94:	3fa55555 	.word	0x3fa55555
 8006d98:	00000000 	.word	0x00000000
 8006d9c:	3ff00000 	.word	0x3ff00000
 8006da0:	3fe00000 	.word	0x3fe00000
 8006da4:	3fd33332 	.word	0x3fd33332
 8006da8:	3ff00000 	.word	0x3ff00000
 8006dac:	3fe90000 	.word	0x3fe90000
 8006db0:	3fd20000 	.word	0x3fd20000
 8006db4:	00000000 	.word	0x00000000

08006db8 <__kernel_rem_pio2>:
 8006db8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006dbc:	ed2d 8b02 	vpush	{d8}
 8006dc0:	f5ad 7d19 	sub.w	sp, sp, #612	; 0x264
 8006dc4:	f112 0f14 	cmn.w	r2, #20
 8006dc8:	9308      	str	r3, [sp, #32]
 8006dca:	9101      	str	r1, [sp, #4]
 8006dcc:	4bc6      	ldr	r3, [pc, #792]	; (80070e8 <__kernel_rem_pio2+0x330>)
 8006dce:	99a4      	ldr	r1, [sp, #656]	; 0x290
 8006dd0:	9009      	str	r0, [sp, #36]	; 0x24
 8006dd2:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 8006dd6:	9304      	str	r3, [sp, #16]
 8006dd8:	9b08      	ldr	r3, [sp, #32]
 8006dda:	f103 33ff 	add.w	r3, r3, #4294967295
 8006dde:	bfa8      	it	ge
 8006de0:	1ed4      	subge	r4, r2, #3
 8006de2:	9306      	str	r3, [sp, #24]
 8006de4:	bfb2      	itee	lt
 8006de6:	2400      	movlt	r4, #0
 8006de8:	2318      	movge	r3, #24
 8006dea:	fb94 f4f3 	sdivge	r4, r4, r3
 8006dee:	f06f 0317 	mvn.w	r3, #23
 8006df2:	fb04 3303 	mla	r3, r4, r3, r3
 8006df6:	eb03 0a02 	add.w	sl, r3, r2
 8006dfa:	9b04      	ldr	r3, [sp, #16]
 8006dfc:	9a06      	ldr	r2, [sp, #24]
 8006dfe:	ed9f 8bb6 	vldr	d8, [pc, #728]	; 80070d8 <__kernel_rem_pio2+0x320>
 8006e02:	eb03 0802 	add.w	r8, r3, r2
 8006e06:	9ba5      	ldr	r3, [sp, #660]	; 0x294
 8006e08:	1aa7      	subs	r7, r4, r2
 8006e0a:	ae20      	add	r6, sp, #128	; 0x80
 8006e0c:	eb03 0987 	add.w	r9, r3, r7, lsl #2
 8006e10:	2500      	movs	r5, #0
 8006e12:	4545      	cmp	r5, r8
 8006e14:	dd18      	ble.n	8006e48 <__kernel_rem_pio2+0x90>
 8006e16:	9b08      	ldr	r3, [sp, #32]
 8006e18:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8006e1c:	aa20      	add	r2, sp, #128	; 0x80
 8006e1e:	ed9f 8bae 	vldr	d8, [pc, #696]	; 80070d8 <__kernel_rem_pio2+0x320>
 8006e22:	eb02 05c3 	add.w	r5, r2, r3, lsl #3
 8006e26:	f1c3 0301 	rsb	r3, r3, #1
 8006e2a:	f50d 7be0 	add.w	fp, sp, #448	; 0x1c0
 8006e2e:	9307      	str	r3, [sp, #28]
 8006e30:	9b07      	ldr	r3, [sp, #28]
 8006e32:	9a04      	ldr	r2, [sp, #16]
 8006e34:	4443      	add	r3, r8
 8006e36:	429a      	cmp	r2, r3
 8006e38:	db2f      	blt.n	8006e9a <__kernel_rem_pio2+0xe2>
 8006e3a:	ed8d 8b02 	vstr	d8, [sp, #8]
 8006e3e:	f8dd 9024 	ldr.w	r9, [sp, #36]	; 0x24
 8006e42:	462f      	mov	r7, r5
 8006e44:	2600      	movs	r6, #0
 8006e46:	e01b      	b.n	8006e80 <__kernel_rem_pio2+0xc8>
 8006e48:	42ef      	cmn	r7, r5
 8006e4a:	d407      	bmi.n	8006e5c <__kernel_rem_pio2+0xa4>
 8006e4c:	f859 0025 	ldr.w	r0, [r9, r5, lsl #2]
 8006e50:	f7f9 fb70 	bl	8000534 <__aeabi_i2d>
 8006e54:	e8e6 0102 	strd	r0, r1, [r6], #8
 8006e58:	3501      	adds	r5, #1
 8006e5a:	e7da      	b.n	8006e12 <__kernel_rem_pio2+0x5a>
 8006e5c:	ec51 0b18 	vmov	r0, r1, d8
 8006e60:	e7f8      	b.n	8006e54 <__kernel_rem_pio2+0x9c>
 8006e62:	e9d7 2300 	ldrd	r2, r3, [r7]
 8006e66:	e8f9 0102 	ldrd	r0, r1, [r9], #8
 8006e6a:	f7f9 fbcd 	bl	8000608 <__aeabi_dmul>
 8006e6e:	4602      	mov	r2, r0
 8006e70:	460b      	mov	r3, r1
 8006e72:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8006e76:	f7f9 fa11 	bl	800029c <__adddf3>
 8006e7a:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8006e7e:	3601      	adds	r6, #1
 8006e80:	9b06      	ldr	r3, [sp, #24]
 8006e82:	429e      	cmp	r6, r3
 8006e84:	f1a7 0708 	sub.w	r7, r7, #8
 8006e88:	ddeb      	ble.n	8006e62 <__kernel_rem_pio2+0xaa>
 8006e8a:	ed9d 7b02 	vldr	d7, [sp, #8]
 8006e8e:	3508      	adds	r5, #8
 8006e90:	ecab 7b02 	vstmia	fp!, {d7}
 8006e94:	f108 0801 	add.w	r8, r8, #1
 8006e98:	e7ca      	b.n	8006e30 <__kernel_rem_pio2+0x78>
 8006e9a:	9b04      	ldr	r3, [sp, #16]
 8006e9c:	aa0c      	add	r2, sp, #48	; 0x30
 8006e9e:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8006ea2:	930b      	str	r3, [sp, #44]	; 0x2c
 8006ea4:	9ba5      	ldr	r3, [sp, #660]	; 0x294
 8006ea6:	eb03 0384 	add.w	r3, r3, r4, lsl #2
 8006eaa:	9c04      	ldr	r4, [sp, #16]
 8006eac:	930a      	str	r3, [sp, #40]	; 0x28
 8006eae:	ab98      	add	r3, sp, #608	; 0x260
 8006eb0:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8006eb4:	e953 6728 	ldrd	r6, r7, [r3, #-160]	; 0xa0
 8006eb8:	f10d 0b30 	add.w	fp, sp, #48	; 0x30
 8006ebc:	f8cd b008 	str.w	fp, [sp, #8]
 8006ec0:	4625      	mov	r5, r4
 8006ec2:	2d00      	cmp	r5, #0
 8006ec4:	dc78      	bgt.n	8006fb8 <__kernel_rem_pio2+0x200>
 8006ec6:	ec47 6b10 	vmov	d0, r6, r7
 8006eca:	4650      	mov	r0, sl
 8006ecc:	f000 fda0 	bl	8007a10 <scalbn>
 8006ed0:	ec57 6b10 	vmov	r6, r7, d0
 8006ed4:	2200      	movs	r2, #0
 8006ed6:	f04f 537f 	mov.w	r3, #1069547520	; 0x3fc00000
 8006eda:	ee10 0a10 	vmov	r0, s0
 8006ede:	4639      	mov	r1, r7
 8006ee0:	f7f9 fb92 	bl	8000608 <__aeabi_dmul>
 8006ee4:	ec41 0b10 	vmov	d0, r0, r1
 8006ee8:	f000 fd12 	bl	8007910 <floor>
 8006eec:	4b7f      	ldr	r3, [pc, #508]	; (80070ec <__kernel_rem_pio2+0x334>)
 8006eee:	ec51 0b10 	vmov	r0, r1, d0
 8006ef2:	2200      	movs	r2, #0
 8006ef4:	f7f9 fb88 	bl	8000608 <__aeabi_dmul>
 8006ef8:	4602      	mov	r2, r0
 8006efa:	460b      	mov	r3, r1
 8006efc:	4630      	mov	r0, r6
 8006efe:	4639      	mov	r1, r7
 8006f00:	f7f9 f9ca 	bl	8000298 <__aeabi_dsub>
 8006f04:	460f      	mov	r7, r1
 8006f06:	4606      	mov	r6, r0
 8006f08:	f7f9 fe2e 	bl	8000b68 <__aeabi_d2iz>
 8006f0c:	9007      	str	r0, [sp, #28]
 8006f0e:	f7f9 fb11 	bl	8000534 <__aeabi_i2d>
 8006f12:	4602      	mov	r2, r0
 8006f14:	460b      	mov	r3, r1
 8006f16:	4630      	mov	r0, r6
 8006f18:	4639      	mov	r1, r7
 8006f1a:	f7f9 f9bd 	bl	8000298 <__aeabi_dsub>
 8006f1e:	f1ba 0f00 	cmp.w	sl, #0
 8006f22:	4606      	mov	r6, r0
 8006f24:	460f      	mov	r7, r1
 8006f26:	dd70      	ble.n	800700a <__kernel_rem_pio2+0x252>
 8006f28:	1e62      	subs	r2, r4, #1
 8006f2a:	ab0c      	add	r3, sp, #48	; 0x30
 8006f2c:	9d07      	ldr	r5, [sp, #28]
 8006f2e:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8006f32:	f1ca 0118 	rsb	r1, sl, #24
 8006f36:	fa40 f301 	asr.w	r3, r0, r1
 8006f3a:	441d      	add	r5, r3
 8006f3c:	408b      	lsls	r3, r1
 8006f3e:	1ac0      	subs	r0, r0, r3
 8006f40:	ab0c      	add	r3, sp, #48	; 0x30
 8006f42:	9507      	str	r5, [sp, #28]
 8006f44:	f843 0022 	str.w	r0, [r3, r2, lsl #2]
 8006f48:	f1ca 0317 	rsb	r3, sl, #23
 8006f4c:	fa40 f303 	asr.w	r3, r0, r3
 8006f50:	9302      	str	r3, [sp, #8]
 8006f52:	9b02      	ldr	r3, [sp, #8]
 8006f54:	2b00      	cmp	r3, #0
 8006f56:	dd66      	ble.n	8007026 <__kernel_rem_pio2+0x26e>
 8006f58:	9b07      	ldr	r3, [sp, #28]
 8006f5a:	2200      	movs	r2, #0
 8006f5c:	3301      	adds	r3, #1
 8006f5e:	9307      	str	r3, [sp, #28]
 8006f60:	4615      	mov	r5, r2
 8006f62:	f06f 417f 	mvn.w	r1, #4278190080	; 0xff000000
 8006f66:	4294      	cmp	r4, r2
 8006f68:	f300 8099 	bgt.w	800709e <__kernel_rem_pio2+0x2e6>
 8006f6c:	f1ba 0f00 	cmp.w	sl, #0
 8006f70:	dd07      	ble.n	8006f82 <__kernel_rem_pio2+0x1ca>
 8006f72:	f1ba 0f01 	cmp.w	sl, #1
 8006f76:	f000 80a5 	beq.w	80070c4 <__kernel_rem_pio2+0x30c>
 8006f7a:	f1ba 0f02 	cmp.w	sl, #2
 8006f7e:	f000 80c1 	beq.w	8007104 <__kernel_rem_pio2+0x34c>
 8006f82:	9b02      	ldr	r3, [sp, #8]
 8006f84:	2b02      	cmp	r3, #2
 8006f86:	d14e      	bne.n	8007026 <__kernel_rem_pio2+0x26e>
 8006f88:	4632      	mov	r2, r6
 8006f8a:	463b      	mov	r3, r7
 8006f8c:	4958      	ldr	r1, [pc, #352]	; (80070f0 <__kernel_rem_pio2+0x338>)
 8006f8e:	2000      	movs	r0, #0
 8006f90:	f7f9 f982 	bl	8000298 <__aeabi_dsub>
 8006f94:	4606      	mov	r6, r0
 8006f96:	460f      	mov	r7, r1
 8006f98:	2d00      	cmp	r5, #0
 8006f9a:	d044      	beq.n	8007026 <__kernel_rem_pio2+0x26e>
 8006f9c:	4650      	mov	r0, sl
 8006f9e:	ed9f 0b50 	vldr	d0, [pc, #320]	; 80070e0 <__kernel_rem_pio2+0x328>
 8006fa2:	f000 fd35 	bl	8007a10 <scalbn>
 8006fa6:	4630      	mov	r0, r6
 8006fa8:	4639      	mov	r1, r7
 8006faa:	ec53 2b10 	vmov	r2, r3, d0
 8006fae:	f7f9 f973 	bl	8000298 <__aeabi_dsub>
 8006fb2:	4606      	mov	r6, r0
 8006fb4:	460f      	mov	r7, r1
 8006fb6:	e036      	b.n	8007026 <__kernel_rem_pio2+0x26e>
 8006fb8:	4b4e      	ldr	r3, [pc, #312]	; (80070f4 <__kernel_rem_pio2+0x33c>)
 8006fba:	2200      	movs	r2, #0
 8006fbc:	4630      	mov	r0, r6
 8006fbe:	4639      	mov	r1, r7
 8006fc0:	f7f9 fb22 	bl	8000608 <__aeabi_dmul>
 8006fc4:	f7f9 fdd0 	bl	8000b68 <__aeabi_d2iz>
 8006fc8:	f7f9 fab4 	bl	8000534 <__aeabi_i2d>
 8006fcc:	4b4a      	ldr	r3, [pc, #296]	; (80070f8 <__kernel_rem_pio2+0x340>)
 8006fce:	2200      	movs	r2, #0
 8006fd0:	4680      	mov	r8, r0
 8006fd2:	4689      	mov	r9, r1
 8006fd4:	f7f9 fb18 	bl	8000608 <__aeabi_dmul>
 8006fd8:	4602      	mov	r2, r0
 8006fda:	460b      	mov	r3, r1
 8006fdc:	4630      	mov	r0, r6
 8006fde:	4639      	mov	r1, r7
 8006fe0:	f7f9 f95a 	bl	8000298 <__aeabi_dsub>
 8006fe4:	f7f9 fdc0 	bl	8000b68 <__aeabi_d2iz>
 8006fe8:	9b02      	ldr	r3, [sp, #8]
 8006fea:	f843 0b04 	str.w	r0, [r3], #4
 8006fee:	3d01      	subs	r5, #1
 8006ff0:	9302      	str	r3, [sp, #8]
 8006ff2:	ab70      	add	r3, sp, #448	; 0x1c0
 8006ff4:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8006ff8:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006ffc:	4640      	mov	r0, r8
 8006ffe:	4649      	mov	r1, r9
 8007000:	f7f9 f94c 	bl	800029c <__adddf3>
 8007004:	4606      	mov	r6, r0
 8007006:	460f      	mov	r7, r1
 8007008:	e75b      	b.n	8006ec2 <__kernel_rem_pio2+0x10a>
 800700a:	d105      	bne.n	8007018 <__kernel_rem_pio2+0x260>
 800700c:	1e63      	subs	r3, r4, #1
 800700e:	aa0c      	add	r2, sp, #48	; 0x30
 8007010:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8007014:	15c3      	asrs	r3, r0, #23
 8007016:	e79b      	b.n	8006f50 <__kernel_rem_pio2+0x198>
 8007018:	4b38      	ldr	r3, [pc, #224]	; (80070fc <__kernel_rem_pio2+0x344>)
 800701a:	2200      	movs	r2, #0
 800701c:	f7f9 fd7a 	bl	8000b14 <__aeabi_dcmpge>
 8007020:	2800      	cmp	r0, #0
 8007022:	d139      	bne.n	8007098 <__kernel_rem_pio2+0x2e0>
 8007024:	9002      	str	r0, [sp, #8]
 8007026:	2200      	movs	r2, #0
 8007028:	2300      	movs	r3, #0
 800702a:	4630      	mov	r0, r6
 800702c:	4639      	mov	r1, r7
 800702e:	f7f9 fd53 	bl	8000ad8 <__aeabi_dcmpeq>
 8007032:	2800      	cmp	r0, #0
 8007034:	f000 80b4 	beq.w	80071a0 <__kernel_rem_pio2+0x3e8>
 8007038:	f104 3bff 	add.w	fp, r4, #4294967295
 800703c:	465b      	mov	r3, fp
 800703e:	2200      	movs	r2, #0
 8007040:	9904      	ldr	r1, [sp, #16]
 8007042:	428b      	cmp	r3, r1
 8007044:	da65      	bge.n	8007112 <__kernel_rem_pio2+0x35a>
 8007046:	2a00      	cmp	r2, #0
 8007048:	d07b      	beq.n	8007142 <__kernel_rem_pio2+0x38a>
 800704a:	ab0c      	add	r3, sp, #48	; 0x30
 800704c:	f1aa 0a18 	sub.w	sl, sl, #24
 8007050:	f853 302b 	ldr.w	r3, [r3, fp, lsl #2]
 8007054:	2b00      	cmp	r3, #0
 8007056:	f000 80a0 	beq.w	800719a <__kernel_rem_pio2+0x3e2>
 800705a:	ed9f 0b21 	vldr	d0, [pc, #132]	; 80070e0 <__kernel_rem_pio2+0x328>
 800705e:	4650      	mov	r0, sl
 8007060:	f000 fcd6 	bl	8007a10 <scalbn>
 8007064:	4f23      	ldr	r7, [pc, #140]	; (80070f4 <__kernel_rem_pio2+0x33c>)
 8007066:	ec55 4b10 	vmov	r4, r5, d0
 800706a:	46d8      	mov	r8, fp
 800706c:	2600      	movs	r6, #0
 800706e:	f1b8 0f00 	cmp.w	r8, #0
 8007072:	f280 80cf 	bge.w	8007214 <__kernel_rem_pio2+0x45c>
 8007076:	ed9f 8b18 	vldr	d8, [pc, #96]	; 80070d8 <__kernel_rem_pio2+0x320>
 800707a:	465f      	mov	r7, fp
 800707c:	f04f 0800 	mov.w	r8, #0
 8007080:	2f00      	cmp	r7, #0
 8007082:	f2c0 80fd 	blt.w	8007280 <__kernel_rem_pio2+0x4c8>
 8007086:	ab70      	add	r3, sp, #448	; 0x1c0
 8007088:	f8df a074 	ldr.w	sl, [pc, #116]	; 8007100 <__kernel_rem_pio2+0x348>
 800708c:	ec55 4b18 	vmov	r4, r5, d8
 8007090:	eb03 09c7 	add.w	r9, r3, r7, lsl #3
 8007094:	2600      	movs	r6, #0
 8007096:	e0e5      	b.n	8007264 <__kernel_rem_pio2+0x4ac>
 8007098:	2302      	movs	r3, #2
 800709a:	9302      	str	r3, [sp, #8]
 800709c:	e75c      	b.n	8006f58 <__kernel_rem_pio2+0x1a0>
 800709e:	f8db 3000 	ldr.w	r3, [fp]
 80070a2:	b955      	cbnz	r5, 80070ba <__kernel_rem_pio2+0x302>
 80070a4:	b123      	cbz	r3, 80070b0 <__kernel_rem_pio2+0x2f8>
 80070a6:	f1c3 7380 	rsb	r3, r3, #16777216	; 0x1000000
 80070aa:	f8cb 3000 	str.w	r3, [fp]
 80070ae:	2301      	movs	r3, #1
 80070b0:	3201      	adds	r2, #1
 80070b2:	f10b 0b04 	add.w	fp, fp, #4
 80070b6:	461d      	mov	r5, r3
 80070b8:	e755      	b.n	8006f66 <__kernel_rem_pio2+0x1ae>
 80070ba:	1acb      	subs	r3, r1, r3
 80070bc:	f8cb 3000 	str.w	r3, [fp]
 80070c0:	462b      	mov	r3, r5
 80070c2:	e7f5      	b.n	80070b0 <__kernel_rem_pio2+0x2f8>
 80070c4:	1e62      	subs	r2, r4, #1
 80070c6:	ab0c      	add	r3, sp, #48	; 0x30
 80070c8:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80070cc:	f3c3 0316 	ubfx	r3, r3, #0, #23
 80070d0:	a90c      	add	r1, sp, #48	; 0x30
 80070d2:	f841 3022 	str.w	r3, [r1, r2, lsl #2]
 80070d6:	e754      	b.n	8006f82 <__kernel_rem_pio2+0x1ca>
	...
 80070e4:	3ff00000 	.word	0x3ff00000
 80070e8:	08008420 	.word	0x08008420
 80070ec:	40200000 	.word	0x40200000
 80070f0:	3ff00000 	.word	0x3ff00000
 80070f4:	3e700000 	.word	0x3e700000
 80070f8:	41700000 	.word	0x41700000
 80070fc:	3fe00000 	.word	0x3fe00000
 8007100:	080083e0 	.word	0x080083e0
 8007104:	1e62      	subs	r2, r4, #1
 8007106:	ab0c      	add	r3, sp, #48	; 0x30
 8007108:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800710c:	f3c3 0315 	ubfx	r3, r3, #0, #22
 8007110:	e7de      	b.n	80070d0 <__kernel_rem_pio2+0x318>
 8007112:	a90c      	add	r1, sp, #48	; 0x30
 8007114:	f851 1023 	ldr.w	r1, [r1, r3, lsl #2]
 8007118:	3b01      	subs	r3, #1
 800711a:	430a      	orrs	r2, r1
 800711c:	e790      	b.n	8007040 <__kernel_rem_pio2+0x288>
 800711e:	3301      	adds	r3, #1
 8007120:	f852 1d04 	ldr.w	r1, [r2, #-4]!
 8007124:	2900      	cmp	r1, #0
 8007126:	d0fa      	beq.n	800711e <__kernel_rem_pio2+0x366>
 8007128:	9a08      	ldr	r2, [sp, #32]
 800712a:	18e3      	adds	r3, r4, r3
 800712c:	18a6      	adds	r6, r4, r2
 800712e:	aa20      	add	r2, sp, #128	; 0x80
 8007130:	1c65      	adds	r5, r4, #1
 8007132:	eb02 06c6 	add.w	r6, r2, r6, lsl #3
 8007136:	9302      	str	r3, [sp, #8]
 8007138:	9b02      	ldr	r3, [sp, #8]
 800713a:	42ab      	cmp	r3, r5
 800713c:	da04      	bge.n	8007148 <__kernel_rem_pio2+0x390>
 800713e:	461c      	mov	r4, r3
 8007140:	e6b5      	b.n	8006eae <__kernel_rem_pio2+0xf6>
 8007142:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8007144:	2301      	movs	r3, #1
 8007146:	e7eb      	b.n	8007120 <__kernel_rem_pio2+0x368>
 8007148:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800714a:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 800714e:	f7f9 f9f1 	bl	8000534 <__aeabi_i2d>
 8007152:	e8e6 0102 	strd	r0, r1, [r6], #8
 8007156:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8007158:	46b3      	mov	fp, r6
 800715a:	461c      	mov	r4, r3
 800715c:	2700      	movs	r7, #0
 800715e:	f04f 0800 	mov.w	r8, #0
 8007162:	f04f 0900 	mov.w	r9, #0
 8007166:	9b06      	ldr	r3, [sp, #24]
 8007168:	429f      	cmp	r7, r3
 800716a:	dd06      	ble.n	800717a <__kernel_rem_pio2+0x3c2>
 800716c:	ab70      	add	r3, sp, #448	; 0x1c0
 800716e:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8007172:	e9c3 8900 	strd	r8, r9, [r3]
 8007176:	3501      	adds	r5, #1
 8007178:	e7de      	b.n	8007138 <__kernel_rem_pio2+0x380>
 800717a:	e97b 2302 	ldrd	r2, r3, [fp, #-8]!
 800717e:	e8f4 0102 	ldrd	r0, r1, [r4], #8
 8007182:	f7f9 fa41 	bl	8000608 <__aeabi_dmul>
 8007186:	4602      	mov	r2, r0
 8007188:	460b      	mov	r3, r1
 800718a:	4640      	mov	r0, r8
 800718c:	4649      	mov	r1, r9
 800718e:	f7f9 f885 	bl	800029c <__adddf3>
 8007192:	3701      	adds	r7, #1
 8007194:	4680      	mov	r8, r0
 8007196:	4689      	mov	r9, r1
 8007198:	e7e5      	b.n	8007166 <__kernel_rem_pio2+0x3ae>
 800719a:	f10b 3bff 	add.w	fp, fp, #4294967295
 800719e:	e754      	b.n	800704a <__kernel_rem_pio2+0x292>
 80071a0:	ec47 6b10 	vmov	d0, r6, r7
 80071a4:	f1ca 0000 	rsb	r0, sl, #0
 80071a8:	f000 fc32 	bl	8007a10 <scalbn>
 80071ac:	ec57 6b10 	vmov	r6, r7, d0
 80071b0:	4b9f      	ldr	r3, [pc, #636]	; (8007430 <__kernel_rem_pio2+0x678>)
 80071b2:	ee10 0a10 	vmov	r0, s0
 80071b6:	2200      	movs	r2, #0
 80071b8:	4639      	mov	r1, r7
 80071ba:	f7f9 fcab 	bl	8000b14 <__aeabi_dcmpge>
 80071be:	b300      	cbz	r0, 8007202 <__kernel_rem_pio2+0x44a>
 80071c0:	4b9c      	ldr	r3, [pc, #624]	; (8007434 <__kernel_rem_pio2+0x67c>)
 80071c2:	2200      	movs	r2, #0
 80071c4:	4630      	mov	r0, r6
 80071c6:	4639      	mov	r1, r7
 80071c8:	f7f9 fa1e 	bl	8000608 <__aeabi_dmul>
 80071cc:	f7f9 fccc 	bl	8000b68 <__aeabi_d2iz>
 80071d0:	4605      	mov	r5, r0
 80071d2:	f7f9 f9af 	bl	8000534 <__aeabi_i2d>
 80071d6:	4b96      	ldr	r3, [pc, #600]	; (8007430 <__kernel_rem_pio2+0x678>)
 80071d8:	2200      	movs	r2, #0
 80071da:	f7f9 fa15 	bl	8000608 <__aeabi_dmul>
 80071de:	460b      	mov	r3, r1
 80071e0:	4602      	mov	r2, r0
 80071e2:	4639      	mov	r1, r7
 80071e4:	4630      	mov	r0, r6
 80071e6:	f7f9 f857 	bl	8000298 <__aeabi_dsub>
 80071ea:	f7f9 fcbd 	bl	8000b68 <__aeabi_d2iz>
 80071ee:	f104 0b01 	add.w	fp, r4, #1
 80071f2:	ab0c      	add	r3, sp, #48	; 0x30
 80071f4:	f10a 0a18 	add.w	sl, sl, #24
 80071f8:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
 80071fc:	f843 502b 	str.w	r5, [r3, fp, lsl #2]
 8007200:	e72b      	b.n	800705a <__kernel_rem_pio2+0x2a2>
 8007202:	4630      	mov	r0, r6
 8007204:	4639      	mov	r1, r7
 8007206:	f7f9 fcaf 	bl	8000b68 <__aeabi_d2iz>
 800720a:	ab0c      	add	r3, sp, #48	; 0x30
 800720c:	46a3      	mov	fp, r4
 800720e:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
 8007212:	e722      	b.n	800705a <__kernel_rem_pio2+0x2a2>
 8007214:	ab70      	add	r3, sp, #448	; 0x1c0
 8007216:	eb03 09c8 	add.w	r9, r3, r8, lsl #3
 800721a:	ab0c      	add	r3, sp, #48	; 0x30
 800721c:	f853 0028 	ldr.w	r0, [r3, r8, lsl #2]
 8007220:	f7f9 f988 	bl	8000534 <__aeabi_i2d>
 8007224:	4622      	mov	r2, r4
 8007226:	462b      	mov	r3, r5
 8007228:	f7f9 f9ee 	bl	8000608 <__aeabi_dmul>
 800722c:	4632      	mov	r2, r6
 800722e:	e9c9 0100 	strd	r0, r1, [r9]
 8007232:	463b      	mov	r3, r7
 8007234:	4620      	mov	r0, r4
 8007236:	4629      	mov	r1, r5
 8007238:	f7f9 f9e6 	bl	8000608 <__aeabi_dmul>
 800723c:	f108 38ff 	add.w	r8, r8, #4294967295
 8007240:	4604      	mov	r4, r0
 8007242:	460d      	mov	r5, r1
 8007244:	e713      	b.n	800706e <__kernel_rem_pio2+0x2b6>
 8007246:	e8f9 2302 	ldrd	r2, r3, [r9], #8
 800724a:	e8fa 0102 	ldrd	r0, r1, [sl], #8
 800724e:	f7f9 f9db 	bl	8000608 <__aeabi_dmul>
 8007252:	4602      	mov	r2, r0
 8007254:	460b      	mov	r3, r1
 8007256:	4620      	mov	r0, r4
 8007258:	4629      	mov	r1, r5
 800725a:	f7f9 f81f 	bl	800029c <__adddf3>
 800725e:	3601      	adds	r6, #1
 8007260:	4604      	mov	r4, r0
 8007262:	460d      	mov	r5, r1
 8007264:	9b04      	ldr	r3, [sp, #16]
 8007266:	429e      	cmp	r6, r3
 8007268:	dc01      	bgt.n	800726e <__kernel_rem_pio2+0x4b6>
 800726a:	45b0      	cmp	r8, r6
 800726c:	daeb      	bge.n	8007246 <__kernel_rem_pio2+0x48e>
 800726e:	ab48      	add	r3, sp, #288	; 0x120
 8007270:	eb03 03c8 	add.w	r3, r3, r8, lsl #3
 8007274:	e9c3 4500 	strd	r4, r5, [r3]
 8007278:	3f01      	subs	r7, #1
 800727a:	f108 0801 	add.w	r8, r8, #1
 800727e:	e6ff      	b.n	8007080 <__kernel_rem_pio2+0x2c8>
 8007280:	9ba4      	ldr	r3, [sp, #656]	; 0x290
 8007282:	2b02      	cmp	r3, #2
 8007284:	dc0b      	bgt.n	800729e <__kernel_rem_pio2+0x4e6>
 8007286:	2b00      	cmp	r3, #0
 8007288:	dc6e      	bgt.n	8007368 <__kernel_rem_pio2+0x5b0>
 800728a:	d045      	beq.n	8007318 <__kernel_rem_pio2+0x560>
 800728c:	9b07      	ldr	r3, [sp, #28]
 800728e:	f003 0007 	and.w	r0, r3, #7
 8007292:	f50d 7d19 	add.w	sp, sp, #612	; 0x264
 8007296:	ecbd 8b02 	vpop	{d8}
 800729a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800729e:	9ba4      	ldr	r3, [sp, #656]	; 0x290
 80072a0:	2b03      	cmp	r3, #3
 80072a2:	d1f3      	bne.n	800728c <__kernel_rem_pio2+0x4d4>
 80072a4:	ab48      	add	r3, sp, #288	; 0x120
 80072a6:	eb03 0acb 	add.w	sl, r3, fp, lsl #3
 80072aa:	46d0      	mov	r8, sl
 80072ac:	46d9      	mov	r9, fp
 80072ae:	f1b9 0f00 	cmp.w	r9, #0
 80072b2:	f1a8 0808 	sub.w	r8, r8, #8
 80072b6:	dc64      	bgt.n	8007382 <__kernel_rem_pio2+0x5ca>
 80072b8:	465c      	mov	r4, fp
 80072ba:	2c01      	cmp	r4, #1
 80072bc:	f1aa 0a08 	sub.w	sl, sl, #8
 80072c0:	dc7e      	bgt.n	80073c0 <__kernel_rem_pio2+0x608>
 80072c2:	2000      	movs	r0, #0
 80072c4:	2100      	movs	r1, #0
 80072c6:	f1bb 0f01 	cmp.w	fp, #1
 80072ca:	f300 8097 	bgt.w	80073fc <__kernel_rem_pio2+0x644>
 80072ce:	9b02      	ldr	r3, [sp, #8]
 80072d0:	e9dd 5648 	ldrd	r5, r6, [sp, #288]	; 0x120
 80072d4:	e9dd 784a 	ldrd	r7, r8, [sp, #296]	; 0x128
 80072d8:	2b00      	cmp	r3, #0
 80072da:	f040 8099 	bne.w	8007410 <__kernel_rem_pio2+0x658>
 80072de:	9b01      	ldr	r3, [sp, #4]
 80072e0:	e9c3 5600 	strd	r5, r6, [r3]
 80072e4:	e9c3 7802 	strd	r7, r8, [r3, #8]
 80072e8:	e9c3 0104 	strd	r0, r1, [r3, #16]
 80072ec:	e7ce      	b.n	800728c <__kernel_rem_pio2+0x4d4>
 80072ee:	ab48      	add	r3, sp, #288	; 0x120
 80072f0:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
 80072f4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80072f8:	f7f8 ffd0 	bl	800029c <__adddf3>
 80072fc:	f10b 3bff 	add.w	fp, fp, #4294967295
 8007300:	f1bb 0f00 	cmp.w	fp, #0
 8007304:	daf3      	bge.n	80072ee <__kernel_rem_pio2+0x536>
 8007306:	9b02      	ldr	r3, [sp, #8]
 8007308:	b113      	cbz	r3, 8007310 <__kernel_rem_pio2+0x558>
 800730a:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 800730e:	4619      	mov	r1, r3
 8007310:	9b01      	ldr	r3, [sp, #4]
 8007312:	e9c3 0100 	strd	r0, r1, [r3]
 8007316:	e7b9      	b.n	800728c <__kernel_rem_pio2+0x4d4>
 8007318:	2000      	movs	r0, #0
 800731a:	2100      	movs	r1, #0
 800731c:	e7f0      	b.n	8007300 <__kernel_rem_pio2+0x548>
 800731e:	ab48      	add	r3, sp, #288	; 0x120
 8007320:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8007324:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007328:	f7f8 ffb8 	bl	800029c <__adddf3>
 800732c:	3c01      	subs	r4, #1
 800732e:	2c00      	cmp	r4, #0
 8007330:	daf5      	bge.n	800731e <__kernel_rem_pio2+0x566>
 8007332:	9b02      	ldr	r3, [sp, #8]
 8007334:	b1e3      	cbz	r3, 8007370 <__kernel_rem_pio2+0x5b8>
 8007336:	4602      	mov	r2, r0
 8007338:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 800733c:	9c01      	ldr	r4, [sp, #4]
 800733e:	e9c4 2300 	strd	r2, r3, [r4]
 8007342:	4602      	mov	r2, r0
 8007344:	460b      	mov	r3, r1
 8007346:	e9dd 0148 	ldrd	r0, r1, [sp, #288]	; 0x120
 800734a:	f7f8 ffa5 	bl	8000298 <__aeabi_dsub>
 800734e:	ad4a      	add	r5, sp, #296	; 0x128
 8007350:	2401      	movs	r4, #1
 8007352:	45a3      	cmp	fp, r4
 8007354:	da0f      	bge.n	8007376 <__kernel_rem_pio2+0x5be>
 8007356:	9b02      	ldr	r3, [sp, #8]
 8007358:	b113      	cbz	r3, 8007360 <__kernel_rem_pio2+0x5a8>
 800735a:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 800735e:	4619      	mov	r1, r3
 8007360:	9b01      	ldr	r3, [sp, #4]
 8007362:	e9c3 0102 	strd	r0, r1, [r3, #8]
 8007366:	e791      	b.n	800728c <__kernel_rem_pio2+0x4d4>
 8007368:	465c      	mov	r4, fp
 800736a:	2000      	movs	r0, #0
 800736c:	2100      	movs	r1, #0
 800736e:	e7de      	b.n	800732e <__kernel_rem_pio2+0x576>
 8007370:	4602      	mov	r2, r0
 8007372:	460b      	mov	r3, r1
 8007374:	e7e2      	b.n	800733c <__kernel_rem_pio2+0x584>
 8007376:	e8f5 2302 	ldrd	r2, r3, [r5], #8
 800737a:	f7f8 ff8f 	bl	800029c <__adddf3>
 800737e:	3401      	adds	r4, #1
 8007380:	e7e7      	b.n	8007352 <__kernel_rem_pio2+0x59a>
 8007382:	e9d8 4500 	ldrd	r4, r5, [r8]
 8007386:	e9d8 6702 	ldrd	r6, r7, [r8, #8]
 800738a:	4620      	mov	r0, r4
 800738c:	4632      	mov	r2, r6
 800738e:	463b      	mov	r3, r7
 8007390:	4629      	mov	r1, r5
 8007392:	f7f8 ff83 	bl	800029c <__adddf3>
 8007396:	e9cd 0104 	strd	r0, r1, [sp, #16]
 800739a:	4602      	mov	r2, r0
 800739c:	460b      	mov	r3, r1
 800739e:	4620      	mov	r0, r4
 80073a0:	4629      	mov	r1, r5
 80073a2:	f7f8 ff79 	bl	8000298 <__aeabi_dsub>
 80073a6:	4632      	mov	r2, r6
 80073a8:	463b      	mov	r3, r7
 80073aa:	f7f8 ff77 	bl	800029c <__adddf3>
 80073ae:	ed9d 7b04 	vldr	d7, [sp, #16]
 80073b2:	e9c8 0102 	strd	r0, r1, [r8, #8]
 80073b6:	ed88 7b00 	vstr	d7, [r8]
 80073ba:	f109 39ff 	add.w	r9, r9, #4294967295
 80073be:	e776      	b.n	80072ae <__kernel_rem_pio2+0x4f6>
 80073c0:	e9da 8900 	ldrd	r8, r9, [sl]
 80073c4:	e9da 6702 	ldrd	r6, r7, [sl, #8]
 80073c8:	4640      	mov	r0, r8
 80073ca:	4632      	mov	r2, r6
 80073cc:	463b      	mov	r3, r7
 80073ce:	4649      	mov	r1, r9
 80073d0:	f7f8 ff64 	bl	800029c <__adddf3>
 80073d4:	e9cd 0104 	strd	r0, r1, [sp, #16]
 80073d8:	4602      	mov	r2, r0
 80073da:	460b      	mov	r3, r1
 80073dc:	4640      	mov	r0, r8
 80073de:	4649      	mov	r1, r9
 80073e0:	f7f8 ff5a 	bl	8000298 <__aeabi_dsub>
 80073e4:	4632      	mov	r2, r6
 80073e6:	463b      	mov	r3, r7
 80073e8:	f7f8 ff58 	bl	800029c <__adddf3>
 80073ec:	ed9d 7b04 	vldr	d7, [sp, #16]
 80073f0:	e9ca 0102 	strd	r0, r1, [sl, #8]
 80073f4:	ed8a 7b00 	vstr	d7, [sl]
 80073f8:	3c01      	subs	r4, #1
 80073fa:	e75e      	b.n	80072ba <__kernel_rem_pio2+0x502>
 80073fc:	ab48      	add	r3, sp, #288	; 0x120
 80073fe:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
 8007402:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007406:	f7f8 ff49 	bl	800029c <__adddf3>
 800740a:	f10b 3bff 	add.w	fp, fp, #4294967295
 800740e:	e75a      	b.n	80072c6 <__kernel_rem_pio2+0x50e>
 8007410:	9b01      	ldr	r3, [sp, #4]
 8007412:	9a01      	ldr	r2, [sp, #4]
 8007414:	601d      	str	r5, [r3, #0]
 8007416:	f106 4400 	add.w	r4, r6, #2147483648	; 0x80000000
 800741a:	605c      	str	r4, [r3, #4]
 800741c:	609f      	str	r7, [r3, #8]
 800741e:	f108 4300 	add.w	r3, r8, #2147483648	; 0x80000000
 8007422:	60d3      	str	r3, [r2, #12]
 8007424:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8007428:	6110      	str	r0, [r2, #16]
 800742a:	6153      	str	r3, [r2, #20]
 800742c:	e72e      	b.n	800728c <__kernel_rem_pio2+0x4d4>
 800742e:	bf00      	nop
 8007430:	41700000 	.word	0x41700000
 8007434:	3e700000 	.word	0x3e700000

08007438 <__kernel_sin>:
 8007438:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800743c:	ed2d 8b04 	vpush	{d8-d9}
 8007440:	eeb0 8a41 	vmov.f32	s16, s2
 8007444:	eef0 8a61 	vmov.f32	s17, s3
 8007448:	ec55 4b10 	vmov	r4, r5, d0
 800744c:	b083      	sub	sp, #12
 800744e:	f025 4300 	bic.w	r3, r5, #2147483648	; 0x80000000
 8007452:	f1b3 5f79 	cmp.w	r3, #1044381696	; 0x3e400000
 8007456:	9001      	str	r0, [sp, #4]
 8007458:	da06      	bge.n	8007468 <__kernel_sin+0x30>
 800745a:	ee10 0a10 	vmov	r0, s0
 800745e:	4629      	mov	r1, r5
 8007460:	f7f9 fb82 	bl	8000b68 <__aeabi_d2iz>
 8007464:	2800      	cmp	r0, #0
 8007466:	d051      	beq.n	800750c <__kernel_sin+0xd4>
 8007468:	4622      	mov	r2, r4
 800746a:	462b      	mov	r3, r5
 800746c:	4620      	mov	r0, r4
 800746e:	4629      	mov	r1, r5
 8007470:	f7f9 f8ca 	bl	8000608 <__aeabi_dmul>
 8007474:	4682      	mov	sl, r0
 8007476:	468b      	mov	fp, r1
 8007478:	4602      	mov	r2, r0
 800747a:	460b      	mov	r3, r1
 800747c:	4620      	mov	r0, r4
 800747e:	4629      	mov	r1, r5
 8007480:	f7f9 f8c2 	bl	8000608 <__aeabi_dmul>
 8007484:	a341      	add	r3, pc, #260	; (adr r3, 800758c <__kernel_sin+0x154>)
 8007486:	e9d3 2300 	ldrd	r2, r3, [r3]
 800748a:	4680      	mov	r8, r0
 800748c:	4689      	mov	r9, r1
 800748e:	4650      	mov	r0, sl
 8007490:	4659      	mov	r1, fp
 8007492:	f7f9 f8b9 	bl	8000608 <__aeabi_dmul>
 8007496:	a33f      	add	r3, pc, #252	; (adr r3, 8007594 <__kernel_sin+0x15c>)
 8007498:	e9d3 2300 	ldrd	r2, r3, [r3]
 800749c:	f7f8 fefc 	bl	8000298 <__aeabi_dsub>
 80074a0:	4652      	mov	r2, sl
 80074a2:	465b      	mov	r3, fp
 80074a4:	f7f9 f8b0 	bl	8000608 <__aeabi_dmul>
 80074a8:	a33c      	add	r3, pc, #240	; (adr r3, 800759c <__kernel_sin+0x164>)
 80074aa:	e9d3 2300 	ldrd	r2, r3, [r3]
 80074ae:	f7f8 fef5 	bl	800029c <__adddf3>
 80074b2:	4652      	mov	r2, sl
 80074b4:	465b      	mov	r3, fp
 80074b6:	f7f9 f8a7 	bl	8000608 <__aeabi_dmul>
 80074ba:	a33a      	add	r3, pc, #232	; (adr r3, 80075a4 <__kernel_sin+0x16c>)
 80074bc:	e9d3 2300 	ldrd	r2, r3, [r3]
 80074c0:	f7f8 feea 	bl	8000298 <__aeabi_dsub>
 80074c4:	4652      	mov	r2, sl
 80074c6:	465b      	mov	r3, fp
 80074c8:	f7f9 f89e 	bl	8000608 <__aeabi_dmul>
 80074cc:	a337      	add	r3, pc, #220	; (adr r3, 80075ac <__kernel_sin+0x174>)
 80074ce:	e9d3 2300 	ldrd	r2, r3, [r3]
 80074d2:	f7f8 fee3 	bl	800029c <__adddf3>
 80074d6:	9b01      	ldr	r3, [sp, #4]
 80074d8:	4606      	mov	r6, r0
 80074da:	460f      	mov	r7, r1
 80074dc:	b9eb      	cbnz	r3, 800751a <__kernel_sin+0xe2>
 80074de:	4602      	mov	r2, r0
 80074e0:	460b      	mov	r3, r1
 80074e2:	4650      	mov	r0, sl
 80074e4:	4659      	mov	r1, fp
 80074e6:	f7f9 f88f 	bl	8000608 <__aeabi_dmul>
 80074ea:	a325      	add	r3, pc, #148	; (adr r3, 8007580 <__kernel_sin+0x148>)
 80074ec:	e9d3 2300 	ldrd	r2, r3, [r3]
 80074f0:	f7f8 fed2 	bl	8000298 <__aeabi_dsub>
 80074f4:	4642      	mov	r2, r8
 80074f6:	464b      	mov	r3, r9
 80074f8:	f7f9 f886 	bl	8000608 <__aeabi_dmul>
 80074fc:	4602      	mov	r2, r0
 80074fe:	460b      	mov	r3, r1
 8007500:	4620      	mov	r0, r4
 8007502:	4629      	mov	r1, r5
 8007504:	f7f8 feca 	bl	800029c <__adddf3>
 8007508:	4604      	mov	r4, r0
 800750a:	460d      	mov	r5, r1
 800750c:	ec45 4b10 	vmov	d0, r4, r5
 8007510:	b003      	add	sp, #12
 8007512:	ecbd 8b04 	vpop	{d8-d9}
 8007516:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800751a:	4b1b      	ldr	r3, [pc, #108]	; (8007588 <__kernel_sin+0x150>)
 800751c:	ec51 0b18 	vmov	r0, r1, d8
 8007520:	2200      	movs	r2, #0
 8007522:	f7f9 f871 	bl	8000608 <__aeabi_dmul>
 8007526:	4632      	mov	r2, r6
 8007528:	ec41 0b19 	vmov	d9, r0, r1
 800752c:	463b      	mov	r3, r7
 800752e:	4640      	mov	r0, r8
 8007530:	4649      	mov	r1, r9
 8007532:	f7f9 f869 	bl	8000608 <__aeabi_dmul>
 8007536:	4602      	mov	r2, r0
 8007538:	460b      	mov	r3, r1
 800753a:	ec51 0b19 	vmov	r0, r1, d9
 800753e:	f7f8 feab 	bl	8000298 <__aeabi_dsub>
 8007542:	4652      	mov	r2, sl
 8007544:	465b      	mov	r3, fp
 8007546:	f7f9 f85f 	bl	8000608 <__aeabi_dmul>
 800754a:	ec53 2b18 	vmov	r2, r3, d8
 800754e:	f7f8 fea3 	bl	8000298 <__aeabi_dsub>
 8007552:	a30b      	add	r3, pc, #44	; (adr r3, 8007580 <__kernel_sin+0x148>)
 8007554:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007558:	4606      	mov	r6, r0
 800755a:	460f      	mov	r7, r1
 800755c:	4640      	mov	r0, r8
 800755e:	4649      	mov	r1, r9
 8007560:	f7f9 f852 	bl	8000608 <__aeabi_dmul>
 8007564:	4602      	mov	r2, r0
 8007566:	460b      	mov	r3, r1
 8007568:	4630      	mov	r0, r6
 800756a:	4639      	mov	r1, r7
 800756c:	f7f8 fe96 	bl	800029c <__adddf3>
 8007570:	4602      	mov	r2, r0
 8007572:	460b      	mov	r3, r1
 8007574:	4620      	mov	r0, r4
 8007576:	4629      	mov	r1, r5
 8007578:	f7f8 fe8e 	bl	8000298 <__aeabi_dsub>
 800757c:	e7c4      	b.n	8007508 <__kernel_sin+0xd0>
 800757e:	bf00      	nop
 8007580:	55555549 	.word	0x55555549
 8007584:	3fc55555 	.word	0x3fc55555
 8007588:	3fe00000 	.word	0x3fe00000
 800758c:	5acfd57c 	.word	0x5acfd57c
 8007590:	3de5d93a 	.word	0x3de5d93a
 8007594:	8a2b9ceb 	.word	0x8a2b9ceb
 8007598:	3e5ae5e6 	.word	0x3e5ae5e6
 800759c:	57b1fe7d 	.word	0x57b1fe7d
 80075a0:	3ec71de3 	.word	0x3ec71de3
 80075a4:	19c161d5 	.word	0x19c161d5
 80075a8:	3f2a01a0 	.word	0x3f2a01a0
 80075ac:	1110f8a6 	.word	0x1110f8a6
 80075b0:	3f811111 	.word	0x3f811111
 80075b4:	00000000 	.word	0x00000000

080075b8 <atan>:
 80075b8:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80075bc:	ec55 4b10 	vmov	r4, r5, d0
 80075c0:	4bc3      	ldr	r3, [pc, #780]	; (80078d0 <atan+0x318>)
 80075c2:	f025 4600 	bic.w	r6, r5, #2147483648	; 0x80000000
 80075c6:	429e      	cmp	r6, r3
 80075c8:	46ab      	mov	fp, r5
 80075ca:	dd18      	ble.n	80075fe <atan+0x46>
 80075cc:	4bc1      	ldr	r3, [pc, #772]	; (80078d4 <atan+0x31c>)
 80075ce:	429e      	cmp	r6, r3
 80075d0:	dc01      	bgt.n	80075d6 <atan+0x1e>
 80075d2:	d109      	bne.n	80075e8 <atan+0x30>
 80075d4:	b144      	cbz	r4, 80075e8 <atan+0x30>
 80075d6:	4622      	mov	r2, r4
 80075d8:	462b      	mov	r3, r5
 80075da:	4620      	mov	r0, r4
 80075dc:	4629      	mov	r1, r5
 80075de:	f7f8 fe5d 	bl	800029c <__adddf3>
 80075e2:	4604      	mov	r4, r0
 80075e4:	460d      	mov	r5, r1
 80075e6:	e006      	b.n	80075f6 <atan+0x3e>
 80075e8:	f1bb 0f00 	cmp.w	fp, #0
 80075ec:	f300 8131 	bgt.w	8007852 <atan+0x29a>
 80075f0:	a59b      	add	r5, pc, #620	; (adr r5, 8007860 <atan+0x2a8>)
 80075f2:	e9d5 4500 	ldrd	r4, r5, [r5]
 80075f6:	ec45 4b10 	vmov	d0, r4, r5
 80075fa:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80075fe:	4bb6      	ldr	r3, [pc, #728]	; (80078d8 <atan+0x320>)
 8007600:	429e      	cmp	r6, r3
 8007602:	dc14      	bgt.n	800762e <atan+0x76>
 8007604:	f1a3 73de 	sub.w	r3, r3, #29097984	; 0x1bc0000
 8007608:	429e      	cmp	r6, r3
 800760a:	dc0d      	bgt.n	8007628 <atan+0x70>
 800760c:	a396      	add	r3, pc, #600	; (adr r3, 8007868 <atan+0x2b0>)
 800760e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007612:	ee10 0a10 	vmov	r0, s0
 8007616:	4629      	mov	r1, r5
 8007618:	f7f8 fe40 	bl	800029c <__adddf3>
 800761c:	4baf      	ldr	r3, [pc, #700]	; (80078dc <atan+0x324>)
 800761e:	2200      	movs	r2, #0
 8007620:	f7f9 fa82 	bl	8000b28 <__aeabi_dcmpgt>
 8007624:	2800      	cmp	r0, #0
 8007626:	d1e6      	bne.n	80075f6 <atan+0x3e>
 8007628:	f04f 3aff 	mov.w	sl, #4294967295
 800762c:	e02b      	b.n	8007686 <atan+0xce>
 800762e:	f000 f963 	bl	80078f8 <fabs>
 8007632:	4bab      	ldr	r3, [pc, #684]	; (80078e0 <atan+0x328>)
 8007634:	429e      	cmp	r6, r3
 8007636:	ec55 4b10 	vmov	r4, r5, d0
 800763a:	f300 80bf 	bgt.w	80077bc <atan+0x204>
 800763e:	f5a3 2350 	sub.w	r3, r3, #851968	; 0xd0000
 8007642:	429e      	cmp	r6, r3
 8007644:	f300 80a0 	bgt.w	8007788 <atan+0x1d0>
 8007648:	ee10 2a10 	vmov	r2, s0
 800764c:	ee10 0a10 	vmov	r0, s0
 8007650:	462b      	mov	r3, r5
 8007652:	4629      	mov	r1, r5
 8007654:	f7f8 fe22 	bl	800029c <__adddf3>
 8007658:	4ba0      	ldr	r3, [pc, #640]	; (80078dc <atan+0x324>)
 800765a:	2200      	movs	r2, #0
 800765c:	f7f8 fe1c 	bl	8000298 <__aeabi_dsub>
 8007660:	2200      	movs	r2, #0
 8007662:	4606      	mov	r6, r0
 8007664:	460f      	mov	r7, r1
 8007666:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800766a:	4620      	mov	r0, r4
 800766c:	4629      	mov	r1, r5
 800766e:	f7f8 fe15 	bl	800029c <__adddf3>
 8007672:	4602      	mov	r2, r0
 8007674:	460b      	mov	r3, r1
 8007676:	4630      	mov	r0, r6
 8007678:	4639      	mov	r1, r7
 800767a:	f7f9 f8ef 	bl	800085c <__aeabi_ddiv>
 800767e:	f04f 0a00 	mov.w	sl, #0
 8007682:	4604      	mov	r4, r0
 8007684:	460d      	mov	r5, r1
 8007686:	4622      	mov	r2, r4
 8007688:	462b      	mov	r3, r5
 800768a:	4620      	mov	r0, r4
 800768c:	4629      	mov	r1, r5
 800768e:	f7f8 ffbb 	bl	8000608 <__aeabi_dmul>
 8007692:	4602      	mov	r2, r0
 8007694:	460b      	mov	r3, r1
 8007696:	4680      	mov	r8, r0
 8007698:	4689      	mov	r9, r1
 800769a:	f7f8 ffb5 	bl	8000608 <__aeabi_dmul>
 800769e:	a374      	add	r3, pc, #464	; (adr r3, 8007870 <atan+0x2b8>)
 80076a0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80076a4:	4606      	mov	r6, r0
 80076a6:	460f      	mov	r7, r1
 80076a8:	f7f8 ffae 	bl	8000608 <__aeabi_dmul>
 80076ac:	a372      	add	r3, pc, #456	; (adr r3, 8007878 <atan+0x2c0>)
 80076ae:	e9d3 2300 	ldrd	r2, r3, [r3]
 80076b2:	f7f8 fdf3 	bl	800029c <__adddf3>
 80076b6:	4632      	mov	r2, r6
 80076b8:	463b      	mov	r3, r7
 80076ba:	f7f8 ffa5 	bl	8000608 <__aeabi_dmul>
 80076be:	a370      	add	r3, pc, #448	; (adr r3, 8007880 <atan+0x2c8>)
 80076c0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80076c4:	f7f8 fdea 	bl	800029c <__adddf3>
 80076c8:	4632      	mov	r2, r6
 80076ca:	463b      	mov	r3, r7
 80076cc:	f7f8 ff9c 	bl	8000608 <__aeabi_dmul>
 80076d0:	a36d      	add	r3, pc, #436	; (adr r3, 8007888 <atan+0x2d0>)
 80076d2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80076d6:	f7f8 fde1 	bl	800029c <__adddf3>
 80076da:	4632      	mov	r2, r6
 80076dc:	463b      	mov	r3, r7
 80076de:	f7f8 ff93 	bl	8000608 <__aeabi_dmul>
 80076e2:	a36b      	add	r3, pc, #428	; (adr r3, 8007890 <atan+0x2d8>)
 80076e4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80076e8:	f7f8 fdd8 	bl	800029c <__adddf3>
 80076ec:	4632      	mov	r2, r6
 80076ee:	463b      	mov	r3, r7
 80076f0:	f7f8 ff8a 	bl	8000608 <__aeabi_dmul>
 80076f4:	a368      	add	r3, pc, #416	; (adr r3, 8007898 <atan+0x2e0>)
 80076f6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80076fa:	f7f8 fdcf 	bl	800029c <__adddf3>
 80076fe:	4642      	mov	r2, r8
 8007700:	464b      	mov	r3, r9
 8007702:	f7f8 ff81 	bl	8000608 <__aeabi_dmul>
 8007706:	a366      	add	r3, pc, #408	; (adr r3, 80078a0 <atan+0x2e8>)
 8007708:	e9d3 2300 	ldrd	r2, r3, [r3]
 800770c:	4680      	mov	r8, r0
 800770e:	4689      	mov	r9, r1
 8007710:	4630      	mov	r0, r6
 8007712:	4639      	mov	r1, r7
 8007714:	f7f8 ff78 	bl	8000608 <__aeabi_dmul>
 8007718:	a363      	add	r3, pc, #396	; (adr r3, 80078a8 <atan+0x2f0>)
 800771a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800771e:	f7f8 fdbb 	bl	8000298 <__aeabi_dsub>
 8007722:	4632      	mov	r2, r6
 8007724:	463b      	mov	r3, r7
 8007726:	f7f8 ff6f 	bl	8000608 <__aeabi_dmul>
 800772a:	a361      	add	r3, pc, #388	; (adr r3, 80078b0 <atan+0x2f8>)
 800772c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007730:	f7f8 fdb2 	bl	8000298 <__aeabi_dsub>
 8007734:	4632      	mov	r2, r6
 8007736:	463b      	mov	r3, r7
 8007738:	f7f8 ff66 	bl	8000608 <__aeabi_dmul>
 800773c:	a35e      	add	r3, pc, #376	; (adr r3, 80078b8 <atan+0x300>)
 800773e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007742:	f7f8 fda9 	bl	8000298 <__aeabi_dsub>
 8007746:	4632      	mov	r2, r6
 8007748:	463b      	mov	r3, r7
 800774a:	f7f8 ff5d 	bl	8000608 <__aeabi_dmul>
 800774e:	a35c      	add	r3, pc, #368	; (adr r3, 80078c0 <atan+0x308>)
 8007750:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007754:	f7f8 fda0 	bl	8000298 <__aeabi_dsub>
 8007758:	4632      	mov	r2, r6
 800775a:	463b      	mov	r3, r7
 800775c:	f7f8 ff54 	bl	8000608 <__aeabi_dmul>
 8007760:	4602      	mov	r2, r0
 8007762:	460b      	mov	r3, r1
 8007764:	4640      	mov	r0, r8
 8007766:	4649      	mov	r1, r9
 8007768:	f7f8 fd98 	bl	800029c <__adddf3>
 800776c:	4622      	mov	r2, r4
 800776e:	462b      	mov	r3, r5
 8007770:	f7f8 ff4a 	bl	8000608 <__aeabi_dmul>
 8007774:	f1ba 3fff 	cmp.w	sl, #4294967295
 8007778:	4602      	mov	r2, r0
 800777a:	460b      	mov	r3, r1
 800777c:	d14b      	bne.n	8007816 <atan+0x25e>
 800777e:	4620      	mov	r0, r4
 8007780:	4629      	mov	r1, r5
 8007782:	f7f8 fd89 	bl	8000298 <__aeabi_dsub>
 8007786:	e72c      	b.n	80075e2 <atan+0x2a>
 8007788:	ee10 0a10 	vmov	r0, s0
 800778c:	4b53      	ldr	r3, [pc, #332]	; (80078dc <atan+0x324>)
 800778e:	2200      	movs	r2, #0
 8007790:	4629      	mov	r1, r5
 8007792:	f7f8 fd81 	bl	8000298 <__aeabi_dsub>
 8007796:	4b51      	ldr	r3, [pc, #324]	; (80078dc <atan+0x324>)
 8007798:	4606      	mov	r6, r0
 800779a:	460f      	mov	r7, r1
 800779c:	2200      	movs	r2, #0
 800779e:	4620      	mov	r0, r4
 80077a0:	4629      	mov	r1, r5
 80077a2:	f7f8 fd7b 	bl	800029c <__adddf3>
 80077a6:	4602      	mov	r2, r0
 80077a8:	460b      	mov	r3, r1
 80077aa:	4630      	mov	r0, r6
 80077ac:	4639      	mov	r1, r7
 80077ae:	f7f9 f855 	bl	800085c <__aeabi_ddiv>
 80077b2:	f04f 0a01 	mov.w	sl, #1
 80077b6:	4604      	mov	r4, r0
 80077b8:	460d      	mov	r5, r1
 80077ba:	e764      	b.n	8007686 <atan+0xce>
 80077bc:	4b49      	ldr	r3, [pc, #292]	; (80078e4 <atan+0x32c>)
 80077be:	429e      	cmp	r6, r3
 80077c0:	da1d      	bge.n	80077fe <atan+0x246>
 80077c2:	ee10 0a10 	vmov	r0, s0
 80077c6:	4b48      	ldr	r3, [pc, #288]	; (80078e8 <atan+0x330>)
 80077c8:	2200      	movs	r2, #0
 80077ca:	4629      	mov	r1, r5
 80077cc:	f7f8 fd64 	bl	8000298 <__aeabi_dsub>
 80077d0:	4b45      	ldr	r3, [pc, #276]	; (80078e8 <atan+0x330>)
 80077d2:	4606      	mov	r6, r0
 80077d4:	460f      	mov	r7, r1
 80077d6:	2200      	movs	r2, #0
 80077d8:	4620      	mov	r0, r4
 80077da:	4629      	mov	r1, r5
 80077dc:	f7f8 ff14 	bl	8000608 <__aeabi_dmul>
 80077e0:	4b3e      	ldr	r3, [pc, #248]	; (80078dc <atan+0x324>)
 80077e2:	2200      	movs	r2, #0
 80077e4:	f7f8 fd5a 	bl	800029c <__adddf3>
 80077e8:	4602      	mov	r2, r0
 80077ea:	460b      	mov	r3, r1
 80077ec:	4630      	mov	r0, r6
 80077ee:	4639      	mov	r1, r7
 80077f0:	f7f9 f834 	bl	800085c <__aeabi_ddiv>
 80077f4:	f04f 0a02 	mov.w	sl, #2
 80077f8:	4604      	mov	r4, r0
 80077fa:	460d      	mov	r5, r1
 80077fc:	e743      	b.n	8007686 <atan+0xce>
 80077fe:	462b      	mov	r3, r5
 8007800:	ee10 2a10 	vmov	r2, s0
 8007804:	4939      	ldr	r1, [pc, #228]	; (80078ec <atan+0x334>)
 8007806:	2000      	movs	r0, #0
 8007808:	f7f9 f828 	bl	800085c <__aeabi_ddiv>
 800780c:	f04f 0a03 	mov.w	sl, #3
 8007810:	4604      	mov	r4, r0
 8007812:	460d      	mov	r5, r1
 8007814:	e737      	b.n	8007686 <atan+0xce>
 8007816:	4b36      	ldr	r3, [pc, #216]	; (80078f0 <atan+0x338>)
 8007818:	4e36      	ldr	r6, [pc, #216]	; (80078f4 <atan+0x33c>)
 800781a:	eb06 06ca 	add.w	r6, r6, sl, lsl #3
 800781e:	eb03 0aca 	add.w	sl, r3, sl, lsl #3
 8007822:	e9da 2300 	ldrd	r2, r3, [sl]
 8007826:	f7f8 fd37 	bl	8000298 <__aeabi_dsub>
 800782a:	4622      	mov	r2, r4
 800782c:	462b      	mov	r3, r5
 800782e:	f7f8 fd33 	bl	8000298 <__aeabi_dsub>
 8007832:	4602      	mov	r2, r0
 8007834:	460b      	mov	r3, r1
 8007836:	e9d6 0100 	ldrd	r0, r1, [r6]
 800783a:	f7f8 fd2d 	bl	8000298 <__aeabi_dsub>
 800783e:	f1bb 0f00 	cmp.w	fp, #0
 8007842:	4604      	mov	r4, r0
 8007844:	460d      	mov	r5, r1
 8007846:	f6bf aed6 	bge.w	80075f6 <atan+0x3e>
 800784a:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 800784e:	461d      	mov	r5, r3
 8007850:	e6d1      	b.n	80075f6 <atan+0x3e>
 8007852:	a51d      	add	r5, pc, #116	; (adr r5, 80078c8 <atan+0x310>)
 8007854:	e9d5 4500 	ldrd	r4, r5, [r5]
 8007858:	e6cd      	b.n	80075f6 <atan+0x3e>
 800785a:	bf00      	nop
 800785c:	f3af 8000 	nop.w
 8007860:	54442d18 	.word	0x54442d18
 8007864:	bff921fb 	.word	0xbff921fb
 8007868:	8800759c 	.word	0x8800759c
 800786c:	7e37e43c 	.word	0x7e37e43c
 8007870:	e322da11 	.word	0xe322da11
 8007874:	3f90ad3a 	.word	0x3f90ad3a
 8007878:	24760deb 	.word	0x24760deb
 800787c:	3fa97b4b 	.word	0x3fa97b4b
 8007880:	a0d03d51 	.word	0xa0d03d51
 8007884:	3fb10d66 	.word	0x3fb10d66
 8007888:	c54c206e 	.word	0xc54c206e
 800788c:	3fb745cd 	.word	0x3fb745cd
 8007890:	920083ff 	.word	0x920083ff
 8007894:	3fc24924 	.word	0x3fc24924
 8007898:	5555550d 	.word	0x5555550d
 800789c:	3fd55555 	.word	0x3fd55555
 80078a0:	2c6a6c2f 	.word	0x2c6a6c2f
 80078a4:	bfa2b444 	.word	0xbfa2b444
 80078a8:	52defd9a 	.word	0x52defd9a
 80078ac:	3fadde2d 	.word	0x3fadde2d
 80078b0:	af749a6d 	.word	0xaf749a6d
 80078b4:	3fb3b0f2 	.word	0x3fb3b0f2
 80078b8:	fe231671 	.word	0xfe231671
 80078bc:	3fbc71c6 	.word	0x3fbc71c6
 80078c0:	9998ebc4 	.word	0x9998ebc4
 80078c4:	3fc99999 	.word	0x3fc99999
 80078c8:	54442d18 	.word	0x54442d18
 80078cc:	3ff921fb 	.word	0x3ff921fb
 80078d0:	440fffff 	.word	0x440fffff
 80078d4:	7ff00000 	.word	0x7ff00000
 80078d8:	3fdbffff 	.word	0x3fdbffff
 80078dc:	3ff00000 	.word	0x3ff00000
 80078e0:	3ff2ffff 	.word	0x3ff2ffff
 80078e4:	40038000 	.word	0x40038000
 80078e8:	3ff80000 	.word	0x3ff80000
 80078ec:	bff00000 	.word	0xbff00000
 80078f0:	08008450 	.word	0x08008450
 80078f4:	08008430 	.word	0x08008430

080078f8 <fabs>:
 80078f8:	ec51 0b10 	vmov	r0, r1, d0
 80078fc:	ee10 2a10 	vmov	r2, s0
 8007900:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
 8007904:	ec43 2b10 	vmov	d0, r2, r3
 8007908:	4770      	bx	lr
 800790a:	0000      	movs	r0, r0
 800790c:	0000      	movs	r0, r0
	...

08007910 <floor>:
 8007910:	ec51 0b10 	vmov	r0, r1, d0
 8007914:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007918:	f3c1 570a 	ubfx	r7, r1, #20, #11
 800791c:	f2a7 36ff 	subw	r6, r7, #1023	; 0x3ff
 8007920:	2e13      	cmp	r6, #19
 8007922:	ee10 5a10 	vmov	r5, s0
 8007926:	ee10 8a10 	vmov	r8, s0
 800792a:	460c      	mov	r4, r1
 800792c:	dc32      	bgt.n	8007994 <floor+0x84>
 800792e:	2e00      	cmp	r6, #0
 8007930:	da14      	bge.n	800795c <floor+0x4c>
 8007932:	a333      	add	r3, pc, #204	; (adr r3, 8007a00 <floor+0xf0>)
 8007934:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007938:	f7f8 fcb0 	bl	800029c <__adddf3>
 800793c:	2200      	movs	r2, #0
 800793e:	2300      	movs	r3, #0
 8007940:	f7f9 f8f2 	bl	8000b28 <__aeabi_dcmpgt>
 8007944:	b138      	cbz	r0, 8007956 <floor+0x46>
 8007946:	2c00      	cmp	r4, #0
 8007948:	da57      	bge.n	80079fa <floor+0xea>
 800794a:	f024 4300 	bic.w	r3, r4, #2147483648	; 0x80000000
 800794e:	431d      	orrs	r5, r3
 8007950:	d001      	beq.n	8007956 <floor+0x46>
 8007952:	4c2d      	ldr	r4, [pc, #180]	; (8007a08 <floor+0xf8>)
 8007954:	2500      	movs	r5, #0
 8007956:	4621      	mov	r1, r4
 8007958:	4628      	mov	r0, r5
 800795a:	e025      	b.n	80079a8 <floor+0x98>
 800795c:	4f2b      	ldr	r7, [pc, #172]	; (8007a0c <floor+0xfc>)
 800795e:	4137      	asrs	r7, r6
 8007960:	ea01 0307 	and.w	r3, r1, r7
 8007964:	4303      	orrs	r3, r0
 8007966:	d01f      	beq.n	80079a8 <floor+0x98>
 8007968:	a325      	add	r3, pc, #148	; (adr r3, 8007a00 <floor+0xf0>)
 800796a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800796e:	f7f8 fc95 	bl	800029c <__adddf3>
 8007972:	2200      	movs	r2, #0
 8007974:	2300      	movs	r3, #0
 8007976:	f7f9 f8d7 	bl	8000b28 <__aeabi_dcmpgt>
 800797a:	2800      	cmp	r0, #0
 800797c:	d0eb      	beq.n	8007956 <floor+0x46>
 800797e:	2c00      	cmp	r4, #0
 8007980:	bfbe      	ittt	lt
 8007982:	f44f 1380 	movlt.w	r3, #1048576	; 0x100000
 8007986:	fa43 f606 	asrlt.w	r6, r3, r6
 800798a:	19a4      	addlt	r4, r4, r6
 800798c:	ea24 0407 	bic.w	r4, r4, r7
 8007990:	2500      	movs	r5, #0
 8007992:	e7e0      	b.n	8007956 <floor+0x46>
 8007994:	2e33      	cmp	r6, #51	; 0x33
 8007996:	dd0b      	ble.n	80079b0 <floor+0xa0>
 8007998:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 800799c:	d104      	bne.n	80079a8 <floor+0x98>
 800799e:	ee10 2a10 	vmov	r2, s0
 80079a2:	460b      	mov	r3, r1
 80079a4:	f7f8 fc7a 	bl	800029c <__adddf3>
 80079a8:	ec41 0b10 	vmov	d0, r0, r1
 80079ac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80079b0:	f2a7 4713 	subw	r7, r7, #1043	; 0x413
 80079b4:	f04f 33ff 	mov.w	r3, #4294967295
 80079b8:	fa23 f707 	lsr.w	r7, r3, r7
 80079bc:	4207      	tst	r7, r0
 80079be:	d0f3      	beq.n	80079a8 <floor+0x98>
 80079c0:	a30f      	add	r3, pc, #60	; (adr r3, 8007a00 <floor+0xf0>)
 80079c2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80079c6:	f7f8 fc69 	bl	800029c <__adddf3>
 80079ca:	2200      	movs	r2, #0
 80079cc:	2300      	movs	r3, #0
 80079ce:	f7f9 f8ab 	bl	8000b28 <__aeabi_dcmpgt>
 80079d2:	2800      	cmp	r0, #0
 80079d4:	d0bf      	beq.n	8007956 <floor+0x46>
 80079d6:	2c00      	cmp	r4, #0
 80079d8:	da02      	bge.n	80079e0 <floor+0xd0>
 80079da:	2e14      	cmp	r6, #20
 80079dc:	d103      	bne.n	80079e6 <floor+0xd6>
 80079de:	3401      	adds	r4, #1
 80079e0:	ea25 0507 	bic.w	r5, r5, r7
 80079e4:	e7b7      	b.n	8007956 <floor+0x46>
 80079e6:	2301      	movs	r3, #1
 80079e8:	f1c6 0634 	rsb	r6, r6, #52	; 0x34
 80079ec:	fa03 f606 	lsl.w	r6, r3, r6
 80079f0:	4435      	add	r5, r6
 80079f2:	4545      	cmp	r5, r8
 80079f4:	bf38      	it	cc
 80079f6:	18e4      	addcc	r4, r4, r3
 80079f8:	e7f2      	b.n	80079e0 <floor+0xd0>
 80079fa:	2500      	movs	r5, #0
 80079fc:	462c      	mov	r4, r5
 80079fe:	e7aa      	b.n	8007956 <floor+0x46>
 8007a00:	8800759c 	.word	0x8800759c
 8007a04:	7e37e43c 	.word	0x7e37e43c
 8007a08:	bff00000 	.word	0xbff00000
 8007a0c:	000fffff 	.word	0x000fffff

08007a10 <scalbn>:
 8007a10:	b570      	push	{r4, r5, r6, lr}
 8007a12:	ec55 4b10 	vmov	r4, r5, d0
 8007a16:	f3c5 520a 	ubfx	r2, r5, #20, #11
 8007a1a:	4606      	mov	r6, r0
 8007a1c:	462b      	mov	r3, r5
 8007a1e:	b99a      	cbnz	r2, 8007a48 <scalbn+0x38>
 8007a20:	f025 4300 	bic.w	r3, r5, #2147483648	; 0x80000000
 8007a24:	4323      	orrs	r3, r4
 8007a26:	d036      	beq.n	8007a96 <scalbn+0x86>
 8007a28:	4b39      	ldr	r3, [pc, #228]	; (8007b10 <scalbn+0x100>)
 8007a2a:	4629      	mov	r1, r5
 8007a2c:	ee10 0a10 	vmov	r0, s0
 8007a30:	2200      	movs	r2, #0
 8007a32:	f7f8 fde9 	bl	8000608 <__aeabi_dmul>
 8007a36:	4b37      	ldr	r3, [pc, #220]	; (8007b14 <scalbn+0x104>)
 8007a38:	429e      	cmp	r6, r3
 8007a3a:	4604      	mov	r4, r0
 8007a3c:	460d      	mov	r5, r1
 8007a3e:	da10      	bge.n	8007a62 <scalbn+0x52>
 8007a40:	a32b      	add	r3, pc, #172	; (adr r3, 8007af0 <scalbn+0xe0>)
 8007a42:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007a46:	e03a      	b.n	8007abe <scalbn+0xae>
 8007a48:	f240 71ff 	movw	r1, #2047	; 0x7ff
 8007a4c:	428a      	cmp	r2, r1
 8007a4e:	d10c      	bne.n	8007a6a <scalbn+0x5a>
 8007a50:	ee10 2a10 	vmov	r2, s0
 8007a54:	4620      	mov	r0, r4
 8007a56:	4629      	mov	r1, r5
 8007a58:	f7f8 fc20 	bl	800029c <__adddf3>
 8007a5c:	4604      	mov	r4, r0
 8007a5e:	460d      	mov	r5, r1
 8007a60:	e019      	b.n	8007a96 <scalbn+0x86>
 8007a62:	f3c1 520a 	ubfx	r2, r1, #20, #11
 8007a66:	460b      	mov	r3, r1
 8007a68:	3a36      	subs	r2, #54	; 0x36
 8007a6a:	4432      	add	r2, r6
 8007a6c:	f240 71fe 	movw	r1, #2046	; 0x7fe
 8007a70:	428a      	cmp	r2, r1
 8007a72:	dd08      	ble.n	8007a86 <scalbn+0x76>
 8007a74:	2d00      	cmp	r5, #0
 8007a76:	a120      	add	r1, pc, #128	; (adr r1, 8007af8 <scalbn+0xe8>)
 8007a78:	e9d1 0100 	ldrd	r0, r1, [r1]
 8007a7c:	da1c      	bge.n	8007ab8 <scalbn+0xa8>
 8007a7e:	a120      	add	r1, pc, #128	; (adr r1, 8007b00 <scalbn+0xf0>)
 8007a80:	e9d1 0100 	ldrd	r0, r1, [r1]
 8007a84:	e018      	b.n	8007ab8 <scalbn+0xa8>
 8007a86:	2a00      	cmp	r2, #0
 8007a88:	dd08      	ble.n	8007a9c <scalbn+0x8c>
 8007a8a:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 8007a8e:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
 8007a92:	ea43 5502 	orr.w	r5, r3, r2, lsl #20
 8007a96:	ec45 4b10 	vmov	d0, r4, r5
 8007a9a:	bd70      	pop	{r4, r5, r6, pc}
 8007a9c:	f112 0f35 	cmn.w	r2, #53	; 0x35
 8007aa0:	da19      	bge.n	8007ad6 <scalbn+0xc6>
 8007aa2:	f24c 3350 	movw	r3, #50000	; 0xc350
 8007aa6:	429e      	cmp	r6, r3
 8007aa8:	f005 4300 	and.w	r3, r5, #2147483648	; 0x80000000
 8007aac:	dd0a      	ble.n	8007ac4 <scalbn+0xb4>
 8007aae:	a112      	add	r1, pc, #72	; (adr r1, 8007af8 <scalbn+0xe8>)
 8007ab0:	e9d1 0100 	ldrd	r0, r1, [r1]
 8007ab4:	2b00      	cmp	r3, #0
 8007ab6:	d1e2      	bne.n	8007a7e <scalbn+0x6e>
 8007ab8:	a30f      	add	r3, pc, #60	; (adr r3, 8007af8 <scalbn+0xe8>)
 8007aba:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007abe:	f7f8 fda3 	bl	8000608 <__aeabi_dmul>
 8007ac2:	e7cb      	b.n	8007a5c <scalbn+0x4c>
 8007ac4:	a10a      	add	r1, pc, #40	; (adr r1, 8007af0 <scalbn+0xe0>)
 8007ac6:	e9d1 0100 	ldrd	r0, r1, [r1]
 8007aca:	2b00      	cmp	r3, #0
 8007acc:	d0b8      	beq.n	8007a40 <scalbn+0x30>
 8007ace:	a10e      	add	r1, pc, #56	; (adr r1, 8007b08 <scalbn+0xf8>)
 8007ad0:	e9d1 0100 	ldrd	r0, r1, [r1]
 8007ad4:	e7b4      	b.n	8007a40 <scalbn+0x30>
 8007ad6:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 8007ada:	3236      	adds	r2, #54	; 0x36
 8007adc:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
 8007ae0:	ea43 5102 	orr.w	r1, r3, r2, lsl #20
 8007ae4:	4620      	mov	r0, r4
 8007ae6:	4b0c      	ldr	r3, [pc, #48]	; (8007b18 <scalbn+0x108>)
 8007ae8:	2200      	movs	r2, #0
 8007aea:	e7e8      	b.n	8007abe <scalbn+0xae>
 8007aec:	f3af 8000 	nop.w
 8007af0:	c2f8f359 	.word	0xc2f8f359
 8007af4:	01a56e1f 	.word	0x01a56e1f
 8007af8:	8800759c 	.word	0x8800759c
 8007afc:	7e37e43c 	.word	0x7e37e43c
 8007b00:	8800759c 	.word	0x8800759c
 8007b04:	fe37e43c 	.word	0xfe37e43c
 8007b08:	c2f8f359 	.word	0xc2f8f359
 8007b0c:	81a56e1f 	.word	0x81a56e1f
 8007b10:	43500000 	.word	0x43500000
 8007b14:	ffff3cb0 	.word	0xffff3cb0
 8007b18:	3c900000 	.word	0x3c900000

08007b1c <_init>:
 8007b1c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007b1e:	bf00      	nop
 8007b20:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8007b22:	bc08      	pop	{r3}
 8007b24:	469e      	mov	lr, r3
 8007b26:	4770      	bx	lr

08007b28 <_fini>:
 8007b28:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007b2a:	bf00      	nop
 8007b2c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8007b2e:	bc08      	pop	{r3}
 8007b30:	469e      	mov	lr, r3
 8007b32:	4770      	bx	lr
